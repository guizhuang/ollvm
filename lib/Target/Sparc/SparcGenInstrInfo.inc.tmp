/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace SP {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    CFI_INSTRUCTION	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    STACKMAP	= 17,
    PATCHPOINT	= 18,
    LOAD_STACK_GUARD	= 19,
    STATEPOINT	= 20,
    LOCAL_ESCAPE	= 21,
    FAULTING_LOAD_OP	= 22,
    PATCHABLE_OP	= 23,
    PATCHABLE_FUNCTION_ENTER	= 24,
    PATCHABLE_RET	= 25,
    G_ADD	= 26,
    G_OR	= 27,
    G_BR	= 28,
    ADDCCri	= 29,
    ADDCCrr	= 30,
    ADDCri	= 31,
    ADDCrr	= 32,
    ADDEri	= 33,
    ADDErr	= 34,
    ADDXC	= 35,
    ADDXCCC	= 36,
    ADDXri	= 37,
    ADDXrr	= 38,
    ADDri	= 39,
    ADDrr	= 40,
    ADJCALLSTACKDOWN	= 41,
    ADJCALLSTACKUP	= 42,
    ALIGNADDR	= 43,
    ALIGNADDRL	= 44,
    ANDCCri	= 45,
    ANDCCrr	= 46,
    ANDNCCri	= 47,
    ANDNCCrr	= 48,
    ANDNri	= 49,
    ANDNrr	= 50,
    ANDXNrr	= 51,
    ANDXri	= 52,
    ANDXrr	= 53,
    ANDri	= 54,
    ANDrr	= 55,
    ARRAY16	= 56,
    ARRAY32	= 57,
    ARRAY8	= 58,
    BA	= 59,
    BCOND	= 60,
    BCONDA	= 61,
    BINDri	= 62,
    BINDrr	= 63,
    BMASK	= 64,
    BPFCC	= 65,
    BPFCCA	= 66,
    BPFCCANT	= 67,
    BPFCCNT	= 68,
    BPGEZapn	= 69,
    BPGEZapt	= 70,
    BPGEZnapn	= 71,
    BPGEZnapt	= 72,
    BPGZapn	= 73,
    BPGZapt	= 74,
    BPGZnapn	= 75,
    BPGZnapt	= 76,
    BPICC	= 77,
    BPICCA	= 78,
    BPICCANT	= 79,
    BPICCNT	= 80,
    BPLEZapn	= 81,
    BPLEZapt	= 82,
    BPLEZnapn	= 83,
    BPLEZnapt	= 84,
    BPLZapn	= 85,
    BPLZapt	= 86,
    BPLZnapn	= 87,
    BPLZnapt	= 88,
    BPNZapn	= 89,
    BPNZapt	= 90,
    BPNZnapn	= 91,
    BPNZnapt	= 92,
    BPXCC	= 93,
    BPXCCA	= 94,
    BPXCCANT	= 95,
    BPXCCNT	= 96,
    BPZapn	= 97,
    BPZapt	= 98,
    BPZnapn	= 99,
    BPZnapt	= 100,
    BSHUFFLE	= 101,
    CALL	= 102,
    CALLri	= 103,
    CALLrr	= 104,
    CASAasi10	= 105,
    CASArr	= 106,
    CASXrr	= 107,
    CASrr	= 108,
    CBCOND	= 109,
    CBCONDA	= 110,
    CMASK16	= 111,
    CMASK32	= 112,
    CMASK8	= 113,
    CMPri	= 114,
    CMPrr	= 115,
    EDGE16	= 116,
    EDGE16L	= 117,
    EDGE16LN	= 118,
    EDGE16N	= 119,
    EDGE32	= 120,
    EDGE32L	= 121,
    EDGE32LN	= 122,
    EDGE32N	= 123,
    EDGE8	= 124,
    EDGE8L	= 125,
    EDGE8LN	= 126,
    EDGE8N	= 127,
    EH_SJLJ_LONGJMP32ri	= 128,
    EH_SJLJ_LONGJMP32rr	= 129,
    EH_SJLJ_SETJMP32ri	= 130,
    EH_SJLJ_SETJMP32rr	= 131,
    FABSD	= 132,
    FABSQ	= 133,
    FABSS	= 134,
    FADDD	= 135,
    FADDQ	= 136,
    FADDS	= 137,
    FALIGNADATA	= 138,
    FAND	= 139,
    FANDNOT1	= 140,
    FANDNOT1S	= 141,
    FANDNOT2	= 142,
    FANDNOT2S	= 143,
    FANDS	= 144,
    FBCOND	= 145,
    FBCONDA	= 146,
    FCHKSM16	= 147,
    FCMPD	= 148,
    FCMPEQ16	= 149,
    FCMPEQ32	= 150,
    FCMPGT16	= 151,
    FCMPGT32	= 152,
    FCMPLE16	= 153,
    FCMPLE32	= 154,
    FCMPNE16	= 155,
    FCMPNE32	= 156,
    FCMPQ	= 157,
    FCMPS	= 158,
    FDIVD	= 159,
    FDIVQ	= 160,
    FDIVS	= 161,
    FDMULQ	= 162,
    FDTOI	= 163,
    FDTOQ	= 164,
    FDTOS	= 165,
    FDTOX	= 166,
    FEXPAND	= 167,
    FHADDD	= 168,
    FHADDS	= 169,
    FHSUBD	= 170,
    FHSUBS	= 171,
    FITOD	= 172,
    FITOQ	= 173,
    FITOS	= 174,
    FLCMPD	= 175,
    FLCMPS	= 176,
    FLUSH	= 177,
    FLUSHW	= 178,
    FLUSHri	= 179,
    FLUSHrr	= 180,
    FMEAN16	= 181,
    FMOVD	= 182,
    FMOVD_FCC	= 183,
    FMOVD_ICC	= 184,
    FMOVD_XCC	= 185,
    FMOVQ	= 186,
    FMOVQ_FCC	= 187,
    FMOVQ_ICC	= 188,
    FMOVQ_XCC	= 189,
    FMOVRGEZD	= 190,
    FMOVRGEZQ	= 191,
    FMOVRGEZS	= 192,
    FMOVRGZD	= 193,
    FMOVRGZQ	= 194,
    FMOVRGZS	= 195,
    FMOVRLEZD	= 196,
    FMOVRLEZQ	= 197,
    FMOVRLEZS	= 198,
    FMOVRLZD	= 199,
    FMOVRLZQ	= 200,
    FMOVRLZS	= 201,
    FMOVRNZD	= 202,
    FMOVRNZQ	= 203,
    FMOVRNZS	= 204,
    FMOVRZD	= 205,
    FMOVRZQ	= 206,
    FMOVRZS	= 207,
    FMOVS	= 208,
    FMOVS_FCC	= 209,
    FMOVS_ICC	= 210,
    FMOVS_XCC	= 211,
    FMUL8SUX16	= 212,
    FMUL8ULX16	= 213,
    FMUL8X16	= 214,
    FMUL8X16AL	= 215,
    FMUL8X16AU	= 216,
    FMULD	= 217,
    FMULD8SUX16	= 218,
    FMULD8ULX16	= 219,
    FMULQ	= 220,
    FMULS	= 221,
    FNADDD	= 222,
    FNADDS	= 223,
    FNAND	= 224,
    FNANDS	= 225,
    FNEGD	= 226,
    FNEGQ	= 227,
    FNEGS	= 228,
    FNHADDD	= 229,
    FNHADDS	= 230,
    FNMULD	= 231,
    FNMULS	= 232,
    FNOR	= 233,
    FNORS	= 234,
    FNOT1	= 235,
    FNOT1S	= 236,
    FNOT2	= 237,
    FNOT2S	= 238,
    FNSMULD	= 239,
    FONE	= 240,
    FONES	= 241,
    FOR	= 242,
    FORNOT1	= 243,
    FORNOT1S	= 244,
    FORNOT2	= 245,
    FORNOT2S	= 246,
    FORS	= 247,
    FPACK16	= 248,
    FPACK32	= 249,
    FPACKFIX	= 250,
    FPADD16	= 251,
    FPADD16S	= 252,
    FPADD32	= 253,
    FPADD32S	= 254,
    FPADD64	= 255,
    FPMERGE	= 256,
    FPSUB16	= 257,
    FPSUB16S	= 258,
    FPSUB32	= 259,
    FPSUB32S	= 260,
    FQTOD	= 261,
    FQTOI	= 262,
    FQTOS	= 263,
    FQTOX	= 264,
    FSLAS16	= 265,
    FSLAS32	= 266,
    FSLL16	= 267,
    FSLL32	= 268,
    FSMULD	= 269,
    FSQRTD	= 270,
    FSQRTQ	= 271,
    FSQRTS	= 272,
    FSRA16	= 273,
    FSRA32	= 274,
    FSRC1	= 275,
    FSRC1S	= 276,
    FSRC2	= 277,
    FSRC2S	= 278,
    FSRL16	= 279,
    FSRL32	= 280,
    FSTOD	= 281,
    FSTOI	= 282,
    FSTOQ	= 283,
    FSTOX	= 284,
    FSUBD	= 285,
    FSUBQ	= 286,
    FSUBS	= 287,
    FXNOR	= 288,
    FXNORS	= 289,
    FXOR	= 290,
    FXORS	= 291,
    FXTOD	= 292,
    FXTOQ	= 293,
    FXTOS	= 294,
    FZERO	= 295,
    FZEROS	= 296,
    GETPCX	= 297,
    JMPLri	= 298,
    JMPLrr	= 299,
    LDArr	= 300,
    LDCSRri	= 301,
    LDCSRrr	= 302,
    LDCri	= 303,
    LDCrr	= 304,
    LDDArr	= 305,
    LDDCri	= 306,
    LDDCrr	= 307,
    LDDFArr	= 308,
    LDDFri	= 309,
    LDDFrr	= 310,
    LDDri	= 311,
    LDDrr	= 312,
    LDFArr	= 313,
    LDFSRri	= 314,
    LDFSRrr	= 315,
    LDFri	= 316,
    LDFrr	= 317,
    LDQFArr	= 318,
    LDQFri	= 319,
    LDQFrr	= 320,
    LDSBArr	= 321,
    LDSBri	= 322,
    LDSBrr	= 323,
    LDSHArr	= 324,
    LDSHri	= 325,
    LDSHrr	= 326,
    LDSTUBArr	= 327,
    LDSTUBri	= 328,
    LDSTUBrr	= 329,
    LDSWri	= 330,
    LDSWrr	= 331,
    LDUBArr	= 332,
    LDUBri	= 333,
    LDUBrr	= 334,
    LDUHArr	= 335,
    LDUHri	= 336,
    LDUHrr	= 337,
    LDXFSRri	= 338,
    LDXFSRrr	= 339,
    LDXri	= 340,
    LDXrr	= 341,
    LDri	= 342,
    LDrr	= 343,
    LEAX_ADDri	= 344,
    LEA_ADDri	= 345,
    LZCNT	= 346,
    MEMBARi	= 347,
    MOVDTOX	= 348,
    MOVFCCri	= 349,
    MOVFCCrr	= 350,
    MOVICCri	= 351,
    MOVICCrr	= 352,
    MOVRGEZri	= 353,
    MOVRGEZrr	= 354,
    MOVRGZri	= 355,
    MOVRGZrr	= 356,
    MOVRLEZri	= 357,
    MOVRLEZrr	= 358,
    MOVRLZri	= 359,
    MOVRLZrr	= 360,
    MOVRNZri	= 361,
    MOVRNZrr	= 362,
    MOVRRZri	= 363,
    MOVRRZrr	= 364,
    MOVSTOSW	= 365,
    MOVSTOUW	= 366,
    MOVWTOS	= 367,
    MOVXCCri	= 368,
    MOVXCCrr	= 369,
    MOVXTOD	= 370,
    MULSCCri	= 371,
    MULSCCrr	= 372,
    MULXri	= 373,
    MULXrr	= 374,
    NOP	= 375,
    ORCCri	= 376,
    ORCCrr	= 377,
    ORNCCri	= 378,
    ORNCCrr	= 379,
    ORNri	= 380,
    ORNrr	= 381,
    ORXNrr	= 382,
    ORXri	= 383,
    ORXrr	= 384,
    ORri	= 385,
    ORrr	= 386,
    PDIST	= 387,
    PDISTN	= 388,
    POPCrr	= 389,
    RDASR	= 390,
    RDPR	= 391,
    RDPSR	= 392,
    RDTBR	= 393,
    RDWIM	= 394,
    RESTOREri	= 395,
    RESTORErr	= 396,
    RET	= 397,
    RETL	= 398,
    RETTri	= 399,
    RETTrr	= 400,
    SAVEri	= 401,
    SAVErr	= 402,
    SDIVCCri	= 403,
    SDIVCCrr	= 404,
    SDIVXri	= 405,
    SDIVXrr	= 406,
    SDIVri	= 407,
    SDIVrr	= 408,
    SELECT_CC_DFP_FCC	= 409,
    SELECT_CC_DFP_ICC	= 410,
    SELECT_CC_FP_FCC	= 411,
    SELECT_CC_FP_ICC	= 412,
    SELECT_CC_Int_FCC	= 413,
    SELECT_CC_Int_ICC	= 414,
    SELECT_CC_QFP_FCC	= 415,
    SELECT_CC_QFP_ICC	= 416,
    SET	= 417,
    SETHIXi	= 418,
    SETHIi	= 419,
    SHUTDOWN	= 420,
    SIAM	= 421,
    SLLXri	= 422,
    SLLXrr	= 423,
    SLLri	= 424,
    SLLrr	= 425,
    SMACri	= 426,
    SMACrr	= 427,
    SMULCCri	= 428,
    SMULCCrr	= 429,
    SMULri	= 430,
    SMULrr	= 431,
    SRAXri	= 432,
    SRAXrr	= 433,
    SRAri	= 434,
    SRArr	= 435,
    SRLXri	= 436,
    SRLXrr	= 437,
    SRLri	= 438,
    SRLrr	= 439,
    STArr	= 440,
    STBAR	= 441,
    STBArr	= 442,
    STBri	= 443,
    STBrr	= 444,
    STCSRri	= 445,
    STCSRrr	= 446,
    STCri	= 447,
    STCrr	= 448,
    STDArr	= 449,
    STDCQri	= 450,
    STDCQrr	= 451,
    STDCri	= 452,
    STDCrr	= 453,
    STDFArr	= 454,
    STDFQri	= 455,
    STDFQrr	= 456,
    STDFri	= 457,
    STDFrr	= 458,
    STDri	= 459,
    STDrr	= 460,
    STFArr	= 461,
    STFSRri	= 462,
    STFSRrr	= 463,
    STFri	= 464,
    STFrr	= 465,
    STHArr	= 466,
    STHri	= 467,
    STHrr	= 468,
    STQFArr	= 469,
    STQFri	= 470,
    STQFrr	= 471,
    STXFSRri	= 472,
    STXFSRrr	= 473,
    STXri	= 474,
    STXrr	= 475,
    STri	= 476,
    STrr	= 477,
    SUBCCri	= 478,
    SUBCCrr	= 479,
    SUBCri	= 480,
    SUBCrr	= 481,
    SUBEri	= 482,
    SUBErr	= 483,
    SUBXri	= 484,
    SUBXrr	= 485,
    SUBri	= 486,
    SUBrr	= 487,
    SWAPArr	= 488,
    SWAPri	= 489,
    SWAPrr	= 490,
    TA3	= 491,
    TA5	= 492,
    TADDCCTVri	= 493,
    TADDCCTVrr	= 494,
    TADDCCri	= 495,
    TADDCCrr	= 496,
    TICCri	= 497,
    TICCrr	= 498,
    TLS_ADDXrr	= 499,
    TLS_ADDrr	= 500,
    TLS_CALL	= 501,
    TLS_LDXrr	= 502,
    TLS_LDrr	= 503,
    TRAPri	= 504,
    TRAPrr	= 505,
    TSUBCCTVri	= 506,
    TSUBCCTVrr	= 507,
    TSUBCCri	= 508,
    TSUBCCrr	= 509,
    TXCCri	= 510,
    TXCCrr	= 511,
    UDIVCCri	= 512,
    UDIVCCrr	= 513,
    UDIVXri	= 514,
    UDIVXrr	= 515,
    UDIVri	= 516,
    UDIVrr	= 517,
    UMACri	= 518,
    UMACrr	= 519,
    UMULCCri	= 520,
    UMULCCrr	= 521,
    UMULXHI	= 522,
    UMULri	= 523,
    UMULrr	= 524,
    UNIMP	= 525,
    V9FCMPD	= 526,
    V9FCMPED	= 527,
    V9FCMPEQ	= 528,
    V9FCMPES	= 529,
    V9FCMPQ	= 530,
    V9FCMPS	= 531,
    V9FMOVD_FCC	= 532,
    V9FMOVQ_FCC	= 533,
    V9FMOVS_FCC	= 534,
    V9MOVFCCri	= 535,
    V9MOVFCCrr	= 536,
    WRASRri	= 537,
    WRASRrr	= 538,
    WRPRri	= 539,
    WRPRrr	= 540,
    WRPSRri	= 541,
    WRPSRrr	= 542,
    WRTBRri	= 543,
    WRTBRrr	= 544,
    WRWIMri	= 545,
    WRWIMrr	= 546,
    XMULX	= 547,
    XMULXHI	= 548,
    XNORCCri	= 549,
    XNORCCrr	= 550,
    XNORXrr	= 551,
    XNORri	= 552,
    XNORrr	= 553,
    XORCCri	= 554,
    XORCCrr	= 555,
    XORXri	= 556,
    XORXrr	= 557,
    XORri	= 558,
    XORrr	= 559,
    INSTRUCTION_LIST_END = 560
  };

namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIC_iu_instr	= 1,
    IIC_fpu_normal_instr	= 2,
    IIC_jmp_or_call	= 3,
    IIC_fpu_abs	= 4,
    IIC_fpu_fast_instr	= 5,
    IIC_fpu_divd	= 6,
    IIC_fpu_divs	= 7,
    IIC_fpu_muld	= 8,
    IIC_fpu_muls	= 9,
    IIC_fpu_negs	= 10,
    IIC_fpu_sqrtd	= 11,
    IIC_fpu_sqrts	= 12,
    IIC_fpu_stod	= 13,
    IIC_ldd	= 14,
    IIC_iu_or_fpu_instr	= 15,
    IIC_iu_div	= 16,
    IIC_smac_umac	= 17,
    IIC_iu_smul	= 18,
    IIC_st	= 19,
    IIC_std	= 20,
    IIC_iu_umul	= 21,
    SCHED_LIST_END = 22
  };
} // end Sched namespace
} // end SP namespace
} // end llvm namespace
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { SP::ICC, 0 };
static const MCPhysReg ImplicitList2[] = { SP::O6, 0 };
static const MCPhysReg ImplicitList3[] = { SP::WIM, 0 };
static const MCPhysReg ImplicitList4[] = { SP::FCC0, 0 };
static const MCPhysReg ImplicitList5[] = { SP::O7, 0 };
static const MCPhysReg ImplicitList6[] = { SP::CPSR, 0 };
static const MCPhysReg ImplicitList7[] = { SP::FSR, 0 };
static const MCPhysReg ImplicitList8[] = { SP::Y, SP::ICC, 0 };
static const MCPhysReg ImplicitList9[] = { SP::PSR, 0 };
static const MCPhysReg ImplicitList10[] = { SP::TBR, 0 };
static const MCPhysReg ImplicitList11[] = { SP::Y, 0 };
static const MCPhysReg ImplicitList12[] = { SP::Y, SP::ASR18, 0 };
static const MCPhysReg ImplicitList13[] = { SP::CPQ, 0 };
static const MCPhysReg ImplicitList14[] = { SP::FQ, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo23[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo25[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo47[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo48[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::CoprocPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntPairRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo109[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo110[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo111[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::I64RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::DFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::QFPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FPRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::FCCRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { SP::ASRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { SP::PRRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SP::IntRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc SparcInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #2 = CFI_INSTRUCTION
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6, -1 ,nullptr },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #11 = DBG_VALUE
  { 12,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #16 = LIFETIME_END
  { 17,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #17 = STACKMAP
  { 18,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9, -1 ,nullptr },  // Inst #18 = PATCHPOINT
  { 19,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #19 = LOAD_STACK_GUARD
  { 20,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #20 = STATEPOINT
  { 21,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #21 = LOCAL_ESCAPE
  { 22,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #22 = FAULTING_LOAD_OP
  { 23,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #23 = PATCHABLE_OP
  { 24,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #24 = PATCHABLE_FUNCTION_ENTER
  { 25,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #25 = PATCHABLE_RET
  { 26,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #26 = G_ADD
  { 27,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #27 = G_OR
  { 28,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #28 = G_BR
  { 29,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #29 = ADDCCri
  { 30,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #30 = ADDCCrr
  { 31,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #31 = ADDCri
  { 32,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #32 = ADDCrr
  { 33,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #33 = ADDEri
  { 34,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #34 = ADDErr
  { 35,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #35 = ADDXC
  { 36,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #36 = ADDXCCC
  { 37,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #37 = ADDXri
  { 38,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #38 = ADDXrr
  { 39,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #39 = ADDri
  { 40,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #40 = ADDrr
  { 41,	1,	0,	4,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo3, -1 ,nullptr },  // Inst #41 = ADJCALLSTACKDOWN
  { 42,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo8, -1 ,nullptr },  // Inst #42 = ADJCALLSTACKUP
  { 43,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #43 = ALIGNADDR
  { 44,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #44 = ALIGNADDRL
  { 45,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #45 = ANDCCri
  { 46,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #46 = ANDCCrr
  { 47,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #47 = ANDNCCri
  { 48,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #48 = ANDNCCrr
  { 49,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #49 = ANDNri
  { 50,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #50 = ANDNrr
  { 51,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #51 = ANDXNrr
  { 52,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #52 = ANDXri
  { 53,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #53 = ANDXrr
  { 54,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #54 = ANDri
  { 55,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #55 = ANDrr
  { 56,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #56 = ARRAY16
  { 57,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #57 = ARRAY32
  { 58,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #58 = ARRAY8
  { 59,	1,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #59 = BA
  { 60,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #60 = BCOND
  { 61,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #61 = BCONDA
  { 62,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #62 = BINDri
  { 63,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #63 = BINDrr
  { 64,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #64 = BMASK
  { 65,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #65 = BPFCC
  { 66,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #66 = BPFCCA
  { 67,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #67 = BPFCCANT
  { 68,	3,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo19, -1 ,nullptr },  // Inst #68 = BPFCCNT
  { 69,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #69 = BPGEZapn
  { 70,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #70 = BPGEZapt
  { 71,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #71 = BPGEZnapn
  { 72,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #72 = BPGEZnapt
  { 73,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #73 = BPGZapn
  { 74,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #74 = BPGZapt
  { 75,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #75 = BPGZnapn
  { 76,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #76 = BPGZnapt
  { 77,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #77 = BPICC
  { 78,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #78 = BPICCA
  { 79,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #79 = BPICCANT
  { 80,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #80 = BPICCNT
  { 81,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #81 = BPLEZapn
  { 82,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #82 = BPLEZapt
  { 83,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #83 = BPLEZnapn
  { 84,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #84 = BPLEZnapt
  { 85,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #85 = BPLZapn
  { 86,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #86 = BPLZapt
  { 87,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #87 = BPLZnapn
  { 88,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #88 = BPLZnapt
  { 89,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #89 = BPNZapn
  { 90,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #90 = BPNZapt
  { 91,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #91 = BPNZnapn
  { 92,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #92 = BPNZnapt
  { 93,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #93 = BPXCC
  { 94,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #94 = BPXCCA
  { 95,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #95 = BPXCCANT
  { 96,	2,	0,	4,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #96 = BPXCCNT
  { 97,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #97 = BPZapn
  { 98,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #98 = BPZapt
  { 99,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #99 = BPZnapn
  { 100,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo20, -1 ,nullptr },  // Inst #100 = BPZnapt
  { 101,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #101 = BSHUFFLE
  { 102,	1,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #102 = CALL
  { 103,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #103 = CALLri
  { 104,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #104 = CALLrr
  { 105,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #105 = CASAasi10
  { 106,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #106 = CASArr
  { 107,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #107 = CASXrr
  { 108,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #108 = CASrr
  { 109,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #109 = CBCOND
  { 110,	2,	0,	4,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #110 = CBCONDA
  { 111,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #111 = CMASK16
  { 112,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #112 = CMASK32
  { 113,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo25, -1 ,nullptr },  // Inst #113 = CMASK8
  { 114,	2,	0,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #114 = CMPri
  { 115,	2,	0,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #115 = CMPrr
  { 116,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #116 = EDGE16
  { 117,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #117 = EDGE16L
  { 118,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #118 = EDGE16LN
  { 119,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #119 = EDGE16N
  { 120,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #120 = EDGE32
  { 121,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #121 = EDGE32L
  { 122,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #122 = EDGE32LN
  { 123,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #123 = EDGE32N
  { 124,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #124 = EDGE8
  { 125,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #125 = EDGE8L
  { 126,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #126 = EDGE8LN
  { 127,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #127 = EDGE8N
  { 128,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #128 = EH_SJLJ_LONGJMP32ri
  { 129,	2,	0,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #129 = EH_SJLJ_LONGJMP32rr
  { 130,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo28, -1 ,nullptr },  // Inst #130 = EH_SJLJ_SETJMP32ri
  { 131,	3,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #131 = EH_SJLJ_SETJMP32rr
  { 132,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #132 = FABSD
  { 133,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #133 = FABSQ
  { 134,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #134 = FABSS
  { 135,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #135 = FADDD
  { 136,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #136 = FADDQ
  { 137,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #137 = FADDS
  { 138,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #138 = FALIGNADATA
  { 139,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #139 = FAND
  { 140,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #140 = FANDNOT1
  { 141,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #141 = FANDNOT1S
  { 142,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #142 = FANDNOT2
  { 143,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #143 = FANDNOT2S
  { 144,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #144 = FANDS
  { 145,	2,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList4, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #145 = FBCOND
  { 146,	2,	0,	4,	2,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList4, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #146 = FBCONDA
  { 147,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #147 = FCHKSM16
  { 148,	2,	0,	4,	5,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo30, -1 ,nullptr },  // Inst #148 = FCMPD
  { 149,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #149 = FCMPEQ16
  { 150,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #150 = FCMPEQ32
  { 151,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #151 = FCMPGT16
  { 152,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #152 = FCMPGT32
  { 153,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #153 = FCMPLE16
  { 154,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #154 = FCMPLE32
  { 155,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #155 = FCMPNE16
  { 156,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #156 = FCMPNE32
  { 157,	2,	0,	4,	0,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo31, -1 ,nullptr },  // Inst #157 = FCMPQ
  { 158,	2,	0,	4,	5,	0, 0x0ULL, nullptr, ImplicitList4, OperandInfo32, -1 ,nullptr },  // Inst #158 = FCMPS
  { 159,	3,	1,	4,	6,	0, 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #159 = FDIVD
  { 160,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #160 = FDIVQ
  { 161,	3,	1,	4,	7,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #161 = FDIVS
  { 162,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #162 = FDMULQ
  { 163,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #163 = FDTOI
  { 164,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #164 = FDTOQ
  { 165,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #165 = FDTOS
  { 166,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #166 = FDTOX
  { 167,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #167 = FEXPAND
  { 168,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #168 = FHADDD
  { 169,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #169 = FHADDS
  { 170,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #170 = FHSUBD
  { 171,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #171 = FHSUBS
  { 172,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #172 = FITOD
  { 173,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #173 = FITOQ
  { 174,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #174 = FITOS
  { 175,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #175 = FLCMPD
  { 176,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #176 = FLCMPS
  { 177,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #177 = FLUSH
  { 178,	0,	0,	4,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #178 = FLUSHW
  { 179,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #179 = FLUSHri
  { 180,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #180 = FLUSHrr
  { 181,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #181 = FMEAN16
  { 182,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #182 = FMOVD
  { 183,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #183 = FMOVD_FCC
  { 184,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #184 = FMOVD_ICC
  { 185,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #185 = FMOVD_XCC
  { 186,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #186 = FMOVQ
  { 187,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #187 = FMOVQ_FCC
  { 188,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #188 = FMOVQ_ICC
  { 189,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #189 = FMOVQ_XCC
  { 190,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #190 = FMOVRGEZD
  { 191,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #191 = FMOVRGEZQ
  { 192,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #192 = FMOVRGEZS
  { 193,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #193 = FMOVRGZD
  { 194,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #194 = FMOVRGZQ
  { 195,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #195 = FMOVRGZS
  { 196,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #196 = FMOVRLEZD
  { 197,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #197 = FMOVRLEZQ
  { 198,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #198 = FMOVRLEZS
  { 199,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #199 = FMOVRLZD
  { 200,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #200 = FMOVRLZQ
  { 201,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #201 = FMOVRLZS
  { 202,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #202 = FMOVRNZD
  { 203,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #203 = FMOVRNZQ
  { 204,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #204 = FMOVRNZS
  { 205,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #205 = FMOVRZD
  { 206,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #206 = FMOVRZQ
  { 207,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #207 = FMOVRZS
  { 208,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #208 = FMOVS
  { 209,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #209 = FMOVS_FCC
  { 210,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #210 = FMOVS_ICC
  { 211,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #211 = FMOVS_XCC
  { 212,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #212 = FMUL8SUX16
  { 213,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #213 = FMUL8ULX16
  { 214,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #214 = FMUL8X16
  { 215,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #215 = FMUL8X16AL
  { 216,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #216 = FMUL8X16AU
  { 217,	3,	1,	4,	8,	0, 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #217 = FMULD
  { 218,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #218 = FMULD8SUX16
  { 219,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #219 = FMULD8ULX16
  { 220,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #220 = FMULQ
  { 221,	3,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #221 = FMULS
  { 222,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #222 = FNADDD
  { 223,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #223 = FNADDS
  { 224,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #224 = FNAND
  { 225,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #225 = FNANDS
  { 226,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #226 = FNEGD
  { 227,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #227 = FNEGQ
  { 228,	2,	1,	4,	10,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #228 = FNEGS
  { 229,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #229 = FNHADDD
  { 230,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #230 = FNHADDS
  { 231,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #231 = FNMULD
  { 232,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #232 = FNMULS
  { 233,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #233 = FNOR
  { 234,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #234 = FNORS
  { 235,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #235 = FNOT1
  { 236,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #236 = FNOT1S
  { 237,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #237 = FNOT2
  { 238,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #238 = FNOT2S
  { 239,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #239 = FNSMULD
  { 240,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #240 = FONE
  { 241,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #241 = FONES
  { 242,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #242 = FOR
  { 243,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #243 = FORNOT1
  { 244,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #244 = FORNOT1S
  { 245,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #245 = FORNOT2
  { 246,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #246 = FORNOT2S
  { 247,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #247 = FORS
  { 248,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #248 = FPACK16
  { 249,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #249 = FPACK32
  { 250,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #250 = FPACKFIX
  { 251,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #251 = FPADD16
  { 252,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #252 = FPADD16S
  { 253,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #253 = FPADD32
  { 254,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #254 = FPADD32S
  { 255,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #255 = FPADD64
  { 256,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #256 = FPMERGE
  { 257,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #257 = FPSUB16
  { 258,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #258 = FPSUB16S
  { 259,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #259 = FPSUB32
  { 260,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #260 = FPSUB32S
  { 261,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #261 = FQTOD
  { 262,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #262 = FQTOI
  { 263,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #263 = FQTOS
  { 264,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #264 = FQTOX
  { 265,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #265 = FSLAS16
  { 266,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #266 = FSLAS32
  { 267,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #267 = FSLL16
  { 268,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #268 = FSLL32
  { 269,	3,	1,	4,	8,	0, 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #269 = FSMULD
  { 270,	2,	1,	4,	11,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #270 = FSQRTD
  { 271,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #271 = FSQRTQ
  { 272,	2,	1,	4,	12,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #272 = FSQRTS
  { 273,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #273 = FSRA16
  { 274,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #274 = FSRA32
  { 275,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #275 = FSRC1
  { 276,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #276 = FSRC1S
  { 277,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #277 = FSRC2
  { 278,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #278 = FSRC2S
  { 279,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #279 = FSRL16
  { 280,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #280 = FSRL32
  { 281,	2,	1,	4,	13,	0, 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #281 = FSTOD
  { 282,	2,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #282 = FSTOI
  { 283,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #283 = FSTOQ
  { 284,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #284 = FSTOX
  { 285,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #285 = FSUBD
  { 286,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo33, -1 ,nullptr },  // Inst #286 = FSUBQ
  { 287,	3,	1,	4,	5,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #287 = FSUBS
  { 288,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #288 = FXNOR
  { 289,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #289 = FXNORS
  { 290,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #290 = FXOR
  { 291,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #291 = FXORS
  { 292,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #292 = FXTOD
  { 293,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #293 = FXTOQ
  { 294,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo37, -1 ,nullptr },  // Inst #294 = FXTOS
  { 295,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #295 = FZERO
  { 296,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #296 = FZEROS
  { 297,	1,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList5, OperandInfo2, -1 ,nullptr },  // Inst #297 = GETPCX
  { 298,	3,	1,	4,	3,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #298 = JMPLri
  { 299,	3,	1,	4,	3,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #299 = JMPLrr
  { 300,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #300 = LDArr
  { 301,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo17, -1 ,nullptr },  // Inst #301 = LDCSRri
  { 302,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo18, -1 ,nullptr },  // Inst #302 = LDCSRrr
  { 303,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo52, -1 ,nullptr },  // Inst #303 = LDCri
  { 304,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo53, -1 ,nullptr },  // Inst #304 = LDCrr
  { 305,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #305 = LDDArr
  { 306,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo55, -1 ,nullptr },  // Inst #306 = LDDCri
  { 307,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #307 = LDDCrr
  { 308,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #308 = LDDFArr
  { 309,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #309 = LDDFri
  { 310,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #310 = LDDFrr
  { 311,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #311 = LDDri
  { 312,	3,	1,	4,	14,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #312 = LDDrr
  { 313,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #313 = LDFArr
  { 314,	2,	0,	4,	15,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo17, -1 ,nullptr },  // Inst #314 = LDFSRri
  { 315,	2,	0,	4,	15,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo18, -1 ,nullptr },  // Inst #315 = LDFSRrr
  { 316,	3,	1,	4,	15,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #316 = LDFri
  { 317,	3,	1,	4,	15,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #317 = LDFrr
  { 318,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #318 = LDQFArr
  { 319,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #319 = LDQFri
  { 320,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #320 = LDQFrr
  { 321,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #321 = LDSBArr
  { 322,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #322 = LDSBri
  { 323,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #323 = LDSBrr
  { 324,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #324 = LDSHArr
  { 325,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #325 = LDSHri
  { 326,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #326 = LDSHrr
  { 327,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #327 = LDSTUBArr
  { 328,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #328 = LDSTUBri
  { 329,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #329 = LDSTUBrr
  { 330,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #330 = LDSWri
  { 331,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #331 = LDSWrr
  { 332,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #332 = LDUBArr
  { 333,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #333 = LDUBri
  { 334,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #334 = LDUBrr
  { 335,	4,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, -1 ,nullptr },  // Inst #335 = LDUHArr
  { 336,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #336 = LDUHri
  { 337,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #337 = LDUHrr
  { 338,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo17, -1 ,nullptr },  // Inst #338 = LDXFSRri
  { 339,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo18, -1 ,nullptr },  // Inst #339 = LDXFSRrr
  { 340,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #340 = LDXri
  { 341,	3,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #341 = LDXrr
  { 342,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #342 = LDri
  { 343,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #343 = LDrr
  { 344,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #344 = LEAX_ADDri
  { 345,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo28, -1 ,nullptr },  // Inst #345 = LEA_ADDri
  { 346,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #346 = LZCNT
  { 347,	1,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #347 = MEMBARi
  { 348,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #348 = MOVDTOX
  { 349,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #349 = MOVFCCri
  { 350,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList4, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #350 = MOVFCCrr
  { 351,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #351 = MOVICCri
  { 352,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #352 = MOVICCrr
  { 353,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #353 = MOVRGEZri
  { 354,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #354 = MOVRGEZrr
  { 355,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #355 = MOVRGZri
  { 356,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #356 = MOVRGZrr
  { 357,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #357 = MOVRLEZri
  { 358,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #358 = MOVRLEZrr
  { 359,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #359 = MOVRLZri
  { 360,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #360 = MOVRLZrr
  { 361,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #361 = MOVRNZri
  { 362,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #362 = MOVRNZrr
  { 363,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #363 = MOVRRZri
  { 364,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #364 = MOVRRZrr
  { 365,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #365 = MOVSTOSW
  { 366,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #366 = MOVSTOUW
  { 367,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #367 = MOVWTOS
  { 368,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #368 = MOVXCCri
  { 369,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList1, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #369 = MOVXCCrr
  { 370,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #370 = MOVXTOD
  { 371,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, ImplicitList8, OperandInfo13, -1 ,nullptr },  // Inst #371 = MULSCCri
  { 372,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList8, ImplicitList8, OperandInfo14, -1 ,nullptr },  // Inst #372 = MULSCCrr
  { 373,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #373 = MULXri
  { 374,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #374 = MULXrr
  { 375,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #375 = NOP
  { 376,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #376 = ORCCri
  { 377,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #377 = ORCCrr
  { 378,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #378 = ORNCCri
  { 379,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #379 = ORNCCrr
  { 380,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #380 = ORNri
  { 381,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #381 = ORNrr
  { 382,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #382 = ORXNrr
  { 383,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #383 = ORXri
  { 384,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #384 = ORXrr
  { 385,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #385 = ORri
  { 386,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #386 = ORrr
  { 387,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #387 = PDIST
  { 388,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #388 = PDISTN
  { 389,	2,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo27, -1 ,nullptr },  // Inst #389 = POPCrr
  { 390,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #390 = RDASR
  { 391,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #391 = RDPR
  { 392,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList9, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #392 = RDPSR
  { 393,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList10, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #393 = RDTBR
  { 394,	1,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #394 = RDWIM
  { 395,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #395 = RESTOREri
  { 396,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #396 = RESTORErr
  { 397,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #397 = RET
  { 398,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #398 = RETL
  { 399,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #399 = RETTri
  { 400,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #400 = RETTrr
  { 401,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #401 = SAVEri
  { 402,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #402 = SAVErr
  { 403,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo13, -1 ,nullptr },  // Inst #403 = SDIVCCri
  { 404,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo14, -1 ,nullptr },  // Inst #404 = SDIVCCrr
  { 405,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #405 = SDIVXri
  { 406,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #406 = SDIVXrr
  { 407,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo13, -1 ,nullptr },  // Inst #407 = SDIVri
  { 408,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo14, -1 ,nullptr },  // Inst #408 = SDIVrr
  { 409,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #409 = SELECT_CC_DFP_FCC
  { 410,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #410 = SELECT_CC_DFP_ICC
  { 411,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #411 = SELECT_CC_FP_FCC
  { 412,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #412 = SELECT_CC_FP_ICC
  { 413,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #413 = SELECT_CC_Int_FCC
  { 414,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #414 = SELECT_CC_Int_ICC
  { 415,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #415 = SELECT_CC_QFP_FCC
  { 416,	4,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList1, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #416 = SELECT_CC_QFP_ICC
  { 417,	2,	1,	4,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #417 = SET
  { 418,	2,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #418 = SETHIXi
  { 419,	2,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #419 = SETHIi
  { 420,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #420 = SHUTDOWN
  { 421,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #421 = SIAM
  { 422,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #422 = SLLXri
  { 423,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #423 = SLLXrr
  { 424,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #424 = SLLri
  { 425,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #425 = SLLrr
  { 426,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo85, -1 ,nullptr },  // Inst #426 = SMACri
  { 427,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo86, -1 ,nullptr },  // Inst #427 = SMACrr
  { 428,	3,	1,	4,	18,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo13, -1 ,nullptr },  // Inst #428 = SMULCCri
  { 429,	3,	1,	4,	18,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo14, -1 ,nullptr },  // Inst #429 = SMULCCrr
  { 430,	3,	1,	4,	18,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo13, -1 ,nullptr },  // Inst #430 = SMULri
  { 431,	3,	1,	4,	18,	0, 0x0ULL, nullptr, ImplicitList11, OperandInfo14, -1 ,nullptr },  // Inst #431 = SMULrr
  { 432,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #432 = SRAXri
  { 433,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #433 = SRAXrr
  { 434,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #434 = SRAri
  { 435,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #435 = SRArr
  { 436,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #436 = SRLXri
  { 437,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #437 = SRLXrr
  { 438,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #438 = SRLri
  { 439,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #439 = SRLrr
  { 440,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #440 = STArr
  { 441,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #441 = STBAR
  { 442,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #442 = STBArr
  { 443,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #443 = STBri
  { 444,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #444 = STBrr
  { 445,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo17, -1 ,nullptr },  // Inst #445 = STCSRri
  { 446,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList6, OperandInfo18, -1 ,nullptr },  // Inst #446 = STCSRrr
  { 447,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #447 = STCri
  { 448,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #448 = STCrr
  { 449,	4,	0,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #449 = STDArr
  { 450,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList13, OperandInfo17, -1 ,nullptr },  // Inst #450 = STDCQri
  { 451,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList13, OperandInfo18, -1 ,nullptr },  // Inst #451 = STDCQrr
  { 452,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #452 = STDCri
  { 453,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #453 = STDCrr
  { 454,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #454 = STDFArr
  { 455,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList14, OperandInfo17, -1 ,nullptr },  // Inst #455 = STDFQri
  { 456,	2,	1,	4,	20,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList14, OperandInfo18, -1 ,nullptr },  // Inst #456 = STDFQrr
  { 457,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #457 = STDFri
  { 458,	3,	0,	4,	20,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #458 = STDFrr
  { 459,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #459 = STDri
  { 460,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #460 = STDrr
  { 461,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #461 = STFArr
  { 462,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo17, -1 ,nullptr },  // Inst #462 = STFSRri
  { 463,	2,	1,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo18, -1 ,nullptr },  // Inst #463 = STFSRrr
  { 464,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #464 = STFri
  { 465,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #465 = STFrr
  { 466,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #466 = STHArr
  { 467,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #467 = STHri
  { 468,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #468 = STHrr
  { 469,	4,	0,	4,	19,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #469 = STQFArr
  { 470,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #470 = STQFri
  { 471,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #471 = STQFrr
  { 472,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo17, -1 ,nullptr },  // Inst #472 = STXFSRri
  { 473,	2,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo18, -1 ,nullptr },  // Inst #473 = STXFSRrr
  { 474,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #474 = STXri
  { 475,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #475 = STXrr
  { 476,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #476 = STri
  { 477,	3,	0,	4,	19,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #477 = STrr
  { 478,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #478 = SUBCCri
  { 479,	3,	1,	4,	1,	0, 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #479 = SUBCCrr
  { 480,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #480 = SUBCri
  { 481,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #481 = SUBCrr
  { 482,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #482 = SUBEri
  { 483,	3,	1,	4,	1,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #483 = SUBErr
  { 484,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #484 = SUBXri
  { 485,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #485 = SUBXrr
  { 486,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #486 = SUBri
  { 487,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #487 = SUBrr
  { 488,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #488 = SWAPArr
  { 489,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #489 = SWAPri
  { 490,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #490 = SWAPrr
  { 491,	0,	0,	4,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #491 = TA3
  { 492,	0,	0,	4,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #492 = TA5
  { 493,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #493 = TADDCCTVri
  { 494,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #494 = TADDCCTVrr
  { 495,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #495 = TADDCCri
  { 496,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #496 = TADDCCrr
  { 497,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #497 = TICCri
  { 498,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #498 = TICCrr
  { 499,	4,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #499 = TLS_ADDXrr
  { 500,	4,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #500 = TLS_ADDrr
  { 501,	2,	0,	4,	3,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic), 0x0ULL, ImplicitList2, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #501 = TLS_CALL
  { 502,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #502 = TLS_LDXrr
  { 503,	4,	1,	4,	1,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo114, -1 ,nullptr },  // Inst #503 = TLS_LDrr
  { 504,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #504 = TRAPri
  { 505,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #505 = TRAPrr
  { 506,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #506 = TSUBCCTVri
  { 507,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #507 = TSUBCCTVrr
  { 508,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #508 = TSUBCCri
  { 509,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #509 = TSUBCCrr
  { 510,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #510 = TXCCri
  { 511,	3,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #511 = TXCCrr
  { 512,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo13, -1 ,nullptr },  // Inst #512 = UDIVCCri
  { 513,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList8, OperandInfo14, -1 ,nullptr },  // Inst #513 = UDIVCCrr
  { 514,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #514 = UDIVXri
  { 515,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #515 = UDIVXrr
  { 516,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo13, -1 ,nullptr },  // Inst #516 = UDIVri
  { 517,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList11, ImplicitList11, OperandInfo14, -1 ,nullptr },  // Inst #517 = UDIVrr
  { 518,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo85, -1 ,nullptr },  // Inst #518 = UMACri
  { 519,	4,	1,	4,	17,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList12, ImplicitList12, OperandInfo86, -1 ,nullptr },  // Inst #519 = UMACrr
  { 520,	3,	1,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo13, -1 ,nullptr },  // Inst #520 = UMULCCri
  { 521,	3,	1,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo14, -1 ,nullptr },  // Inst #521 = UMULCCrr
  { 522,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #522 = UMULXHI
  { 523,	3,	1,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList11, OperandInfo13, -1 ,nullptr },  // Inst #523 = UMULri
  { 524,	3,	1,	4,	21,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList11, OperandInfo14, -1 ,nullptr },  // Inst #524 = UMULrr
  { 525,	1,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #525 = UNIMP
  { 526,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #526 = V9FCMPD
  { 527,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #527 = V9FCMPED
  { 528,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #528 = V9FCMPEQ
  { 529,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #529 = V9FCMPES
  { 530,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #530 = V9FCMPQ
  { 531,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #531 = V9FCMPS
  { 532,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #532 = V9FMOVD_FCC
  { 533,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #533 = V9FMOVQ_FCC
  { 534,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #534 = V9FMOVS_FCC
  { 535,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #535 = V9MOVFCCri
  { 536,	5,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #536 = V9MOVFCCrr
  { 537,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #537 = WRASRri
  { 538,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #538 = WRASRrr
  { 539,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #539 = WRPRri
  { 540,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #540 = WRPRrr
  { 541,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList9, OperandInfo26, -1 ,nullptr },  // Inst #541 = WRPSRri
  { 542,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList9, OperandInfo27, -1 ,nullptr },  // Inst #542 = WRPSRrr
  { 543,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList10, OperandInfo26, -1 ,nullptr },  // Inst #543 = WRTBRri
  { 544,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList10, OperandInfo27, -1 ,nullptr },  // Inst #544 = WRTBRrr
  { 545,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo26, -1 ,nullptr },  // Inst #545 = WRWIMri
  { 546,	2,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList3, OperandInfo27, -1 ,nullptr },  // Inst #546 = WRWIMrr
  { 547,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #547 = XMULX
  { 548,	3,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #548 = XMULXHI
  { 549,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #549 = XNORCCri
  { 550,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #550 = XNORCCrr
  { 551,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #551 = XNORXrr
  { 552,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #552 = XNORri
  { 553,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #553 = XNORrr
  { 554,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #554 = XORCCri
  { 555,	3,	1,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #555 = XORCCrr
  { 556,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #556 = XORXri
  { 557,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #557 = XORXrr
  { 558,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #558 = XORri
  { 559,	3,	1,	4,	1,	0, 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #559 = XORrr
};

extern const char SparcInstrNameData[] = {
  /* 0 */ 'C', 'A', 'S', 'A', 'a', 's', 'i', '1', '0', 0,
  /* 10 */ 'F', 'S', 'R', 'C', '1', 0,
  /* 16 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '1', 0,
  /* 25 */ 'F', 'N', 'O', 'T', '1', 0,
  /* 31 */ 'F', 'O', 'R', 'N', 'O', 'T', '1', 0,
  /* 39 */ 'F', 'S', 'R', 'A', '3', '2', 0,
  /* 46 */ 'F', 'P', 'S', 'U', 'B', '3', '2', 0,
  /* 54 */ 'F', 'P', 'A', 'D', 'D', '3', '2', 0,
  /* 62 */ 'E', 'D', 'G', 'E', '3', '2', 0,
  /* 69 */ 'F', 'C', 'M', 'P', 'L', 'E', '3', '2', 0,
  /* 78 */ 'F', 'C', 'M', 'P', 'N', 'E', '3', '2', 0,
  /* 87 */ 'F', 'P', 'A', 'C', 'K', '3', '2', 0,
  /* 95 */ 'C', 'M', 'A', 'S', 'K', '3', '2', 0,
  /* 103 */ 'F', 'S', 'L', 'L', '3', '2', 0,
  /* 110 */ 'F', 'S', 'R', 'L', '3', '2', 0,
  /* 117 */ 'F', 'C', 'M', 'P', 'E', 'Q', '3', '2', 0,
  /* 126 */ 'F', 'S', 'L', 'A', 'S', '3', '2', 0,
  /* 134 */ 'F', 'C', 'M', 'P', 'G', 'T', '3', '2', 0,
  /* 143 */ 'A', 'R', 'R', 'A', 'Y', '3', '2', 0,
  /* 151 */ 'F', 'S', 'R', 'C', '2', 0,
  /* 157 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '2', 0,
  /* 166 */ 'F', 'N', 'O', 'T', '2', 0,
  /* 172 */ 'F', 'O', 'R', 'N', 'O', 'T', '2', 0,
  /* 180 */ 'T', 'A', '3', 0,
  /* 184 */ 'F', 'P', 'A', 'D', 'D', '6', '4', 0,
  /* 192 */ 'T', 'A', '5', 0,
  /* 196 */ 'F', 'S', 'R', 'A', '1', '6', 0,
  /* 203 */ 'F', 'P', 'S', 'U', 'B', '1', '6', 0,
  /* 211 */ 'F', 'P', 'A', 'D', 'D', '1', '6', 0,
  /* 219 */ 'E', 'D', 'G', 'E', '1', '6', 0,
  /* 226 */ 'F', 'C', 'M', 'P', 'L', 'E', '1', '6', 0,
  /* 235 */ 'F', 'C', 'M', 'P', 'N', 'E', '1', '6', 0,
  /* 244 */ 'F', 'P', 'A', 'C', 'K', '1', '6', 0,
  /* 252 */ 'C', 'M', 'A', 'S', 'K', '1', '6', 0,
  /* 260 */ 'F', 'S', 'L', 'L', '1', '6', 0,
  /* 267 */ 'F', 'S', 'R', 'L', '1', '6', 0,
  /* 274 */ 'F', 'C', 'H', 'K', 'S', 'M', '1', '6', 0,
  /* 283 */ 'F', 'M', 'E', 'A', 'N', '1', '6', 0,
  /* 291 */ 'F', 'C', 'M', 'P', 'E', 'Q', '1', '6', 0,
  /* 300 */ 'F', 'S', 'L', 'A', 'S', '1', '6', 0,
  /* 308 */ 'F', 'C', 'M', 'P', 'G', 'T', '1', '6', 0,
  /* 317 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 0,
  /* 326 */ 'F', 'M', 'U', 'L', 'D', '8', 'U', 'L', 'X', '1', '6', 0,
  /* 338 */ 'F', 'M', 'U', 'L', '8', 'U', 'L', 'X', '1', '6', 0,
  /* 349 */ 'F', 'M', 'U', 'L', 'D', '8', 'S', 'U', 'X', '1', '6', 0,
  /* 361 */ 'F', 'M', 'U', 'L', '8', 'S', 'U', 'X', '1', '6', 0,
  /* 372 */ 'A', 'R', 'R', 'A', 'Y', '1', '6', 0,
  /* 380 */ 'E', 'D', 'G', 'E', '8', 0,
  /* 386 */ 'C', 'M', 'A', 'S', 'K', '8', 0,
  /* 393 */ 'A', 'R', 'R', 'A', 'Y', '8', 0,
  /* 400 */ 'B', 'A', 0,
  /* 403 */ 'B', 'P', 'F', 'C', 'C', 'A', 0,
  /* 410 */ 'B', 'P', 'I', 'C', 'C', 'A', 0,
  /* 417 */ 'B', 'P', 'X', 'C', 'C', 'A', 0,
  /* 424 */ 'C', 'B', 'C', 'O', 'N', 'D', 'A', 0,
  /* 432 */ 'F', 'B', 'C', 'O', 'N', 'D', 'A', 0,
  /* 440 */ 'F', 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'A', 'T', 'A', 0,
  /* 452 */ 'A', 'D', 'D', 'X', 'C', 'C', 'C', 0,
  /* 460 */ 'B', 'P', 'F', 'C', 'C', 0,
  /* 466 */ 'V', '9', 'F', 'M', 'O', 'V', 'D', '_', 'F', 'C', 'C', 0,
  /* 478 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'D', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 496 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 514 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', 'P', '_', 'F', 'C', 'C', 0,
  /* 531 */ 'V', '9', 'F', 'M', 'O', 'V', 'Q', '_', 'F', 'C', 'C', 0,
  /* 543 */ 'V', '9', 'F', 'M', 'O', 'V', 'S', '_', 'F', 'C', 'C', 0,
  /* 555 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', 'n', 't', '_', 'F', 'C', 'C', 0,
  /* 573 */ 'B', 'P', 'I', 'C', 'C', 0,
  /* 579 */ 'F', 'M', 'O', 'V', 'D', '_', 'I', 'C', 'C', 0,
  /* 589 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'D', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 607 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 625 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', 'P', '_', 'I', 'C', 'C', 0,
  /* 642 */ 'F', 'M', 'O', 'V', 'Q', '_', 'I', 'C', 'C', 0,
  /* 652 */ 'F', 'M', 'O', 'V', 'S', '_', 'I', 'C', 'C', 0,
  /* 662 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', 'n', 't', '_', 'I', 'C', 'C', 0,
  /* 680 */ 'B', 'P', 'X', 'C', 'C', 0,
  /* 686 */ 'F', 'M', 'O', 'V', 'D', '_', 'X', 'C', 'C', 0,
  /* 696 */ 'F', 'M', 'O', 'V', 'Q', '_', 'X', 'C', 'C', 0,
  /* 706 */ 'F', 'M', 'O', 'V', 'S', '_', 'X', 'C', 'C', 0,
  /* 716 */ 'A', 'D', 'D', 'X', 'C', 0,
  /* 722 */ 'F', 'S', 'U', 'B', 'D', 0,
  /* 728 */ 'F', 'H', 'S', 'U', 'B', 'D', 0,
  /* 735 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 741 */ 'F', 'A', 'D', 'D', 'D', 0,
  /* 747 */ 'F', 'H', 'A', 'D', 'D', 'D', 0,
  /* 754 */ 'F', 'N', 'H', 'A', 'D', 'D', 'D', 0,
  /* 762 */ 'F', 'N', 'A', 'D', 'D', 'D', 0,
  /* 769 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'D', 0,
  /* 778 */ 'F', 'N', 'E', 'G', 'D', 0,
  /* 784 */ 'F', 'M', 'U', 'L', 'D', 0,
  /* 790 */ 'F', 'N', 'M', 'U', 'L', 'D', 0,
  /* 797 */ 'F', 'S', 'M', 'U', 'L', 'D', 0,
  /* 804 */ 'F', 'N', 'S', 'M', 'U', 'L', 'D', 0,
  /* 812 */ 'F', 'A', 'N', 'D', 0,
  /* 817 */ 'F', 'N', 'A', 'N', 'D', 0,
  /* 823 */ 'F', 'E', 'X', 'P', 'A', 'N', 'D', 0,
  /* 831 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 844 */ 'C', 'B', 'C', 'O', 'N', 'D', 0,
  /* 851 */ 'F', 'B', 'C', 'O', 'N', 'D', 0,
  /* 858 */ 'F', 'I', 'T', 'O', 'D', 0,
  /* 864 */ 'F', 'Q', 'T', 'O', 'D', 0,
  /* 870 */ 'F', 'S', 'T', 'O', 'D', 0,
  /* 876 */ 'F', 'X', 'T', 'O', 'D', 0,
  /* 882 */ 'M', 'O', 'V', 'X', 'T', 'O', 'D', 0,
  /* 890 */ 'V', '9', 'F', 'C', 'M', 'P', 'D', 0,
  /* 898 */ 'F', 'L', 'C', 'M', 'P', 'D', 0,
  /* 905 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 922 */ 'F', 'A', 'B', 'S', 'D', 0,
  /* 928 */ 'F', 'S', 'Q', 'R', 'T', 'D', 0,
  /* 935 */ 'F', 'D', 'I', 'V', 'D', 0,
  /* 941 */ 'F', 'M', 'O', 'V', 'D', 0,
  /* 947 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'D', 0,
  /* 957 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'D', 0,
  /* 967 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'D', 0,
  /* 976 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'D', 0,
  /* 985 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'D', 0,
  /* 994 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'D', 0,
  /* 1002 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 1015 */ 'F', 'P', 'M', 'E', 'R', 'G', 'E', 0,
  /* 1023 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 1030 */ 'B', 'S', 'H', 'U', 'F', 'F', 'L', 'E', 0,
  /* 1039 */ 'F', 'O', 'N', 'E', 0,
  /* 1044 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 1057 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 1067 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 1080 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 1095 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 1109 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 1123 */ 'F', 'L', 'U', 'S', 'H', 0,
  /* 1129 */ 'P', 'H', 'I', 0,
  /* 1133 */ 'U', 'M', 'U', 'L', 'X', 'H', 'I', 0,
  /* 1141 */ 'X', 'M', 'U', 'L', 'X', 'H', 'I', 0,
  /* 1149 */ 'F', 'D', 'T', 'O', 'I', 0,
  /* 1155 */ 'F', 'Q', 'T', 'O', 'I', 0,
  /* 1161 */ 'F', 'S', 'T', 'O', 'I', 0,
  /* 1167 */ 'B', 'M', 'A', 'S', 'K', 0,
  /* 1173 */ 'E', 'D', 'G', 'E', '3', '2', 'L', 0,
  /* 1181 */ 'E', 'D', 'G', 'E', '1', '6', 'L', 0,
  /* 1189 */ 'E', 'D', 'G', 'E', '8', 'L', 0,
  /* 1196 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 'A', 'L', 0,
  /* 1207 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1216 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 1225 */ 'T', 'L', 'S', '_', 'C', 'A', 'L', 'L', 0,
  /* 1234 */ 'K', 'I', 'L', 'L', 0,
  /* 1239 */ 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'D', 'R', 'L', 0,
  /* 1250 */ 'R', 'E', 'T', 'L', 0,
  /* 1255 */ 'S', 'I', 'A', 'M', 0,
  /* 1260 */ 'R', 'D', 'W', 'I', 'M', 0,
  /* 1266 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 1276 */ 'E', 'D', 'G', 'E', '3', '2', 'N', 0,
  /* 1284 */ 'E', 'D', 'G', 'E', '1', '6', 'N', 0,
  /* 1292 */ 'E', 'D', 'G', 'E', '8', 'N', 0,
  /* 1299 */ 'E', 'D', 'G', 'E', '3', '2', 'L', 'N', 0,
  /* 1308 */ 'E', 'D', 'G', 'E', '1', '6', 'L', 'N', 0,
  /* 1317 */ 'E', 'D', 'G', 'E', '8', 'L', 'N', 0,
  /* 1325 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 1341 */ 'P', 'D', 'I', 'S', 'T', 'N', 0,
  /* 1348 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 1365 */ 'S', 'H', 'U', 'T', 'D', 'O', 'W', 'N', 0,
  /* 1374 */ 'F', 'Z', 'E', 'R', 'O', 0,
  /* 1380 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 1389 */ 'U', 'N', 'I', 'M', 'P', 0,
  /* 1395 */ 'N', 'O', 'P', 0,
  /* 1399 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'L', 'O', 'A', 'D', '_', 'O', 'P', 0,
  /* 1416 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 1429 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 1444 */ 'F', 'S', 'U', 'B', 'Q', 0,
  /* 1450 */ 'F', 'A', 'D', 'D', 'Q', 0,
  /* 1456 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 1465 */ 'F', 'N', 'E', 'G', 'Q', 0,
  /* 1471 */ 'F', 'D', 'M', 'U', 'L', 'Q', 0,
  /* 1478 */ 'F', 'M', 'U', 'L', 'Q', 0,
  /* 1484 */ 'F', 'D', 'T', 'O', 'Q', 0,
  /* 1490 */ 'F', 'I', 'T', 'O', 'Q', 0,
  /* 1496 */ 'F', 'S', 'T', 'O', 'Q', 0,
  /* 1502 */ 'F', 'X', 'T', 'O', 'Q', 0,
  /* 1508 */ 'V', '9', 'F', 'C', 'M', 'P', 'Q', 0,
  /* 1516 */ 'F', 'A', 'B', 'S', 'Q', 0,
  /* 1522 */ 'F', 'S', 'Q', 'R', 'T', 'Q', 0,
  /* 1529 */ 'F', 'D', 'I', 'V', 'Q', 0,
  /* 1535 */ 'F', 'M', 'O', 'V', 'Q', 0,
  /* 1541 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'Q', 0,
  /* 1551 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'Q', 0,
  /* 1561 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'Q', 0,
  /* 1570 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'Q', 0,
  /* 1579 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'Q', 0,
  /* 1588 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'Q', 0,
  /* 1596 */ 'S', 'T', 'B', 'A', 'R', 0,
  /* 1602 */ 'R', 'D', 'T', 'B', 'R', 0,
  /* 1608 */ 'G', '_', 'B', 'R', 0,
  /* 1613 */ 'A', 'L', 'I', 'G', 'N', 'A', 'D', 'D', 'R', 0,
  /* 1623 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 1648 */ 'F', 'O', 'R', 0,
  /* 1652 */ 'F', 'N', 'O', 'R', 0,
  /* 1657 */ 'F', 'X', 'N', 'O', 'R', 0,
  /* 1663 */ 'F', 'X', 'O', 'R', 0,
  /* 1668 */ 'G', '_', 'O', 'R', 0,
  /* 1673 */ 'R', 'D', 'P', 'R', 0,
  /* 1678 */ 'R', 'D', 'A', 'S', 'R', 0,
  /* 1684 */ 'R', 'D', 'P', 'S', 'R', 0,
  /* 1690 */ 'F', 'S', 'R', 'C', '1', 'S', 0,
  /* 1697 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '1', 'S', 0,
  /* 1707 */ 'F', 'N', 'O', 'T', '1', 'S', 0,
  /* 1714 */ 'F', 'O', 'R', 'N', 'O', 'T', '1', 'S', 0,
  /* 1723 */ 'F', 'P', 'S', 'U', 'B', '3', '2', 'S', 0,
  /* 1732 */ 'F', 'P', 'A', 'D', 'D', '3', '2', 'S', 0,
  /* 1741 */ 'F', 'S', 'R', 'C', '2', 'S', 0,
  /* 1748 */ 'F', 'A', 'N', 'D', 'N', 'O', 'T', '2', 'S', 0,
  /* 1758 */ 'F', 'N', 'O', 'T', '2', 'S', 0,
  /* 1765 */ 'F', 'O', 'R', 'N', 'O', 'T', '2', 'S', 0,
  /* 1774 */ 'F', 'P', 'S', 'U', 'B', '1', '6', 'S', 0,
  /* 1783 */ 'F', 'P', 'A', 'D', 'D', '1', '6', 'S', 0,
  /* 1792 */ 'F', 'S', 'U', 'B', 'S', 0,
  /* 1798 */ 'F', 'H', 'S', 'U', 'B', 'S', 0,
  /* 1805 */ 'F', 'A', 'D', 'D', 'S', 0,
  /* 1811 */ 'F', 'H', 'A', 'D', 'D', 'S', 0,
  /* 1818 */ 'F', 'N', 'H', 'A', 'D', 'D', 'S', 0,
  /* 1826 */ 'F', 'N', 'A', 'D', 'D', 'S', 0,
  /* 1833 */ 'F', 'A', 'N', 'D', 'S', 0,
  /* 1839 */ 'F', 'N', 'A', 'N', 'D', 'S', 0,
  /* 1846 */ 'F', 'O', 'N', 'E', 'S', 0,
  /* 1852 */ 'V', '9', 'F', 'C', 'M', 'P', 'E', 'S', 0,
  /* 1861 */ 'F', 'N', 'E', 'G', 'S', 0,
  /* 1867 */ 'F', 'M', 'U', 'L', 'S', 0,
  /* 1873 */ 'F', 'N', 'M', 'U', 'L', 'S', 0,
  /* 1880 */ 'F', 'Z', 'E', 'R', 'O', 'S', 0,
  /* 1887 */ 'F', 'D', 'T', 'O', 'S', 0,
  /* 1893 */ 'F', 'I', 'T', 'O', 'S', 0,
  /* 1899 */ 'F', 'Q', 'T', 'O', 'S', 0,
  /* 1905 */ 'M', 'O', 'V', 'W', 'T', 'O', 'S', 0,
  /* 1913 */ 'F', 'X', 'T', 'O', 'S', 0,
  /* 1919 */ 'V', '9', 'F', 'C', 'M', 'P', 'S', 0,
  /* 1927 */ 'F', 'L', 'C', 'M', 'P', 'S', 0,
  /* 1934 */ 'F', 'O', 'R', 'S', 0,
  /* 1939 */ 'F', 'N', 'O', 'R', 'S', 0,
  /* 1945 */ 'F', 'X', 'N', 'O', 'R', 'S', 0,
  /* 1952 */ 'F', 'X', 'O', 'R', 'S', 0,
  /* 1958 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 1975 */ 'F', 'A', 'B', 'S', 'S', 0,
  /* 1981 */ 'F', 'S', 'Q', 'R', 'T', 'S', 0,
  /* 1988 */ 'F', 'D', 'I', 'V', 'S', 0,
  /* 1994 */ 'F', 'M', 'O', 'V', 'S', 0,
  /* 2000 */ 'F', 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'S', 0,
  /* 2010 */ 'F', 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'S', 0,
  /* 2020 */ 'F', 'M', 'O', 'V', 'R', 'G', 'Z', 'S', 0,
  /* 2029 */ 'F', 'M', 'O', 'V', 'R', 'L', 'Z', 'S', 0,
  /* 2038 */ 'F', 'M', 'O', 'V', 'R', 'N', 'Z', 'S', 0,
  /* 2047 */ 'F', 'M', 'O', 'V', 'R', 'Z', 'S', 0,
  /* 2055 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 2069 */ 'S', 'E', 'T', 0,
  /* 2073 */ 'B', 'P', 'F', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2082 */ 'B', 'P', 'I', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2091 */ 'B', 'P', 'X', 'C', 'C', 'A', 'N', 'T', 0,
  /* 2100 */ 'B', 'P', 'F', 'C', 'C', 'N', 'T', 0,
  /* 2108 */ 'B', 'P', 'I', 'C', 'C', 'N', 'T', 0,
  /* 2116 */ 'B', 'P', 'X', 'C', 'C', 'N', 'T', 0,
  /* 2124 */ 'L', 'Z', 'C', 'N', 'T', 0,
  /* 2130 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 2141 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 2152 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 2167 */ 'P', 'D', 'I', 'S', 'T', 0,
  /* 2173 */ 'F', 'M', 'U', 'L', '8', 'X', '1', '6', 'A', 'U', 0,
  /* 2184 */ 'F', 'L', 'U', 'S', 'H', 'W', 0,
  /* 2191 */ 'M', 'O', 'V', 'S', 'T', 'O', 'S', 'W', 0,
  /* 2200 */ 'M', 'O', 'V', 'S', 'T', 'O', 'U', 'W', 0,
  /* 2209 */ 'G', 'E', 'T', 'P', 'C', 'X', 0,
  /* 2216 */ 'F', 'P', 'A', 'C', 'K', 'F', 'I', 'X', 0,
  /* 2225 */ 'X', 'M', 'U', 'L', 'X', 0,
  /* 2231 */ 'F', 'D', 'T', 'O', 'X', 0,
  /* 2237 */ 'M', 'O', 'V', 'D', 'T', 'O', 'X', 0,
  /* 2245 */ 'F', 'Q', 'T', 'O', 'X', 0,
  /* 2251 */ 'F', 'S', 'T', 'O', 'X', 0,
  /* 2257 */ 'C', 'O', 'P', 'Y', 0,
  /* 2262 */ 'S', 'E', 'T', 'H', 'I', 'i', 0,
  /* 2269 */ 'M', 'E', 'M', 'B', 'A', 'R', 'i', 0,
  /* 2277 */ 'S', 'E', 'T', 'H', 'I', 'X', 'i', 0,
  /* 2285 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 2305 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 2324 */ 'S', 'R', 'A', 'r', 'i', 0,
  /* 2330 */ 'L', 'D', 'S', 'B', 'r', 'i', 0,
  /* 2337 */ 'S', 'T', 'B', 'r', 'i', 0,
  /* 2343 */ 'L', 'D', 'U', 'B', 'r', 'i', 0,
  /* 2350 */ 'S', 'U', 'B', 'r', 'i', 0,
  /* 2356 */ 'L', 'D', 'S', 'T', 'U', 'B', 'r', 'i', 0,
  /* 2365 */ 'S', 'M', 'A', 'C', 'r', 'i', 0,
  /* 2372 */ 'U', 'M', 'A', 'C', 'r', 'i', 0,
  /* 2379 */ 'S', 'U', 'B', 'C', 'r', 'i', 0,
  /* 2386 */ 'T', 'S', 'U', 'B', 'C', 'C', 'r', 'i', 0,
  /* 2395 */ 'T', 'A', 'D', 'D', 'C', 'C', 'r', 'i', 0,
  /* 2404 */ 'A', 'N', 'D', 'C', 'C', 'r', 'i', 0,
  /* 2412 */ 'V', '9', 'M', 'O', 'V', 'F', 'C', 'C', 'r', 'i', 0,
  /* 2423 */ 'T', 'I', 'C', 'C', 'r', 'i', 0,
  /* 2430 */ 'M', 'O', 'V', 'I', 'C', 'C', 'r', 'i', 0,
  /* 2439 */ 'S', 'M', 'U', 'L', 'C', 'C', 'r', 'i', 0,
  /* 2448 */ 'U', 'M', 'U', 'L', 'C', 'C', 'r', 'i', 0,
  /* 2457 */ 'A', 'N', 'D', 'N', 'C', 'C', 'r', 'i', 0,
  /* 2466 */ 'O', 'R', 'N', 'C', 'C', 'r', 'i', 0,
  /* 2474 */ 'X', 'N', 'O', 'R', 'C', 'C', 'r', 'i', 0,
  /* 2483 */ 'X', 'O', 'R', 'C', 'C', 'r', 'i', 0,
  /* 2491 */ 'M', 'U', 'L', 'S', 'C', 'C', 'r', 'i', 0,
  /* 2500 */ 'S', 'D', 'I', 'V', 'C', 'C', 'r', 'i', 0,
  /* 2509 */ 'U', 'D', 'I', 'V', 'C', 'C', 'r', 'i', 0,
  /* 2518 */ 'T', 'X', 'C', 'C', 'r', 'i', 0,
  /* 2525 */ 'M', 'O', 'V', 'X', 'C', 'C', 'r', 'i', 0,
  /* 2534 */ 'A', 'D', 'D', 'C', 'r', 'i', 0,
  /* 2541 */ 'L', 'D', 'D', 'C', 'r', 'i', 0,
  /* 2548 */ 'L', 'D', 'C', 'r', 'i', 0,
  /* 2554 */ 'S', 'T', 'D', 'C', 'r', 'i', 0,
  /* 2561 */ 'S', 'T', 'C', 'r', 'i', 0,
  /* 2567 */ 'L', 'E', 'A', '_', 'A', 'D', 'D', 'r', 'i', 0,
  /* 2577 */ 'L', 'E', 'A', 'X', '_', 'A', 'D', 'D', 'r', 'i', 0,
  /* 2588 */ 'L', 'D', 'D', 'r', 'i', 0,
  /* 2594 */ 'L', 'D', 'r', 'i', 0,
  /* 2599 */ 'A', 'N', 'D', 'r', 'i', 0,
  /* 2605 */ 'B', 'I', 'N', 'D', 'r', 'i', 0,
  /* 2612 */ 'S', 'T', 'D', 'r', 'i', 0,
  /* 2618 */ 'S', 'U', 'B', 'E', 'r', 'i', 0,
  /* 2625 */ 'A', 'D', 'D', 'E', 'r', 'i', 0,
  /* 2632 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', 'r', 'i', 0,
  /* 2642 */ 'S', 'A', 'V', 'E', 'r', 'i', 0,
  /* 2649 */ 'L', 'D', 'D', 'F', 'r', 'i', 0,
  /* 2656 */ 'L', 'D', 'F', 'r', 'i', 0,
  /* 2662 */ 'S', 'T', 'D', 'F', 'r', 'i', 0,
  /* 2669 */ 'L', 'D', 'Q', 'F', 'r', 'i', 0,
  /* 2676 */ 'S', 'T', 'Q', 'F', 'r', 'i', 0,
  /* 2683 */ 'S', 'T', 'F', 'r', 'i', 0,
  /* 2689 */ 'L', 'D', 'S', 'H', 'r', 'i', 0,
  /* 2696 */ 'F', 'L', 'U', 'S', 'H', 'r', 'i', 0,
  /* 2704 */ 'S', 'T', 'H', 'r', 'i', 0,
  /* 2710 */ 'L', 'D', 'U', 'H', 'r', 'i', 0,
  /* 2717 */ 'C', 'A', 'L', 'L', 'r', 'i', 0,
  /* 2724 */ 'S', 'L', 'L', 'r', 'i', 0,
  /* 2730 */ 'J', 'M', 'P', 'L', 'r', 'i', 0,
  /* 2737 */ 'S', 'R', 'L', 'r', 'i', 0,
  /* 2743 */ 'S', 'M', 'U', 'L', 'r', 'i', 0,
  /* 2750 */ 'U', 'M', 'U', 'L', 'r', 'i', 0,
  /* 2757 */ 'W', 'R', 'W', 'I', 'M', 'r', 'i', 0,
  /* 2765 */ 'A', 'N', 'D', 'N', 'r', 'i', 0,
  /* 2772 */ 'O', 'R', 'N', 'r', 'i', 0,
  /* 2778 */ 'T', 'R', 'A', 'P', 'r', 'i', 0,
  /* 2785 */ 'S', 'W', 'A', 'P', 'r', 'i', 0,
  /* 2792 */ 'C', 'M', 'P', 'r', 'i', 0,
  /* 2798 */ 'S', 'T', 'D', 'C', 'Q', 'r', 'i', 0,
  /* 2806 */ 'S', 'T', 'D', 'F', 'Q', 'r', 'i', 0,
  /* 2814 */ 'W', 'R', 'T', 'B', 'R', 'r', 'i', 0,
  /* 2822 */ 'X', 'N', 'O', 'R', 'r', 'i', 0,
  /* 2829 */ 'X', 'O', 'R', 'r', 'i', 0,
  /* 2835 */ 'W', 'R', 'P', 'R', 'r', 'i', 0,
  /* 2842 */ 'W', 'R', 'A', 'S', 'R', 'r', 'i', 0,
  /* 2850 */ 'L', 'D', 'C', 'S', 'R', 'r', 'i', 0,
  /* 2858 */ 'S', 'T', 'C', 'S', 'R', 'r', 'i', 0,
  /* 2866 */ 'L', 'D', 'F', 'S', 'R', 'r', 'i', 0,
  /* 2874 */ 'S', 'T', 'F', 'S', 'R', 'r', 'i', 0,
  /* 2882 */ 'L', 'D', 'X', 'F', 'S', 'R', 'r', 'i', 0,
  /* 2891 */ 'S', 'T', 'X', 'F', 'S', 'R', 'r', 'i', 0,
  /* 2900 */ 'W', 'R', 'P', 'S', 'R', 'r', 'i', 0,
  /* 2908 */ 'S', 'T', 'r', 'i', 0,
  /* 2913 */ 'R', 'E', 'T', 'T', 'r', 'i', 0,
  /* 2920 */ 'S', 'D', 'I', 'V', 'r', 'i', 0,
  /* 2927 */ 'U', 'D', 'I', 'V', 'r', 'i', 0,
  /* 2934 */ 'T', 'S', 'U', 'B', 'C', 'C', 'T', 'V', 'r', 'i', 0,
  /* 2945 */ 'T', 'A', 'D', 'D', 'C', 'C', 'T', 'V', 'r', 'i', 0,
  /* 2956 */ 'L', 'D', 'S', 'W', 'r', 'i', 0,
  /* 2963 */ 'S', 'R', 'A', 'X', 'r', 'i', 0,
  /* 2970 */ 'S', 'U', 'B', 'X', 'r', 'i', 0,
  /* 2977 */ 'A', 'D', 'D', 'X', 'r', 'i', 0,
  /* 2984 */ 'L', 'D', 'X', 'r', 'i', 0,
  /* 2990 */ 'A', 'N', 'D', 'X', 'r', 'i', 0,
  /* 2997 */ 'S', 'L', 'L', 'X', 'r', 'i', 0,
  /* 3004 */ 'S', 'R', 'L', 'X', 'r', 'i', 0,
  /* 3011 */ 'M', 'U', 'L', 'X', 'r', 'i', 0,
  /* 3018 */ 'X', 'O', 'R', 'X', 'r', 'i', 0,
  /* 3025 */ 'S', 'T', 'X', 'r', 'i', 0,
  /* 3031 */ 'S', 'D', 'I', 'V', 'X', 'r', 'i', 0,
  /* 3039 */ 'U', 'D', 'I', 'V', 'X', 'r', 'i', 0,
  /* 3047 */ 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'r', 'i', 0,
  /* 3057 */ 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'r', 'i', 0,
  /* 3067 */ 'M', 'O', 'V', 'R', 'G', 'Z', 'r', 'i', 0,
  /* 3076 */ 'M', 'O', 'V', 'R', 'L', 'Z', 'r', 'i', 0,
  /* 3085 */ 'M', 'O', 'V', 'R', 'N', 'Z', 'r', 'i', 0,
  /* 3094 */ 'M', 'O', 'V', 'R', 'R', 'Z', 'r', 'i', 0,
  /* 3103 */ 'B', 'P', 'G', 'E', 'Z', 'a', 'p', 'n', 0,
  /* 3112 */ 'B', 'P', 'L', 'E', 'Z', 'a', 'p', 'n', 0,
  /* 3121 */ 'B', 'P', 'G', 'Z', 'a', 'p', 'n', 0,
  /* 3129 */ 'B', 'P', 'L', 'Z', 'a', 'p', 'n', 0,
  /* 3137 */ 'B', 'P', 'N', 'Z', 'a', 'p', 'n', 0,
  /* 3145 */ 'B', 'P', 'Z', 'a', 'p', 'n', 0,
  /* 3152 */ 'B', 'P', 'G', 'E', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3162 */ 'B', 'P', 'L', 'E', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3172 */ 'B', 'P', 'G', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3181 */ 'B', 'P', 'L', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3190 */ 'B', 'P', 'N', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3199 */ 'B', 'P', 'Z', 'n', 'a', 'p', 'n', 0,
  /* 3207 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'L', 'O', 'N', 'G', 'J', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 3227 */ 'E', 'H', '_', 'S', 'J', 'L', 'J', '_', 'S', 'E', 'T', 'J', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 3246 */ 'L', 'D', 'S', 'B', 'A', 'r', 'r', 0,
  /* 3254 */ 'S', 'T', 'B', 'A', 'r', 'r', 0,
  /* 3261 */ 'L', 'D', 'U', 'B', 'A', 'r', 'r', 0,
  /* 3269 */ 'L', 'D', 'S', 'T', 'U', 'B', 'A', 'r', 'r', 0,
  /* 3279 */ 'L', 'D', 'D', 'A', 'r', 'r', 0,
  /* 3286 */ 'L', 'D', 'A', 'r', 'r', 0,
  /* 3292 */ 'S', 'T', 'D', 'A', 'r', 'r', 0,
  /* 3299 */ 'L', 'D', 'D', 'F', 'A', 'r', 'r', 0,
  /* 3307 */ 'L', 'D', 'F', 'A', 'r', 'r', 0,
  /* 3314 */ 'S', 'T', 'D', 'F', 'A', 'r', 'r', 0,
  /* 3322 */ 'L', 'D', 'Q', 'F', 'A', 'r', 'r', 0,
  /* 3330 */ 'S', 'T', 'Q', 'F', 'A', 'r', 'r', 0,
  /* 3338 */ 'S', 'T', 'F', 'A', 'r', 'r', 0,
  /* 3345 */ 'L', 'D', 'S', 'H', 'A', 'r', 'r', 0,
  /* 3353 */ 'S', 'T', 'H', 'A', 'r', 'r', 0,
  /* 3360 */ 'L', 'D', 'U', 'H', 'A', 'r', 'r', 0,
  /* 3368 */ 'S', 'W', 'A', 'P', 'A', 'r', 'r', 0,
  /* 3376 */ 'S', 'R', 'A', 'r', 'r', 0,
  /* 3382 */ 'C', 'A', 'S', 'A', 'r', 'r', 0,
  /* 3389 */ 'S', 'T', 'A', 'r', 'r', 0,
  /* 3395 */ 'L', 'D', 'S', 'B', 'r', 'r', 0,
  /* 3402 */ 'S', 'T', 'B', 'r', 'r', 0,
  /* 3408 */ 'L', 'D', 'U', 'B', 'r', 'r', 0,
  /* 3415 */ 'S', 'U', 'B', 'r', 'r', 0,
  /* 3421 */ 'L', 'D', 'S', 'T', 'U', 'B', 'r', 'r', 0,
  /* 3430 */ 'S', 'M', 'A', 'C', 'r', 'r', 0,
  /* 3437 */ 'U', 'M', 'A', 'C', 'r', 'r', 0,
  /* 3444 */ 'S', 'U', 'B', 'C', 'r', 'r', 0,
  /* 3451 */ 'T', 'S', 'U', 'B', 'C', 'C', 'r', 'r', 0,
  /* 3460 */ 'T', 'A', 'D', 'D', 'C', 'C', 'r', 'r', 0,
  /* 3469 */ 'A', 'N', 'D', 'C', 'C', 'r', 'r', 0,
  /* 3477 */ 'V', '9', 'M', 'O', 'V', 'F', 'C', 'C', 'r', 'r', 0,
  /* 3488 */ 'T', 'I', 'C', 'C', 'r', 'r', 0,
  /* 3495 */ 'M', 'O', 'V', 'I', 'C', 'C', 'r', 'r', 0,
  /* 3504 */ 'S', 'M', 'U', 'L', 'C', 'C', 'r', 'r', 0,
  /* 3513 */ 'U', 'M', 'U', 'L', 'C', 'C', 'r', 'r', 0,
  /* 3522 */ 'A', 'N', 'D', 'N', 'C', 'C', 'r', 'r', 0,
  /* 3531 */ 'O', 'R', 'N', 'C', 'C', 'r', 'r', 0,
  /* 3539 */ 'X', 'N', 'O', 'R', 'C', 'C', 'r', 'r', 0,
  /* 3548 */ 'X', 'O', 'R', 'C', 'C', 'r', 'r', 0,
  /* 3556 */ 'M', 'U', 'L', 'S', 'C', 'C', 'r', 'r', 0,
  /* 3565 */ 'S', 'D', 'I', 'V', 'C', 'C', 'r', 'r', 0,
  /* 3574 */ 'U', 'D', 'I', 'V', 'C', 'C', 'r', 'r', 0,
  /* 3583 */ 'T', 'X', 'C', 'C', 'r', 'r', 0,
  /* 3590 */ 'M', 'O', 'V', 'X', 'C', 'C', 'r', 'r', 0,
  /* 3599 */ 'A', 'D', 'D', 'C', 'r', 'r', 0,
  /* 3606 */ 'L', 'D', 'D', 'C', 'r', 'r', 0,
  /* 3613 */ 'L', 'D', 'C', 'r', 'r', 0,
  /* 3619 */ 'S', 'T', 'D', 'C', 'r', 'r', 0,
  /* 3626 */ 'P', 'O', 'P', 'C', 'r', 'r', 0,
  /* 3633 */ 'S', 'T', 'C', 'r', 'r', 0,
  /* 3639 */ 'T', 'L', 'S', '_', 'A', 'D', 'D', 'r', 'r', 0,
  /* 3649 */ 'L', 'D', 'D', 'r', 'r', 0,
  /* 3655 */ 'T', 'L', 'S', '_', 'L', 'D', 'r', 'r', 0,
  /* 3664 */ 'A', 'N', 'D', 'r', 'r', 0,
  /* 3670 */ 'B', 'I', 'N', 'D', 'r', 'r', 0,
  /* 3677 */ 'S', 'T', 'D', 'r', 'r', 0,
  /* 3683 */ 'S', 'U', 'B', 'E', 'r', 'r', 0,
  /* 3690 */ 'A', 'D', 'D', 'E', 'r', 'r', 0,
  /* 3697 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', 'r', 'r', 0,
  /* 3707 */ 'S', 'A', 'V', 'E', 'r', 'r', 0,
  /* 3714 */ 'L', 'D', 'D', 'F', 'r', 'r', 0,
  /* 3721 */ 'L', 'D', 'F', 'r', 'r', 0,
  /* 3727 */ 'S', 'T', 'D', 'F', 'r', 'r', 0,
  /* 3734 */ 'L', 'D', 'Q', 'F', 'r', 'r', 0,
  /* 3741 */ 'S', 'T', 'Q', 'F', 'r', 'r', 0,
  /* 3748 */ 'S', 'T', 'F', 'r', 'r', 0,
  /* 3754 */ 'L', 'D', 'S', 'H', 'r', 'r', 0,
  /* 3761 */ 'F', 'L', 'U', 'S', 'H', 'r', 'r', 0,
  /* 3769 */ 'S', 'T', 'H', 'r', 'r', 0,
  /* 3775 */ 'L', 'D', 'U', 'H', 'r', 'r', 0,
  /* 3782 */ 'C', 'A', 'L', 'L', 'r', 'r', 0,
  /* 3789 */ 'S', 'L', 'L', 'r', 'r', 0,
  /* 3795 */ 'J', 'M', 'P', 'L', 'r', 'r', 0,
  /* 3802 */ 'S', 'R', 'L', 'r', 'r', 0,
  /* 3808 */ 'S', 'M', 'U', 'L', 'r', 'r', 0,
  /* 3815 */ 'U', 'M', 'U', 'L', 'r', 'r', 0,
  /* 3822 */ 'W', 'R', 'W', 'I', 'M', 'r', 'r', 0,
  /* 3830 */ 'A', 'N', 'D', 'N', 'r', 'r', 0,
  /* 3837 */ 'O', 'R', 'N', 'r', 'r', 0,
  /* 3843 */ 'A', 'N', 'D', 'X', 'N', 'r', 'r', 0,
  /* 3851 */ 'O', 'R', 'X', 'N', 'r', 'r', 0,
  /* 3858 */ 'T', 'R', 'A', 'P', 'r', 'r', 0,
  /* 3865 */ 'S', 'W', 'A', 'P', 'r', 'r', 0,
  /* 3872 */ 'C', 'M', 'P', 'r', 'r', 0,
  /* 3878 */ 'S', 'T', 'D', 'C', 'Q', 'r', 'r', 0,
  /* 3886 */ 'S', 'T', 'D', 'F', 'Q', 'r', 'r', 0,
  /* 3894 */ 'W', 'R', 'T', 'B', 'R', 'r', 'r', 0,
  /* 3902 */ 'X', 'N', 'O', 'R', 'r', 'r', 0,
  /* 3909 */ 'X', 'O', 'R', 'r', 'r', 0,
  /* 3915 */ 'W', 'R', 'P', 'R', 'r', 'r', 0,
  /* 3922 */ 'W', 'R', 'A', 'S', 'R', 'r', 'r', 0,
  /* 3930 */ 'L', 'D', 'C', 'S', 'R', 'r', 'r', 0,
  /* 3938 */ 'S', 'T', 'C', 'S', 'R', 'r', 'r', 0,
  /* 3946 */ 'L', 'D', 'F', 'S', 'R', 'r', 'r', 0,
  /* 3954 */ 'S', 'T', 'F', 'S', 'R', 'r', 'r', 0,
  /* 3962 */ 'L', 'D', 'X', 'F', 'S', 'R', 'r', 'r', 0,
  /* 3971 */ 'S', 'T', 'X', 'F', 'S', 'R', 'r', 'r', 0,
  /* 3980 */ 'W', 'R', 'P', 'S', 'R', 'r', 'r', 0,
  /* 3988 */ 'C', 'A', 'S', 'r', 'r', 0,
  /* 3994 */ 'S', 'T', 'r', 'r', 0,
  /* 3999 */ 'R', 'E', 'T', 'T', 'r', 'r', 0,
  /* 4006 */ 'S', 'D', 'I', 'V', 'r', 'r', 0,
  /* 4013 */ 'U', 'D', 'I', 'V', 'r', 'r', 0,
  /* 4020 */ 'T', 'S', 'U', 'B', 'C', 'C', 'T', 'V', 'r', 'r', 0,
  /* 4031 */ 'T', 'A', 'D', 'D', 'C', 'C', 'T', 'V', 'r', 'r', 0,
  /* 4042 */ 'L', 'D', 'S', 'W', 'r', 'r', 0,
  /* 4049 */ 'S', 'R', 'A', 'X', 'r', 'r', 0,
  /* 4056 */ 'S', 'U', 'B', 'X', 'r', 'r', 0,
  /* 4063 */ 'T', 'L', 'S', '_', 'A', 'D', 'D', 'X', 'r', 'r', 0,
  /* 4074 */ 'T', 'L', 'S', '_', 'L', 'D', 'X', 'r', 'r', 0,
  /* 4084 */ 'A', 'N', 'D', 'X', 'r', 'r', 0,
  /* 4091 */ 'S', 'L', 'L', 'X', 'r', 'r', 0,
  /* 4098 */ 'S', 'R', 'L', 'X', 'r', 'r', 0,
  /* 4105 */ 'M', 'U', 'L', 'X', 'r', 'r', 0,
  /* 4112 */ 'X', 'N', 'O', 'R', 'X', 'r', 'r', 0,
  /* 4120 */ 'X', 'O', 'R', 'X', 'r', 'r', 0,
  /* 4127 */ 'C', 'A', 'S', 'X', 'r', 'r', 0,
  /* 4134 */ 'S', 'T', 'X', 'r', 'r', 0,
  /* 4140 */ 'S', 'D', 'I', 'V', 'X', 'r', 'r', 0,
  /* 4148 */ 'U', 'D', 'I', 'V', 'X', 'r', 'r', 0,
  /* 4156 */ 'M', 'O', 'V', 'R', 'G', 'E', 'Z', 'r', 'r', 0,
  /* 4166 */ 'M', 'O', 'V', 'R', 'L', 'E', 'Z', 'r', 'r', 0,
  /* 4176 */ 'M', 'O', 'V', 'R', 'G', 'Z', 'r', 'r', 0,
  /* 4185 */ 'M', 'O', 'V', 'R', 'L', 'Z', 'r', 'r', 0,
  /* 4194 */ 'M', 'O', 'V', 'R', 'N', 'Z', 'r', 'r', 0,
  /* 4203 */ 'M', 'O', 'V', 'R', 'R', 'Z', 'r', 'r', 0,
  /* 4212 */ 'B', 'P', 'G', 'E', 'Z', 'a', 'p', 't', 0,
  /* 4221 */ 'B', 'P', 'L', 'E', 'Z', 'a', 'p', 't', 0,
  /* 4230 */ 'B', 'P', 'G', 'Z', 'a', 'p', 't', 0,
  /* 4238 */ 'B', 'P', 'L', 'Z', 'a', 'p', 't', 0,
  /* 4246 */ 'B', 'P', 'N', 'Z', 'a', 'p', 't', 0,
  /* 4254 */ 'B', 'P', 'Z', 'a', 'p', 't', 0,
  /* 4261 */ 'B', 'P', 'G', 'E', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4271 */ 'B', 'P', 'L', 'E', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4281 */ 'B', 'P', 'G', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4290 */ 'B', 'P', 'L', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4299 */ 'B', 'P', 'N', 'Z', 'n', 'a', 'p', 't', 0,
  /* 4308 */ 'B', 'P', 'Z', 'n', 'a', 'p', 't', 0,
};

extern const unsigned SparcInstrNameIndices[] = {
    1129U, 1266U, 1325U, 1216U, 1207U, 1234U, 1080U, 1095U, 
    1067U, 1109U, 1958U, 1057U, 1002U, 2257U, 1023U, 2152U, 
    831U, 1380U, 2141U, 905U, 2130U, 1044U, 1399U, 1416U, 
    1623U, 2055U, 735U, 1668U, 1608U, 2396U, 3461U, 2534U, 
    3599U, 2625U, 3690U, 716U, 452U, 2977U, 4067U, 2571U, 
    3643U, 1348U, 1429U, 1613U, 1239U, 2404U, 3469U, 2457U, 
    3522U, 2765U, 3830U, 3843U, 2990U, 4084U, 2599U, 3664U, 
    372U, 143U, 393U, 400U, 845U, 425U, 2605U, 3670U, 
    1167U, 460U, 403U, 2073U, 2100U, 3103U, 4212U, 3152U, 
    4261U, 3121U, 4230U, 3172U, 4281U, 573U, 410U, 2082U, 
    2108U, 3112U, 4221U, 3162U, 4271U, 3129U, 4238U, 3181U, 
    4290U, 3137U, 4246U, 3190U, 4299U, 680U, 417U, 2091U, 
    2116U, 3145U, 4254U, 3199U, 4308U, 1030U, 1229U, 2717U, 
    3782U, 0U, 3382U, 4127U, 3988U, 844U, 424U, 252U, 
    95U, 386U, 2792U, 3872U, 219U, 1181U, 1308U, 1284U, 
    62U, 1173U, 1299U, 1276U, 380U, 1189U, 1317U, 1292U, 
    2285U, 3207U, 2305U, 3227U, 922U, 1516U, 1975U, 741U, 
    1450U, 1805U, 440U, 812U, 16U, 1697U, 157U, 1748U, 
    1833U, 851U, 432U, 274U, 892U, 291U, 117U, 308U, 
    134U, 226U, 69U, 235U, 78U, 1510U, 1921U, 935U, 
    1529U, 1988U, 1471U, 1149U, 1484U, 1887U, 2231U, 823U, 
    747U, 1811U, 728U, 1798U, 858U, 1490U, 1893U, 898U, 
    1927U, 1123U, 2184U, 2696U, 3761U, 283U, 941U, 468U, 
    579U, 686U, 1535U, 533U, 642U, 696U, 947U, 1541U, 
    2000U, 967U, 1561U, 2020U, 957U, 1551U, 2010U, 976U, 
    1570U, 2029U, 985U, 1579U, 2038U, 994U, 1588U, 2047U, 
    1994U, 545U, 652U, 706U, 361U, 338U, 317U, 1196U, 
    2173U, 784U, 349U, 326U, 1478U, 1867U, 762U, 1826U, 
    817U, 1839U, 778U, 1465U, 1861U, 754U, 1818U, 790U, 
    1873U, 1652U, 1939U, 25U, 1707U, 166U, 1758U, 804U, 
    1039U, 1846U, 1648U, 31U, 1714U, 172U, 1765U, 1934U, 
    244U, 87U, 2216U, 211U, 1783U, 54U, 1732U, 184U, 
    1015U, 203U, 1774U, 46U, 1723U, 864U, 1155U, 1899U, 
    2245U, 300U, 126U, 260U, 103U, 797U, 928U, 1522U, 
    1981U, 196U, 39U, 10U, 1690U, 151U, 1741U, 267U, 
    110U, 870U, 1161U, 1496U, 2251U, 722U, 1444U, 1792U, 
    1657U, 1945U, 1663U, 1952U, 876U, 1502U, 1913U, 1374U, 
    1880U, 2209U, 2730U, 3795U, 3286U, 2850U, 3930U, 2548U, 
    3613U, 3279U, 2541U, 3606U, 3299U, 2649U, 3714U, 2588U, 
    3649U, 3307U, 2866U, 3946U, 2656U, 3721U, 3322U, 2669U, 
    3734U, 3246U, 2330U, 3395U, 3345U, 2689U, 3754U, 3269U, 
    2356U, 3421U, 2956U, 4042U, 3261U, 2343U, 3408U, 3360U, 
    2710U, 3775U, 2882U, 3962U, 2984U, 4078U, 2594U, 3659U, 
    2577U, 2567U, 2124U, 2269U, 2237U, 2414U, 3479U, 2430U, 
    3495U, 3047U, 4156U, 3067U, 4176U, 3057U, 4166U, 3076U, 
    4185U, 3085U, 4194U, 3094U, 4203U, 2191U, 2200U, 1905U, 
    2525U, 3590U, 882U, 2491U, 3556U, 3011U, 4105U, 1395U, 
    2476U, 3541U, 2466U, 3531U, 2772U, 3837U, 3851U, 3019U, 
    4114U, 2824U, 3904U, 2167U, 1341U, 3626U, 1678U, 1673U, 
    1684U, 1602U, 1260U, 2632U, 3697U, 2065U, 1250U, 2913U, 
    3999U, 2642U, 3707U, 2500U, 3565U, 3031U, 4140U, 2920U, 
    4006U, 478U, 589U, 514U, 625U, 555U, 662U, 496U, 
    607U, 2069U, 2277U, 2262U, 1365U, 1255U, 2997U, 4091U, 
    2724U, 3789U, 2365U, 3430U, 2439U, 3504U, 2743U, 3808U, 
    2963U, 4049U, 2324U, 3376U, 3004U, 4098U, 2737U, 3802U, 
    3389U, 1596U, 3254U, 2337U, 3402U, 2858U, 3938U, 2561U, 
    3633U, 3292U, 2798U, 3878U, 2554U, 3619U, 3314U, 2806U, 
    3886U, 2662U, 3727U, 2612U, 3677U, 3338U, 2874U, 3954U, 
    2683U, 3748U, 3353U, 2704U, 3769U, 3330U, 2676U, 3741U, 
    2891U, 3971U, 3025U, 4134U, 2908U, 3994U, 2387U, 3452U, 
    2379U, 3444U, 2618U, 3683U, 2970U, 4056U, 2350U, 3415U, 
    3368U, 2785U, 3865U, 180U, 192U, 2945U, 4031U, 2395U, 
    3460U, 2423U, 3488U, 4063U, 3639U, 1225U, 4074U, 3655U, 
    2778U, 3858U, 2934U, 4020U, 2386U, 3451U, 2518U, 3583U, 
    2509U, 3574U, 3039U, 4148U, 2927U, 4013U, 2372U, 3437U, 
    2448U, 3513U, 1133U, 2750U, 3815U, 1389U, 890U, 769U, 
    1456U, 1852U, 1508U, 1919U, 466U, 531U, 543U, 2412U, 
    3477U, 2842U, 3922U, 2835U, 3915U, 2900U, 3980U, 2814U, 
    3894U, 2757U, 3822U, 2225U, 1141U, 2474U, 3539U, 4112U, 
    2822U, 3902U, 2483U, 3548U, 3018U, 4120U, 2829U, 3909U, 
};

static inline void InitSparcMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(SparcInsts, SparcInstrNameIndices, SparcInstrNameData, 560);
}

} // end llvm namespace
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct SparcGenInstrInfo : public TargetInstrInfo {
  explicit SparcGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~SparcGenInstrInfo() override {}
};
} // end llvm namespace
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc SparcInsts[];
extern const unsigned SparcInstrNameIndices[];
extern const char SparcInstrNameData[];
SparcGenInstrInfo::SparcGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(SparcInsts, SparcInstrNameIndices, SparcInstrNameData, 560);
}
} // end llvm namespace
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace SP {
namespace OpName {
enum {
OPERAND_LAST
};
} // end namespace OpName
} // end namespace SP
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace SP {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace SP
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace SP {
namespace OpTypes {
enum OperandType {
  CCOp = 0,
  MEMri = 1,
  MEMrr = 2,
  TLSSym = 3,
  bprtarget = 4,
  bprtarget16 = 5,
  brtarget = 6,
  calltarget = 7,
  f32imm = 8,
  f64imm = 9,
  getPCX = 10,
  i16imm = 11,
  i1imm = 12,
  i32imm = 13,
  i64imm = 14,
  i8imm = 15,
  simm13Op = 16,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace SP
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

