/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Assembly Writer Source Fragment                                            *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

/// printInstruction - This method is automatically generated by tablegen
/// from the instruction set description.
void SystemZInstPrinter::printInstruction(const MCInst *MI, raw_ostream &O) {
  static const char AsmStrs[] = {
  /* 0 */ 'l', 'a', 'a', 9, 0,
  /* 5 */ 's', 'l', 'a', 9, 0,
  /* 10 */ 'p', 'p', 'a', 9, 0,
  /* 15 */ 'l', 'e', 'd', 'b', 'r', 'a', 9, 0,
  /* 23 */ 'f', 'i', 'd', 'b', 'r', 'a', 9, 0,
  /* 31 */ 'f', 'i', 'e', 'b', 'r', 'a', 9, 0,
  /* 39 */ 'l', 'd', 'x', 'b', 'r', 'a', 9, 0,
  /* 47 */ 'l', 'e', 'x', 'b', 'r', 'a', 9, 0,
  /* 55 */ 'f', 'i', 'x', 'b', 'r', 'a', 9, 0,
  /* 63 */ 'v', 's', 'r', 'a', 9, 0,
  /* 69 */ 'v', 'g', 'f', 'm', 'a', 'b', 9, 0,
  /* 77 */ 'v', 'e', 's', 'r', 'a', 'b', 9, 0,
  /* 85 */ 'v', 's', 'r', 'a', 'b', 9, 0,
  /* 92 */ 'v', 'a', 'b', 9, 0,
  /* 97 */ 'l', 'c', 'b', 'b', 9, 0,
  /* 103 */ 'v', 'l', 'b', 'b', 9, 0,
  /* 109 */ 'v', 'a', 'c', 'c', 'b', 9, 0,
  /* 116 */ 'v', 'e', 'c', 'b', 9, 0,
  /* 122 */ 'v', 'l', 'c', 'b', 9, 0,
  /* 128 */ 'v', 's', 't', 'r', 'c', 'b', 9, 0,
  /* 136 */ 'v', 'f', 'a', 'd', 'b', 9, 0,
  /* 143 */ 'w', 'f', 'a', 'd', 'b', 9, 0,
  /* 150 */ 'v', 'f', 'm', 'a', 'd', 'b', 9, 0,
  /* 158 */ 'w', 'f', 'm', 'a', 'd', 'b', 9, 0,
  /* 166 */ 'w', 'f', 'c', 'd', 'b', 9, 0,
  /* 173 */ 'v', 'f', 'l', 'c', 'd', 'b', 9, 0,
  /* 181 */ 'w', 'f', 'l', 'c', 'd', 'b', 9, 0,
  /* 189 */ 't', 'c', 'd', 'b', 9, 0,
  /* 195 */ 'v', 'f', 'd', 'd', 'b', 9, 0,
  /* 202 */ 'w', 'f', 'd', 'd', 'b', 9, 0,
  /* 209 */ 'v', 'f', 'c', 'e', 'd', 'b', 9, 0,
  /* 217 */ 'w', 'f', 'c', 'e', 'd', 'b', 9, 0,
  /* 225 */ 'v', 'f', 'c', 'h', 'e', 'd', 'b', 9, 0,
  /* 234 */ 'w', 'f', 'c', 'h', 'e', 'd', 'b', 9, 0,
  /* 243 */ 'v', 'l', 'e', 'd', 'b', 9, 0,
  /* 250 */ 'w', 'l', 'e', 'd', 'b', 9, 0,
  /* 257 */ 'v', 'c', 'g', 'd', 'b', 9, 0,
  /* 264 */ 'w', 'c', 'g', 'd', 'b', 9, 0,
  /* 271 */ 'v', 'c', 'l', 'g', 'd', 'b', 9, 0,
  /* 279 */ 'w', 'c', 'l', 'g', 'd', 'b', 9, 0,
  /* 287 */ 'v', 'f', 'c', 'h', 'd', 'b', 9, 0,
  /* 295 */ 'w', 'f', 'c', 'h', 'd', 'b', 9, 0,
  /* 303 */ 'v', 'f', 't', 'c', 'i', 'd', 'b', 9, 0,
  /* 312 */ 'w', 'f', 't', 'c', 'i', 'd', 'b', 9, 0,
  /* 321 */ 'v', 'f', 'i', 'd', 'b', 9, 0,
  /* 328 */ 'w', 'f', 'i', 'd', 'b', 9, 0,
  /* 335 */ 'w', 'f', 'k', 'd', 'b', 9, 0,
  /* 342 */ 'v', 's', 'l', 'd', 'b', 9, 0,
  /* 349 */ 'v', 'f', 'm', 'd', 'b', 9, 0,
  /* 356 */ 'w', 'f', 'm', 'd', 'b', 9, 0,
  /* 363 */ 'v', 'f', 'l', 'n', 'd', 'b', 9, 0,
  /* 371 */ 'w', 'f', 'l', 'n', 'd', 'b', 9, 0,
  /* 379 */ 'v', 'f', 'l', 'p', 'd', 'b', 9, 0,
  /* 387 */ 'w', 'f', 'l', 'p', 'd', 'b', 9, 0,
  /* 395 */ 'v', 'f', 's', 'q', 'd', 'b', 9, 0,
  /* 403 */ 'w', 'f', 's', 'q', 'd', 'b', 9, 0,
  /* 411 */ 'v', 'f', 's', 'd', 'b', 9, 0,
  /* 418 */ 'w', 'f', 's', 'd', 'b', 9, 0,
  /* 425 */ 'v', 'f', 'm', 's', 'd', 'b', 9, 0,
  /* 433 */ 'w', 'f', 'm', 's', 'd', 'b', 9, 0,
  /* 441 */ 'l', 'x', 'd', 'b', 9, 0,
  /* 447 */ 'm', 'x', 'd', 'b', 9, 0,
  /* 453 */ 'v', 'f', 'a', 'e', 'b', 9, 0,
  /* 460 */ 'v', 'm', 'a', 'e', 'b', 9, 0,
  /* 467 */ 't', 'c', 'e', 'b', 9, 0,
  /* 473 */ 'v', 'l', 'd', 'e', 'b', 9, 0,
  /* 480 */ 'w', 'l', 'd', 'e', 'b', 9, 0,
  /* 487 */ 'm', 'd', 'e', 'b', 9, 0,
  /* 493 */ 'v', 'f', 'e', 'e', 'b', 9, 0,
  /* 500 */ 'm', 'e', 'e', 'b', 9, 0,
  /* 506 */ 'v', 'm', 'a', 'l', 'e', 'b', 9, 0,
  /* 514 */ 'v', 'm', 'l', 'e', 'b', 9, 0,
  /* 521 */ 'v', 'l', 'e', 'b', 9, 0,
  /* 527 */ 'v', 'm', 'e', 'b', 9, 0,
  /* 533 */ 'v', 'f', 'e', 'n', 'e', 'b', 9, 0,
  /* 541 */ 's', 'q', 'e', 'b', 9, 0,
  /* 547 */ 'm', 's', 'e', 'b', 9, 0,
  /* 553 */ 'v', 's', 't', 'e', 'b', 9, 0,
  /* 560 */ 'l', 'x', 'e', 'b', 9, 0,
  /* 566 */ 'v', 'c', 'd', 'g', 'b', 9, 0,
  /* 573 */ 'w', 'c', 'd', 'g', 'b', 9, 0,
  /* 580 */ 'v', 's', 'e', 'g', 'b', 9, 0,
  /* 587 */ 'v', 'c', 'd', 'l', 'g', 'b', 9, 0,
  /* 595 */ 'w', 'c', 'd', 'l', 'g', 'b', 9, 0,
  /* 603 */ 'v', 'a', 'v', 'g', 'b', 9, 0,
  /* 610 */ 'v', 'l', 'v', 'g', 'b', 9, 0,
  /* 617 */ 'v', 'm', 'a', 'h', 'b', 9, 0,
  /* 624 */ 'v', 'c', 'h', 'b', 9, 0,
  /* 630 */ 'v', 'm', 'a', 'l', 'h', 'b', 9, 0,
  /* 638 */ 'v', 'm', 'l', 'h', 'b', 9, 0,
  /* 645 */ 'v', 'u', 'p', 'l', 'h', 'b', 9, 0,
  /* 653 */ 'v', 'm', 'h', 'b', 9, 0,
  /* 659 */ 'v', 'u', 'p', 'h', 'b', 9, 0,
  /* 666 */ 'v', 'm', 'r', 'h', 'b', 9, 0,
  /* 673 */ 'v', 's', 'c', 'b', 'i', 'b', 9, 0,
  /* 681 */ 'c', 'i', 'b', 9, 0,
  /* 686 */ 'v', 'l', 'e', 'i', 'b', 9, 0,
  /* 693 */ 'c', 'g', 'i', 'b', 9, 0,
  /* 699 */ 'c', 'l', 'g', 'i', 'b', 9, 0,
  /* 706 */ 'c', 'l', 'i', 'b', 9, 0,
  /* 712 */ 'v', 'r', 'e', 'p', 'i', 'b', 9, 0,
  /* 720 */ 'v', 'm', 'a', 'l', 'b', 9, 0,
  /* 727 */ 'v', 'e', 'c', 'l', 'b', 9, 0,
  /* 734 */ 'v', 'a', 'v', 'g', 'l', 'b', 9, 0,
  /* 742 */ 'v', 'c', 'h', 'l', 'b', 9, 0,
  /* 749 */ 'v', 'u', 'p', 'l', 'l', 'b', 9, 0,
  /* 757 */ 'v', 'e', 'r', 'l', 'l', 'b', 9, 0,
  /* 765 */ 'v', 'm', 'l', 'b', 9, 0,
  /* 771 */ 'v', 'm', 'n', 'l', 'b', 9, 0,
  /* 778 */ 'v', 'u', 'p', 'l', 'b', 9, 0,
  /* 785 */ 'v', 'm', 'r', 'l', 'b', 9, 0,
  /* 792 */ 'v', 'e', 's', 'r', 'l', 'b', 9, 0,
  /* 800 */ 'v', 's', 'r', 'l', 'b', 9, 0,
  /* 807 */ 'v', 'e', 's', 'l', 'b', 9, 0,
  /* 814 */ 'v', 's', 'l', 'b', 9, 0,
  /* 820 */ 'v', 'm', 'x', 'l', 'b', 9, 0,
  /* 827 */ 'v', 'g', 'f', 'm', 'b', 9, 0,
  /* 834 */ 'v', 'g', 'm', 'b', 9, 0,
  /* 840 */ 'v', 'e', 'r', 'i', 'm', 'b', 9, 0,
  /* 848 */ 'v', 's', 'u', 'm', 'b', 9, 0,
  /* 855 */ 'v', 'm', 'n', 'b', 9, 0,
  /* 861 */ 'v', 'm', 'a', 'o', 'b', 9, 0,
  /* 868 */ 'v', 'm', 'a', 'l', 'o', 'b', 9, 0,
  /* 876 */ 'v', 'm', 'l', 'o', 'b', 9, 0,
  /* 883 */ 'v', 'm', 'o', 'b', 9, 0,
  /* 889 */ 'v', 'l', 'r', 'e', 'p', 'b', 9, 0,
  /* 897 */ 'v', 'r', 'e', 'p', 'b', 9, 0,
  /* 904 */ 'v', 'l', 'p', 'b', 9, 0,
  /* 910 */ 'v', 'c', 'e', 'q', 'b', 9, 0,
  /* 917 */ 'c', 'r', 'b', 9, 0,
  /* 922 */ 'c', 'g', 'r', 'b', 9, 0,
  /* 928 */ 'c', 'l', 'g', 'r', 'b', 9, 0,
  /* 935 */ 'c', 'l', 'r', 'b', 9, 0,
  /* 941 */ 'v', 'i', 's', 't', 'r', 'b', 9, 0,
  /* 949 */ 'v', 's', 'b', 9, 0,
  /* 954 */ 'v', 'e', 's', 'r', 'a', 'v', 'b', 9, 0,
  /* 963 */ 'v', 'l', 'g', 'v', 'b', 9, 0,
  /* 970 */ 'v', 'e', 'r', 'l', 'l', 'v', 'b', 9, 0,
  /* 979 */ 'v', 'e', 's', 'r', 'l', 'v', 'b', 9, 0,
  /* 988 */ 'v', 'e', 's', 'l', 'v', 'b', 9, 0,
  /* 996 */ 't', 'c', 'x', 'b', 9, 0,
  /* 1002 */ 'v', 'm', 'x', 'b', 9, 0,
  /* 1008 */ 'v', 's', 't', 'r', 'c', 'z', 'b', 9, 0,
  /* 1017 */ 'v', 'f', 'a', 'e', 'z', 'b', 9, 0,
  /* 1025 */ 'v', 'f', 'e', 'e', 'z', 'b', 9, 0,
  /* 1033 */ 'v', 'l', 'l', 'e', 'z', 'b', 9, 0,
  /* 1041 */ 'v', 'f', 'e', 'n', 'e', 'z', 'b', 9, 0,
  /* 1050 */ 'v', 'c', 'l', 'z', 'b', 9, 0,
  /* 1057 */ 'v', 'c', 't', 'z', 'b', 9, 0,
  /* 1064 */ 'b', 'c', 9, 0,
  /* 1068 */ 'l', 'l', 'g', 'c', 9, 0,
  /* 1074 */ 'i', 'c', 9, 0,
  /* 1078 */ 'a', 'l', 'c', 9, 0,
  /* 1083 */ 'c', 'l', 'c', 9, 0,
  /* 1088 */ 'l', 'l', 'c', 9, 0,
  /* 1093 */ 't', 'b', 'e', 'g', 'i', 'n', 'c', 9, 0,
  /* 1102 */ 'v', 'n', 'c', 9, 0,
  /* 1107 */ 'l', 'o', 'c', 9, 0,
  /* 1112 */ 's', 't', 'o', 'c', 9, 0,
  /* 1118 */ 'b', 'r', 'c', 9, 0,
  /* 1123 */ 's', 't', 'c', 9, 0,
  /* 1128 */ 'm', 'v', 'c', 9, 0,
  /* 1133 */ 's', 'v', 'c', 9, 0,
  /* 1138 */ 'x', 'c', 9, 0,
  /* 1142 */ 'p', 'f', 'd', 9, 0,
  /* 1147 */ 'l', 'd', 9, 0,
  /* 1151 */ 'e', 't', 'n', 'd', 9, 0,
  /* 1157 */ 's', 't', 'd', 9, 0,
  /* 1162 */ 'c', 'i', 'b', 'e', 9, 0,
  /* 1168 */ 'c', 'g', 'i', 'b', 'e', 9, 0,
  /* 1175 */ 'c', 'l', 'g', 'i', 'b', 'e', 9, 0,
  /* 1183 */ 'c', 'l', 'i', 'b', 'e', 9, 0,
  /* 1190 */ 'c', 'r', 'b', 'e', 9, 0,
  /* 1196 */ 'c', 'g', 'r', 'b', 'e', 9, 0,
  /* 1203 */ 'c', 'l', 'g', 'r', 'b', 'e', 9, 0,
  /* 1211 */ 'c', 'l', 'r', 'b', 'e', 9, 0,
  /* 1218 */ 'l', 'o', 'c', 'e', 9, 0,
  /* 1224 */ 's', 't', 'o', 'c', 'e', 9, 0,
  /* 1231 */ 'l', 'd', 'e', 9, 0,
  /* 1236 */ 'l', 'o', 'c', 'g', 'e', 9, 0,
  /* 1243 */ 's', 't', 'o', 'c', 'g', 'e', 9, 0,
  /* 1251 */ 'j', 'g', 'e', 9, 0,
  /* 1256 */ 'c', 'i', 'b', 'h', 'e', 9, 0,
  /* 1263 */ 'c', 'g', 'i', 'b', 'h', 'e', 9, 0,
  /* 1271 */ 'c', 'l', 'g', 'i', 'b', 'h', 'e', 9, 0,
  /* 1280 */ 'c', 'l', 'i', 'b', 'h', 'e', 9, 0,
  /* 1288 */ 'c', 'r', 'b', 'h', 'e', 9, 0,
  /* 1295 */ 'c', 'g', 'r', 'b', 'h', 'e', 9, 0,
  /* 1303 */ 'c', 'l', 'g', 'r', 'b', 'h', 'e', 9, 0,
  /* 1312 */ 'c', 'l', 'r', 'b', 'h', 'e', 9, 0,
  /* 1320 */ 'l', 'o', 'c', 'h', 'e', 9, 0,
  /* 1327 */ 's', 't', 'o', 'c', 'h', 'e', 9, 0,
  /* 1335 */ 'l', 'o', 'c', 'g', 'h', 'e', 9, 0,
  /* 1343 */ 's', 't', 'o', 'c', 'g', 'h', 'e', 9, 0,
  /* 1352 */ 'j', 'g', 'h', 'e', 9, 0,
  /* 1358 */ 'l', 'o', 'c', 'h', 'i', 'h', 'e', 9, 0,
  /* 1367 */ 'l', 'o', 'c', 'g', 'h', 'i', 'h', 'e', 9, 0,
  /* 1377 */ 'c', 'i', 'j', 'h', 'e', 9, 0,
  /* 1384 */ 'c', 'g', 'i', 'j', 'h', 'e', 9, 0,
  /* 1392 */ 'c', 'l', 'g', 'i', 'j', 'h', 'e', 9, 0,
  /* 1401 */ 'c', 'l', 'i', 'j', 'h', 'e', 9, 0,
  /* 1409 */ 'c', 'r', 'j', 'h', 'e', 9, 0,
  /* 1416 */ 'c', 'g', 'r', 'j', 'h', 'e', 9, 0,
  /* 1424 */ 'c', 'l', 'g', 'r', 'j', 'h', 'e', 9, 0,
  /* 1433 */ 'c', 'l', 'r', 'j', 'h', 'e', 9, 0,
  /* 1441 */ 'c', 'i', 'b', 'n', 'h', 'e', 9, 0,
  /* 1449 */ 'c', 'g', 'i', 'b', 'n', 'h', 'e', 9, 0,
  /* 1458 */ 'c', 'l', 'g', 'i', 'b', 'n', 'h', 'e', 9, 0,
  /* 1468 */ 'c', 'l', 'i', 'b', 'n', 'h', 'e', 9, 0,
  /* 1477 */ 'c', 'r', 'b', 'n', 'h', 'e', 9, 0,
  /* 1485 */ 'c', 'g', 'r', 'b', 'n', 'h', 'e', 9, 0,
  /* 1494 */ 'c', 'l', 'g', 'r', 'b', 'n', 'h', 'e', 9, 0,
  /* 1504 */ 'c', 'l', 'r', 'b', 'n', 'h', 'e', 9, 0,
  /* 1513 */ 'l', 'o', 'c', 'n', 'h', 'e', 9, 0,
  /* 1521 */ 's', 't', 'o', 'c', 'n', 'h', 'e', 9, 0,
  /* 1530 */ 'l', 'o', 'c', 'g', 'n', 'h', 'e', 9, 0,
  /* 1539 */ 's', 't', 'o', 'c', 'g', 'n', 'h', 'e', 9, 0,
  /* 1549 */ 'j', 'g', 'n', 'h', 'e', 9, 0,
  /* 1556 */ 'l', 'o', 'c', 'h', 'i', 'n', 'h', 'e', 9, 0,
  /* 1566 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'h', 'e', 9, 0,
  /* 1577 */ 'c', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 1585 */ 'c', 'g', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 1594 */ 'c', 'l', 'g', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 1604 */ 'c', 'l', 'i', 'j', 'n', 'h', 'e', 9, 0,
  /* 1613 */ 'c', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 1621 */ 'c', 'g', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 1630 */ 'c', 'l', 'g', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 1640 */ 'c', 'l', 'r', 'j', 'n', 'h', 'e', 9, 0,
  /* 1649 */ 'l', 'o', 'c', 'r', 'n', 'h', 'e', 9, 0,
  /* 1658 */ 'l', 'o', 'c', 'g', 'r', 'n', 'h', 'e', 9, 0,
  /* 1668 */ 'c', 'i', 't', 'n', 'h', 'e', 9, 0,
  /* 1676 */ 'c', 'l', 'f', 'i', 't', 'n', 'h', 'e', 9, 0,
  /* 1686 */ 'c', 'g', 'i', 't', 'n', 'h', 'e', 9, 0,
  /* 1695 */ 'c', 'l', 'g', 'i', 't', 'n', 'h', 'e', 9, 0,
  /* 1705 */ 'c', 'r', 't', 'n', 'h', 'e', 9, 0,
  /* 1713 */ 'c', 'g', 'r', 't', 'n', 'h', 'e', 9, 0,
  /* 1722 */ 'c', 'l', 'g', 'r', 't', 'n', 'h', 'e', 9, 0,
  /* 1732 */ 'c', 'l', 'r', 't', 'n', 'h', 'e', 9, 0,
  /* 1741 */ 'l', 'o', 'c', 'r', 'h', 'e', 9, 0,
  /* 1749 */ 'l', 'o', 'c', 'g', 'r', 'h', 'e', 9, 0,
  /* 1758 */ 'c', 'i', 't', 'h', 'e', 9, 0,
  /* 1765 */ 'c', 'l', 'f', 'i', 't', 'h', 'e', 9, 0,
  /* 1774 */ 'c', 'g', 'i', 't', 'h', 'e', 9, 0,
  /* 1782 */ 'c', 'l', 'g', 'i', 't', 'h', 'e', 9, 0,
  /* 1791 */ 'c', 'r', 't', 'h', 'e', 9, 0,
  /* 1798 */ 'c', 'g', 'r', 't', 'h', 'e', 9, 0,
  /* 1806 */ 'c', 'l', 'g', 'r', 't', 'h', 'e', 9, 0,
  /* 1815 */ 'c', 'l', 'r', 't', 'h', 'e', 9, 0,
  /* 1823 */ 'l', 'o', 'c', 'h', 'i', 'e', 9, 0,
  /* 1831 */ 'l', 'o', 'c', 'g', 'h', 'i', 'e', 9, 0,
  /* 1840 */ 'c', 'i', 'j', 'e', 9, 0,
  /* 1846 */ 'c', 'g', 'i', 'j', 'e', 9, 0,
  /* 1853 */ 'c', 'l', 'g', 'i', 'j', 'e', 9, 0,
  /* 1861 */ 'c', 'l', 'i', 'j', 'e', 9, 0,
  /* 1868 */ 'c', 'r', 'j', 'e', 9, 0,
  /* 1874 */ 'c', 'g', 'r', 'j', 'e', 9, 0,
  /* 1881 */ 'c', 'l', 'g', 'r', 'j', 'e', 9, 0,
  /* 1889 */ 'c', 'l', 'r', 'j', 'e', 9, 0,
  /* 1896 */ 's', 't', 'c', 'k', 'e', 9, 0,
  /* 1903 */ 'c', 'i', 'b', 'l', 'e', 9, 0,
  /* 1910 */ 'c', 'g', 'i', 'b', 'l', 'e', 9, 0,
  /* 1918 */ 'c', 'l', 'g', 'i', 'b', 'l', 'e', 9, 0,
  /* 1927 */ 'c', 'l', 'i', 'b', 'l', 'e', 9, 0,
  /* 1935 */ 'c', 'r', 'b', 'l', 'e', 9, 0,
  /* 1942 */ 'c', 'g', 'r', 'b', 'l', 'e', 9, 0,
  /* 1950 */ 'c', 'l', 'g', 'r', 'b', 'l', 'e', 9, 0,
  /* 1959 */ 'c', 'l', 'r', 'b', 'l', 'e', 9, 0,
  /* 1967 */ 'l', 'o', 'c', 'l', 'e', 9, 0,
  /* 1974 */ 's', 't', 'o', 'c', 'l', 'e', 9, 0,
  /* 1982 */ 's', 't', 'f', 'l', 'e', 9, 0,
  /* 1989 */ 'l', 'o', 'c', 'g', 'l', 'e', 9, 0,
  /* 1997 */ 's', 't', 'o', 'c', 'g', 'l', 'e', 9, 0,
  /* 2006 */ 'j', 'g', 'l', 'e', 9, 0,
  /* 2012 */ 'l', 'o', 'c', 'h', 'i', 'l', 'e', 9, 0,
  /* 2021 */ 'l', 'o', 'c', 'g', 'h', 'i', 'l', 'e', 9, 0,
  /* 2031 */ 'c', 'i', 'j', 'l', 'e', 9, 0,
  /* 2038 */ 'c', 'g', 'i', 'j', 'l', 'e', 9, 0,
  /* 2046 */ 'c', 'l', 'g', 'i', 'j', 'l', 'e', 9, 0,
  /* 2055 */ 'c', 'l', 'i', 'j', 'l', 'e', 9, 0,
  /* 2063 */ 'c', 'r', 'j', 'l', 'e', 9, 0,
  /* 2070 */ 'c', 'g', 'r', 'j', 'l', 'e', 9, 0,
  /* 2078 */ 'c', 'l', 'g', 'r', 'j', 'l', 'e', 9, 0,
  /* 2087 */ 'c', 'l', 'r', 'j', 'l', 'e', 9, 0,
  /* 2095 */ 'c', 'i', 'b', 'n', 'l', 'e', 9, 0,
  /* 2103 */ 'c', 'g', 'i', 'b', 'n', 'l', 'e', 9, 0,
  /* 2112 */ 'c', 'l', 'g', 'i', 'b', 'n', 'l', 'e', 9, 0,
  /* 2122 */ 'c', 'l', 'i', 'b', 'n', 'l', 'e', 9, 0,
  /* 2131 */ 'c', 'r', 'b', 'n', 'l', 'e', 9, 0,
  /* 2139 */ 'c', 'g', 'r', 'b', 'n', 'l', 'e', 9, 0,
  /* 2148 */ 'c', 'l', 'g', 'r', 'b', 'n', 'l', 'e', 9, 0,
  /* 2158 */ 'c', 'l', 'r', 'b', 'n', 'l', 'e', 9, 0,
  /* 2167 */ 'l', 'o', 'c', 'n', 'l', 'e', 9, 0,
  /* 2175 */ 's', 't', 'o', 'c', 'n', 'l', 'e', 9, 0,
  /* 2184 */ 'l', 'o', 'c', 'g', 'n', 'l', 'e', 9, 0,
  /* 2193 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 'e', 9, 0,
  /* 2203 */ 'j', 'g', 'n', 'l', 'e', 9, 0,
  /* 2210 */ 'l', 'o', 'c', 'h', 'i', 'n', 'l', 'e', 9, 0,
  /* 2220 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'l', 'e', 9, 0,
  /* 2231 */ 'c', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 2239 */ 'c', 'g', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 2248 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 2258 */ 'c', 'l', 'i', 'j', 'n', 'l', 'e', 9, 0,
  /* 2267 */ 'c', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 2275 */ 'c', 'g', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 2284 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 2294 */ 'c', 'l', 'r', 'j', 'n', 'l', 'e', 9, 0,
  /* 2303 */ 'l', 'o', 'c', 'r', 'n', 'l', 'e', 9, 0,
  /* 2312 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 'e', 9, 0,
  /* 2322 */ 'c', 'i', 't', 'n', 'l', 'e', 9, 0,
  /* 2330 */ 'c', 'l', 'f', 'i', 't', 'n', 'l', 'e', 9, 0,
  /* 2340 */ 'c', 'g', 'i', 't', 'n', 'l', 'e', 9, 0,
  /* 2349 */ 'c', 'l', 'g', 'i', 't', 'n', 'l', 'e', 9, 0,
  /* 2359 */ 'c', 'r', 't', 'n', 'l', 'e', 9, 0,
  /* 2367 */ 'c', 'g', 'r', 't', 'n', 'l', 'e', 9, 0,
  /* 2376 */ 'c', 'l', 'g', 'r', 't', 'n', 'l', 'e', 9, 0,
  /* 2386 */ 'c', 'l', 'r', 't', 'n', 'l', 'e', 9, 0,
  /* 2395 */ 'l', 'o', 'c', 'r', 'l', 'e', 9, 0,
  /* 2403 */ 'l', 'o', 'c', 'g', 'r', 'l', 'e', 9, 0,
  /* 2412 */ 'c', 'i', 't', 'l', 'e', 9, 0,
  /* 2419 */ 'c', 'l', 'f', 'i', 't', 'l', 'e', 9, 0,
  /* 2428 */ 'c', 'g', 'i', 't', 'l', 'e', 9, 0,
  /* 2436 */ 'c', 'l', 'g', 'i', 't', 'l', 'e', 9, 0,
  /* 2445 */ 'c', 'r', 't', 'l', 'e', 9, 0,
  /* 2452 */ 'c', 'g', 'r', 't', 'l', 'e', 9, 0,
  /* 2460 */ 'c', 'l', 'g', 'r', 't', 'l', 'e', 9, 0,
  /* 2469 */ 'c', 'l', 'r', 't', 'l', 'e', 9, 0,
  /* 2477 */ 'c', 'i', 'b', 'n', 'e', 9, 0,
  /* 2484 */ 'c', 'g', 'i', 'b', 'n', 'e', 9, 0,
  /* 2492 */ 'c', 'l', 'g', 'i', 'b', 'n', 'e', 9, 0,
  /* 2501 */ 'c', 'l', 'i', 'b', 'n', 'e', 9, 0,
  /* 2509 */ 'c', 'r', 'b', 'n', 'e', 9, 0,
  /* 2516 */ 'c', 'g', 'r', 'b', 'n', 'e', 9, 0,
  /* 2524 */ 'c', 'l', 'g', 'r', 'b', 'n', 'e', 9, 0,
  /* 2533 */ 'c', 'l', 'r', 'b', 'n', 'e', 9, 0,
  /* 2541 */ 'l', 'o', 'c', 'n', 'e', 9, 0,
  /* 2548 */ 's', 't', 'o', 'c', 'n', 'e', 9, 0,
  /* 2556 */ 'l', 'o', 'c', 'g', 'n', 'e', 9, 0,
  /* 2564 */ 's', 't', 'o', 'c', 'g', 'n', 'e', 9, 0,
  /* 2573 */ 'j', 'g', 'n', 'e', 9, 0,
  /* 2579 */ 'l', 'o', 'c', 'h', 'i', 'n', 'e', 9, 0,
  /* 2588 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'e', 9, 0,
  /* 2598 */ 'c', 'i', 'j', 'n', 'e', 9, 0,
  /* 2605 */ 'c', 'g', 'i', 'j', 'n', 'e', 9, 0,
  /* 2613 */ 'c', 'l', 'g', 'i', 'j', 'n', 'e', 9, 0,
  /* 2622 */ 'c', 'l', 'i', 'j', 'n', 'e', 9, 0,
  /* 2630 */ 'c', 'r', 'j', 'n', 'e', 9, 0,
  /* 2637 */ 'c', 'g', 'r', 'j', 'n', 'e', 9, 0,
  /* 2645 */ 'c', 'l', 'g', 'r', 'j', 'n', 'e', 9, 0,
  /* 2654 */ 'c', 'l', 'r', 'j', 'n', 'e', 9, 0,
  /* 2662 */ 'v', 'o', 'n', 'e', 9, 0,
  /* 2668 */ 'l', 'o', 'c', 'r', 'n', 'e', 9, 0,
  /* 2676 */ 'l', 'o', 'c', 'g', 'r', 'n', 'e', 9, 0,
  /* 2685 */ 'c', 'i', 't', 'n', 'e', 9, 0,
  /* 2692 */ 'c', 'l', 'f', 'i', 't', 'n', 'e', 9, 0,
  /* 2701 */ 'c', 'g', 'i', 't', 'n', 'e', 9, 0,
  /* 2709 */ 'c', 'l', 'g', 'i', 't', 'n', 'e', 9, 0,
  /* 2718 */ 'c', 'r', 't', 'n', 'e', 9, 0,
  /* 2725 */ 'c', 'g', 'r', 't', 'n', 'e', 9, 0,
  /* 2733 */ 'c', 'l', 'g', 'r', 't', 'n', 'e', 9, 0,
  /* 2742 */ 'c', 'l', 'r', 't', 'n', 'e', 9, 0,
  /* 2750 */ 'l', 'o', 'c', 'r', 'e', 9, 0,
  /* 2757 */ 'l', 'o', 'c', 'g', 'r', 'e', 9, 0,
  /* 2765 */ 'c', 'i', 't', 'e', 9, 0,
  /* 2771 */ 'c', 'l', 'f', 'i', 't', 'e', 9, 0,
  /* 2779 */ 'c', 'g', 'i', 't', 'e', 9, 0,
  /* 2786 */ 'c', 'l', 'g', 'i', 't', 'e', 9, 0,
  /* 2794 */ 'c', 'r', 't', 'e', 9, 0,
  /* 2800 */ 'c', 'g', 'r', 't', 'e', 9, 0,
  /* 2807 */ 'c', 'l', 'g', 'r', 't', 'e', 9, 0,
  /* 2815 */ 'c', 'l', 'r', 't', 'e', 9, 0,
  /* 2822 */ 's', 't', 'e', 9, 0,
  /* 2827 */ 'v', 'g', 'f', 'm', 'a', 'f', 9, 0,
  /* 2835 */ 'v', 'e', 's', 'r', 'a', 'f', 9, 0,
  /* 2843 */ 'v', 'a', 'f', 9, 0,
  /* 2848 */ 'v', 'a', 'c', 'c', 'f', 9, 0,
  /* 2855 */ 'v', 'e', 'c', 'f', 9, 0,
  /* 2861 */ 'v', 'l', 'c', 'f', 9, 0,
  /* 2867 */ 'v', 's', 't', 'r', 'c', 'f', 9, 0,
  /* 2875 */ 'v', 'f', 'a', 'e', 'f', 9, 0,
  /* 2882 */ 'v', 'm', 'a', 'e', 'f', 9, 0,
  /* 2889 */ 'v', 's', 'c', 'e', 'f', 9, 0,
  /* 2896 */ 'v', 'f', 'e', 'e', 'f', 9, 0,
  /* 2903 */ 'v', 'g', 'e', 'f', 9, 0,
  /* 2909 */ 'v', 'm', 'a', 'l', 'e', 'f', 9, 0,
  /* 2917 */ 'v', 'm', 'l', 'e', 'f', 9, 0,
  /* 2924 */ 'v', 'l', 'e', 'f', 9, 0,
  /* 2930 */ 'v', 'm', 'e', 'f', 9, 0,
  /* 2936 */ 'v', 'f', 'e', 'n', 'e', 'f', 9, 0,
  /* 2944 */ 'v', 's', 't', 'e', 'f', 9, 0,
  /* 2951 */ 'a', 'g', 'f', 9, 0,
  /* 2956 */ 'c', 'g', 'f', 9, 0,
  /* 2961 */ 'v', 's', 'e', 'g', 'f', 9, 0,
  /* 2968 */ 'a', 'l', 'g', 'f', 9, 0,
  /* 2974 */ 'c', 'l', 'g', 'f', 9, 0,
  /* 2980 */ 'l', 'l', 'g', 'f', 9, 0,
  /* 2986 */ 's', 'l', 'g', 'f', 9, 0,
  /* 2992 */ 'v', 's', 'u', 'm', 'g', 'f', 9, 0,
  /* 3000 */ 'd', 's', 'g', 'f', 9, 0,
  /* 3006 */ 'm', 's', 'g', 'f', 9, 0,
  /* 3012 */ 'l', 't', 'g', 'f', 9, 0,
  /* 3018 */ 'v', 'a', 'v', 'g', 'f', 9, 0,
  /* 3025 */ 'v', 'l', 'v', 'g', 'f', 9, 0,
  /* 3032 */ 'v', 'm', 'a', 'h', 'f', 9, 0,
  /* 3039 */ 'v', 'c', 'h', 'f', 9, 0,
  /* 3045 */ 'i', 'i', 'h', 'f', 9, 0,
  /* 3051 */ 'l', 'l', 'i', 'h', 'f', 9, 0,
  /* 3058 */ 'n', 'i', 'h', 'f', 9, 0,
  /* 3064 */ 'o', 'i', 'h', 'f', 9, 0,
  /* 3070 */ 'x', 'i', 'h', 'f', 9, 0,
  /* 3076 */ 'v', 'm', 'a', 'l', 'h', 'f', 9, 0,
  /* 3084 */ 'c', 'l', 'h', 'f', 9, 0,
  /* 3090 */ 'v', 'm', 'l', 'h', 'f', 9, 0,
  /* 3097 */ 'v', 'u', 'p', 'l', 'h', 'f', 9, 0,
  /* 3105 */ 'v', 'm', 'h', 'f', 9, 0,
  /* 3111 */ 'v', 'u', 'p', 'h', 'f', 9, 0,
  /* 3118 */ 'v', 'm', 'r', 'h', 'f', 9, 0,
  /* 3125 */ 'v', 's', 'c', 'b', 'i', 'f', 9, 0,
  /* 3133 */ 'v', 'l', 'e', 'i', 'f', 9, 0,
  /* 3140 */ 'v', 'r', 'e', 'p', 'i', 'f', 9, 0,
  /* 3148 */ 's', 't', 'c', 'k', 'f', 9, 0,
  /* 3155 */ 'v', 'p', 'k', 'f', 9, 0,
  /* 3161 */ 'v', 'm', 'a', 'l', 'f', 9, 0,
  /* 3168 */ 'v', 'e', 'c', 'l', 'f', 9, 0,
  /* 3175 */ 'v', 'a', 'v', 'g', 'l', 'f', 9, 0,
  /* 3183 */ 'v', 'c', 'h', 'l', 'f', 9, 0,
  /* 3190 */ 'i', 'i', 'l', 'f', 9, 0,
  /* 3196 */ 'l', 'l', 'i', 'l', 'f', 9, 0,
  /* 3203 */ 'n', 'i', 'l', 'f', 9, 0,
  /* 3209 */ 'o', 'i', 'l', 'f', 9, 0,
  /* 3215 */ 'x', 'i', 'l', 'f', 9, 0,
  /* 3221 */ 'v', 'u', 'p', 'l', 'l', 'f', 9, 0,
  /* 3229 */ 'v', 'e', 'r', 'l', 'l', 'f', 9, 0,
  /* 3237 */ 'v', 'm', 'l', 'f', 9, 0,
  /* 3243 */ 'v', 'm', 'n', 'l', 'f', 9, 0,
  /* 3250 */ 'v', 'u', 'p', 'l', 'f', 9, 0,
  /* 3257 */ 'v', 'm', 'r', 'l', 'f', 9, 0,
  /* 3264 */ 'v', 'e', 's', 'r', 'l', 'f', 9, 0,
  /* 3272 */ 'v', 'e', 's', 'l', 'f', 9, 0,
  /* 3279 */ 'v', 'm', 'x', 'l', 'f', 9, 0,
  /* 3286 */ 'v', 'g', 'f', 'm', 'f', 9, 0,
  /* 3293 */ 'v', 'g', 'm', 'f', 9, 0,
  /* 3299 */ 'v', 'e', 'r', 'i', 'm', 'f', 9, 0,
  /* 3307 */ 'v', 'm', 'n', 'f', 9, 0,
  /* 3313 */ 'v', 'm', 'a', 'o', 'f', 9, 0,
  /* 3320 */ 'v', 'm', 'a', 'l', 'o', 'f', 9, 0,
  /* 3328 */ 'v', 'm', 'l', 'o', 'f', 9, 0,
  /* 3335 */ 'v', 'm', 'o', 'f', 9, 0,
  /* 3341 */ 'v', 'l', 'r', 'e', 'p', 'f', 9, 0,
  /* 3349 */ 'v', 'r', 'e', 'p', 'f', 9, 0,
  /* 3356 */ 'v', 'l', 'p', 'f', 9, 0,
  /* 3362 */ 'v', 'c', 'e', 'q', 'f', 9, 0,
  /* 3369 */ 'v', 's', 'u', 'm', 'q', 'f', 9, 0,
  /* 3377 */ 'v', 'i', 's', 't', 'r', 'f', 9, 0,
  /* 3385 */ 'v', 'p', 'k', 's', 'f', 9, 0,
  /* 3392 */ 'v', 'p', 'k', 'l', 's', 'f', 9, 0,
  /* 3400 */ 'v', 's', 'f', 9, 0,
  /* 3405 */ 'v', 'e', 's', 'r', 'a', 'v', 'f', 9, 0,
  /* 3414 */ 'v', 'l', 'g', 'v', 'f', 9, 0,
  /* 3421 */ 'v', 'e', 'r', 'l', 'l', 'v', 'f', 9, 0,
  /* 3430 */ 'v', 'e', 's', 'r', 'l', 'v', 'f', 9, 0,
  /* 3439 */ 'v', 'e', 's', 'l', 'v', 'f', 9, 0,
  /* 3447 */ 'v', 'm', 'x', 'f', 9, 0,
  /* 3453 */ 'v', 's', 't', 'r', 'c', 'z', 'f', 9, 0,
  /* 3462 */ 'v', 'f', 'a', 'e', 'z', 'f', 9, 0,
  /* 3470 */ 'v', 'f', 'e', 'e', 'z', 'f', 9, 0,
  /* 3478 */ 'v', 'l', 'l', 'e', 'z', 'f', 9, 0,
  /* 3486 */ 'v', 'f', 'e', 'n', 'e', 'z', 'f', 9, 0,
  /* 3495 */ 'v', 'c', 'l', 'z', 'f', 9, 0,
  /* 3502 */ 'v', 'c', 't', 'z', 'f', 9, 0,
  /* 3509 */ 'l', 'a', 'a', 'g', 9, 0,
  /* 3515 */ 'v', 'g', 'f', 'm', 'a', 'g', 9, 0,
  /* 3523 */ 'v', 'e', 's', 'r', 'a', 'g', 9, 0,
  /* 3531 */ 'v', 'a', 'g', 9, 0,
  /* 3536 */ 's', 'l', 'b', 'g', 9, 0,
  /* 3542 */ 'r', 'i', 's', 'b', 'g', 9, 0,
  /* 3549 */ 'r', 'n', 's', 'b', 'g', 9, 0,
  /* 3556 */ 'r', 'o', 's', 'b', 'g', 9, 0,
  /* 3563 */ 'r', 'x', 's', 'b', 'g', 9, 0,
  /* 3570 */ 'v', 'a', 'c', 'c', 'g', 9, 0,
  /* 3577 */ 'v', 'e', 'c', 'g', 9, 0,
  /* 3583 */ 'a', 'l', 'c', 'g', 9, 0,
  /* 3589 */ 'v', 'l', 'c', 'g', 9, 0,
  /* 3595 */ 'l', 'o', 'c', 'g', 9, 0,
  /* 3601 */ 's', 't', 'o', 'c', 'g', 9, 0,
  /* 3608 */ 'v', 's', 'c', 'e', 'g', 9, 0,
  /* 3615 */ 'v', 'g', 'e', 'g', 9, 0,
  /* 3621 */ 'v', 'l', 'e', 'g', 9, 0,
  /* 3627 */ 'v', 's', 't', 'e', 'g', 9, 0,
  /* 3634 */ 'v', 'a', 'v', 'g', 'g', 9, 0,
  /* 3641 */ 'v', 'l', 'v', 'g', 'g', 9, 0,
  /* 3648 */ 'r', 'i', 's', 'b', 'h', 'g', 9, 0,
  /* 3656 */ 'v', 'c', 'h', 'g', 9, 0,
  /* 3662 */ 'v', 'm', 'r', 'h', 'g', 9, 0,
  /* 3669 */ 'v', 's', 'c', 'b', 'i', 'g', 9, 0,
  /* 3677 */ 'v', 'l', 'e', 'i', 'g', 9, 0,
  /* 3684 */ 'v', 'r', 'e', 'p', 'i', 'g', 9, 0,
  /* 3692 */ 'j', 'g', 9, 0,
  /* 3696 */ 'v', 'p', 'k', 'g', 9, 0,
  /* 3702 */ 'l', 'a', 'a', 'l', 'g', 9, 0,
  /* 3709 */ 'r', 'i', 's', 'b', 'l', 'g', 9, 0,
  /* 3717 */ 'v', 'e', 'c', 'l', 'g', 9, 0,
  /* 3724 */ 'd', 'l', 'g', 9, 0,
  /* 3729 */ 'v', 'a', 'v', 'g', 'l', 'g', 9, 0,
  /* 3737 */ 'v', 'c', 'h', 'l', 'g', 9, 0,
  /* 3744 */ 'v', 'e', 'r', 'l', 'l', 'g', 9, 0,
  /* 3752 */ 's', 'l', 'l', 'g', 9, 0,
  /* 3758 */ 'm', 'l', 'g', 9, 0,
  /* 3763 */ 'v', 'm', 'n', 'l', 'g', 9, 0,
  /* 3770 */ 'v', 'm', 'r', 'l', 'g', 9, 0,
  /* 3777 */ 'v', 'e', 's', 'r', 'l', 'g', 9, 0,
  /* 3785 */ 'v', 'e', 's', 'l', 'g', 9, 0,
  /* 3792 */ 'v', 'm', 'x', 'l', 'g', 9, 0,
  /* 3799 */ 'v', 'g', 'f', 'm', 'g', 9, 0,
  /* 3806 */ 'v', 'g', 'm', 'g', 9, 0,
  /* 3812 */ 'v', 'e', 'r', 'i', 'm', 'g', 9, 0,
  /* 3820 */ 'l', 'm', 'g', 9, 0,
  /* 3825 */ 's', 't', 'm', 'g', 9, 0,
  /* 3831 */ 'l', 'a', 'n', 'g', 9, 0,
  /* 3837 */ 'v', 'm', 'n', 'g', 9, 0,
  /* 3843 */ 'l', 'a', 'o', 'g', 9, 0,
  /* 3849 */ 'v', 'l', 'r', 'e', 'p', 'g', 9, 0,
  /* 3857 */ 'v', 'r', 'e', 'p', 'g', 9, 0,
  /* 3864 */ 'v', 'l', 'p', 'g', 9, 0,
  /* 3870 */ 'v', 'c', 'e', 'q', 'g', 9, 0,
  /* 3877 */ 'v', 's', 'u', 'm', 'q', 'g', 9, 0,
  /* 3885 */ 'c', 's', 'g', 9, 0,
  /* 3890 */ 'd', 's', 'g', 9, 0,
  /* 3895 */ 'v', 'p', 'k', 's', 'g', 9, 0,
  /* 3902 */ 'v', 'p', 'k', 'l', 's', 'g', 9, 0,
  /* 3910 */ 'm', 's', 'g', 9, 0,
  /* 3915 */ 'v', 's', 'g', 9, 0,
  /* 3920 */ 'b', 'r', 'c', 't', 'g', 9, 0,
  /* 3927 */ 'l', 't', 'g', 9, 0,
  /* 3932 */ 'n', 't', 's', 't', 'g', 9, 0,
  /* 3939 */ 'v', 'e', 's', 'r', 'a', 'v', 'g', 9, 0,
  /* 3948 */ 'v', 'l', 'g', 'v', 'g', 9, 0,
  /* 3955 */ 'v', 'e', 'r', 'l', 'l', 'v', 'g', 9, 0,
  /* 3964 */ 'v', 'e', 's', 'r', 'l', 'v', 'g', 9, 0,
  /* 3973 */ 'v', 'e', 's', 'l', 'v', 'g', 9, 0,
  /* 3981 */ 'l', 'r', 'v', 'g', 9, 0,
  /* 3987 */ 's', 't', 'r', 'v', 'g', 9, 0,
  /* 3994 */ 'l', 'a', 'x', 'g', 9, 0,
  /* 4000 */ 'v', 'm', 'x', 'g', 9, 0,
  /* 4006 */ 'v', 'l', 'l', 'e', 'z', 'g', 9, 0,
  /* 4014 */ 'v', 'c', 'l', 'z', 'g', 9, 0,
  /* 4021 */ 'v', 'c', 't', 'z', 'g', 9, 0,
  /* 4028 */ 'v', 'g', 'f', 'm', 'a', 'h', 9, 0,
  /* 4036 */ 'v', 'e', 's', 'r', 'a', 'h', 9, 0,
  /* 4044 */ 'v', 'a', 'h', 9, 0,
  /* 4049 */ 'c', 'i', 'b', 'h', 9, 0,
  /* 4055 */ 'c', 'g', 'i', 'b', 'h', 9, 0,
  /* 4062 */ 'c', 'l', 'g', 'i', 'b', 'h', 9, 0,
  /* 4070 */ 'c', 'l', 'i', 'b', 'h', 9, 0,
  /* 4077 */ 'l', 'b', 'h', 9, 0,
  /* 4082 */ 'c', 'r', 'b', 'h', 9, 0,
  /* 4088 */ 'c', 'g', 'r', 'b', 'h', 9, 0,
  /* 4095 */ 'c', 'l', 'g', 'r', 'b', 'h', 9, 0,
  /* 4103 */ 'c', 'l', 'r', 'b', 'h', 9, 0,
  /* 4110 */ 'v', 'a', 'c', 'c', 'h', 9, 0,
  /* 4117 */ 'v', 'e', 'c', 'h', 9, 0,
  /* 4123 */ 'l', 'l', 'c', 'h', 9, 0,
  /* 4129 */ 'v', 'l', 'c', 'h', 9, 0,
  /* 4135 */ 'l', 'o', 'c', 'h', 9, 0,
  /* 4141 */ 's', 't', 'o', 'c', 'h', 9, 0,
  /* 4148 */ 'v', 's', 't', 'r', 'c', 'h', 9, 0,
  /* 4156 */ 's', 't', 'c', 'h', 9, 0,
  /* 4162 */ 'v', 'f', 'a', 'e', 'h', 9, 0,
  /* 4169 */ 'v', 'm', 'a', 'e', 'h', 9, 0,
  /* 4176 */ 'v', 'f', 'e', 'e', 'h', 9, 0,
  /* 4183 */ 'v', 'm', 'a', 'l', 'e', 'h', 9, 0,
  /* 4191 */ 'v', 'm', 'l', 'e', 'h', 9, 0,
  /* 4198 */ 'v', 'l', 'e', 'h', 9, 0,
  /* 4204 */ 'v', 'm', 'e', 'h', 9, 0,
  /* 4210 */ 'v', 'f', 'e', 'n', 'e', 'h', 9, 0,
  /* 4218 */ 'v', 's', 't', 'e', 'h', 9, 0,
  /* 4225 */ 'l', 'f', 'h', 9, 0,
  /* 4230 */ 's', 't', 'f', 'h', 9, 0,
  /* 4236 */ 'l', 'o', 'c', 'g', 'h', 9, 0,
  /* 4243 */ 's', 't', 'o', 'c', 'g', 'h', 9, 0,
  /* 4251 */ 'v', 's', 'e', 'g', 'h', 9, 0,
  /* 4258 */ 'j', 'g', 'h', 9, 0,
  /* 4263 */ 'l', 'l', 'g', 'h', 9, 0,
  /* 4269 */ 'v', 's', 'u', 'm', 'g', 'h', 9, 0,
  /* 4277 */ 'v', 'a', 'v', 'g', 'h', 9, 0,
  /* 4284 */ 'v', 'l', 'v', 'g', 'h', 9, 0,
  /* 4291 */ 'v', 'm', 'a', 'h', 'h', 9, 0,
  /* 4298 */ 'v', 'c', 'h', 'h', 9, 0,
  /* 4304 */ 'i', 'i', 'h', 'h', 9, 0,
  /* 4310 */ 'l', 'l', 'i', 'h', 'h', 9, 0,
  /* 4317 */ 'n', 'i', 'h', 'h', 9, 0,
  /* 4323 */ 'o', 'i', 'h', 'h', 9, 0,
  /* 4329 */ 'v', 'm', 'a', 'l', 'h', 'h', 9, 0,
  /* 4337 */ 'l', 'l', 'h', 'h', 9, 0,
  /* 4343 */ 'v', 'm', 'l', 'h', 'h', 9, 0,
  /* 4350 */ 'v', 'u', 'p', 'l', 'h', 'h', 9, 0,
  /* 4358 */ 't', 'm', 'h', 'h', 9, 0,
  /* 4364 */ 'v', 'm', 'h', 'h', 9, 0,
  /* 4370 */ 'v', 'u', 'p', 'h', 'h', 9, 0,
  /* 4377 */ 'v', 'm', 'r', 'h', 'h', 9, 0,
  /* 4384 */ 's', 't', 'h', 'h', 9, 0,
  /* 4390 */ 'a', 'i', 'h', 9, 0,
  /* 4395 */ 'v', 's', 'c', 'b', 'i', 'h', 9, 0,
  /* 4403 */ 'c', 'i', 'h', 9, 0,
  /* 4408 */ 'v', 'l', 'e', 'i', 'h', 9, 0,
  /* 4415 */ 'l', 'o', 'c', 'h', 'i', 'h', 9, 0,
  /* 4423 */ 'l', 'o', 'c', 'g', 'h', 'i', 'h', 9, 0,
  /* 4432 */ 'c', 'l', 'i', 'h', 9, 0,
  /* 4438 */ 'v', 'r', 'e', 'p', 'i', 'h', 9, 0,
  /* 4446 */ 'c', 'i', 'j', 'h', 9, 0,
  /* 4452 */ 'c', 'g', 'i', 'j', 'h', 9, 0,
  /* 4459 */ 'c', 'l', 'g', 'i', 'j', 'h', 9, 0,
  /* 4467 */ 'c', 'l', 'i', 'j', 'h', 9, 0,
  /* 4474 */ 'c', 'r', 'j', 'h', 9, 0,
  /* 4480 */ 'c', 'g', 'r', 'j', 'h', 9, 0,
  /* 4487 */ 'c', 'l', 'g', 'r', 'j', 'h', 9, 0,
  /* 4495 */ 'c', 'l', 'r', 'j', 'h', 9, 0,
  /* 4502 */ 'v', 'p', 'k', 'h', 9, 0,
  /* 4508 */ 'c', 'i', 'b', 'l', 'h', 9, 0,
  /* 4515 */ 'c', 'g', 'i', 'b', 'l', 'h', 9, 0,
  /* 4523 */ 'c', 'l', 'g', 'i', 'b', 'l', 'h', 9, 0,
  /* 4532 */ 'c', 'l', 'i', 'b', 'l', 'h', 9, 0,
  /* 4540 */ 'c', 'r', 'b', 'l', 'h', 9, 0,
  /* 4547 */ 'c', 'g', 'r', 'b', 'l', 'h', 9, 0,
  /* 4555 */ 'c', 'l', 'g', 'r', 'b', 'l', 'h', 9, 0,
  /* 4564 */ 'c', 'l', 'r', 'b', 'l', 'h', 9, 0,
  /* 4572 */ 'v', 'e', 'c', 'l', 'h', 9, 0,
  /* 4579 */ 'l', 'o', 'c', 'l', 'h', 9, 0,
  /* 4586 */ 's', 't', 'o', 'c', 'l', 'h', 9, 0,
  /* 4594 */ 'l', 'o', 'c', 'g', 'l', 'h', 9, 0,
  /* 4602 */ 's', 't', 'o', 'c', 'g', 'l', 'h', 9, 0,
  /* 4611 */ 'j', 'g', 'l', 'h', 9, 0,
  /* 4617 */ 'v', 'a', 'v', 'g', 'l', 'h', 9, 0,
  /* 4625 */ 'v', 'c', 'h', 'l', 'h', 9, 0,
  /* 4632 */ 'l', 'o', 'c', 'h', 'i', 'l', 'h', 9, 0,
  /* 4641 */ 'l', 'o', 'c', 'g', 'h', 'i', 'l', 'h', 9, 0,
  /* 4651 */ 'i', 'i', 'l', 'h', 9, 0,
  /* 4657 */ 'l', 'l', 'i', 'l', 'h', 9, 0,
  /* 4664 */ 'n', 'i', 'l', 'h', 9, 0,
  /* 4670 */ 'o', 'i', 'l', 'h', 9, 0,
  /* 4676 */ 'c', 'i', 'j', 'l', 'h', 9, 0,
  /* 4683 */ 'c', 'g', 'i', 'j', 'l', 'h', 9, 0,
  /* 4691 */ 'c', 'l', 'g', 'i', 'j', 'l', 'h', 9, 0,
  /* 4700 */ 'c', 'l', 'i', 'j', 'l', 'h', 9, 0,
  /* 4708 */ 'c', 'r', 'j', 'l', 'h', 9, 0,
  /* 4715 */ 'c', 'g', 'r', 'j', 'l', 'h', 9, 0,
  /* 4723 */ 'c', 'l', 'g', 'r', 'j', 'l', 'h', 9, 0,
  /* 4732 */ 'c', 'l', 'r', 'j', 'l', 'h', 9, 0,
  /* 4740 */ 'v', 'u', 'p', 'l', 'l', 'h', 9, 0,
  /* 4748 */ 'v', 'e', 'r', 'l', 'l', 'h', 9, 0,
  /* 4756 */ 't', 'm', 'l', 'h', 9, 0,
  /* 4762 */ 'c', 'i', 'b', 'n', 'l', 'h', 9, 0,
  /* 4770 */ 'c', 'g', 'i', 'b', 'n', 'l', 'h', 9, 0,
  /* 4779 */ 'c', 'l', 'g', 'i', 'b', 'n', 'l', 'h', 9, 0,
  /* 4789 */ 'c', 'l', 'i', 'b', 'n', 'l', 'h', 9, 0,
  /* 4798 */ 'c', 'r', 'b', 'n', 'l', 'h', 9, 0,
  /* 4806 */ 'c', 'g', 'r', 'b', 'n', 'l', 'h', 9, 0,
  /* 4815 */ 'c', 'l', 'g', 'r', 'b', 'n', 'l', 'h', 9, 0,
  /* 4825 */ 'c', 'l', 'r', 'b', 'n', 'l', 'h', 9, 0,
  /* 4834 */ 'l', 'o', 'c', 'n', 'l', 'h', 9, 0,
  /* 4842 */ 's', 't', 'o', 'c', 'n', 'l', 'h', 9, 0,
  /* 4851 */ 'l', 'o', 'c', 'g', 'n', 'l', 'h', 9, 0,
  /* 4860 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 'h', 9, 0,
  /* 4870 */ 'j', 'g', 'n', 'l', 'h', 9, 0,
  /* 4877 */ 'l', 'o', 'c', 'h', 'i', 'n', 'l', 'h', 9, 0,
  /* 4887 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'l', 'h', 9, 0,
  /* 4898 */ 'c', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 4906 */ 'c', 'g', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 4915 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 4925 */ 'c', 'l', 'i', 'j', 'n', 'l', 'h', 9, 0,
  /* 4934 */ 'c', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 4942 */ 'c', 'g', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 4951 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 4961 */ 'c', 'l', 'r', 'j', 'n', 'l', 'h', 9, 0,
  /* 4970 */ 'v', 'm', 'n', 'l', 'h', 9, 0,
  /* 4977 */ 'l', 'o', 'c', 'r', 'n', 'l', 'h', 9, 0,
  /* 4986 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 'h', 9, 0,
  /* 4996 */ 'c', 'i', 't', 'n', 'l', 'h', 9, 0,
  /* 5004 */ 'c', 'l', 'f', 'i', 't', 'n', 'l', 'h', 9, 0,
  /* 5014 */ 'c', 'g', 'i', 't', 'n', 'l', 'h', 9, 0,
  /* 5023 */ 'c', 'l', 'g', 'i', 't', 'n', 'l', 'h', 9, 0,
  /* 5033 */ 'c', 'r', 't', 'n', 'l', 'h', 9, 0,
  /* 5041 */ 'c', 'g', 'r', 't', 'n', 'l', 'h', 9, 0,
  /* 5050 */ 'c', 'l', 'g', 'r', 't', 'n', 'l', 'h', 9, 0,
  /* 5060 */ 'c', 'l', 'r', 't', 'n', 'l', 'h', 9, 0,
  /* 5069 */ 'l', 'o', 'c', 'r', 'l', 'h', 9, 0,
  /* 5077 */ 'l', 'o', 'c', 'g', 'r', 'l', 'h', 9, 0,
  /* 5086 */ 'v', 'm', 'r', 'l', 'h', 9, 0,
  /* 5093 */ 'v', 'e', 's', 'r', 'l', 'h', 9, 0,
  /* 5101 */ 'v', 'e', 's', 'l', 'h', 9, 0,
  /* 5108 */ 'c', 'i', 't', 'l', 'h', 9, 0,
  /* 5115 */ 'c', 'l', 'f', 'i', 't', 'l', 'h', 9, 0,
  /* 5124 */ 'c', 'g', 'i', 't', 'l', 'h', 9, 0,
  /* 5132 */ 'c', 'l', 'g', 'i', 't', 'l', 'h', 9, 0,
  /* 5141 */ 'c', 'r', 't', 'l', 'h', 9, 0,
  /* 5148 */ 'c', 'g', 'r', 't', 'l', 'h', 9, 0,
  /* 5156 */ 'c', 'l', 'g', 'r', 't', 'l', 'h', 9, 0,
  /* 5165 */ 'c', 'l', 'r', 't', 'l', 'h', 9, 0,
  /* 5173 */ 'v', 'm', 'x', 'l', 'h', 9, 0,
  /* 5180 */ 'i', 'c', 'm', 'h', 9, 0,
  /* 5186 */ 'v', 'g', 'f', 'm', 'h', 9, 0,
  /* 5193 */ 'v', 'g', 'm', 'h', 9, 0,
  /* 5199 */ 'v', 'e', 'r', 'i', 'm', 'h', 9, 0,
  /* 5207 */ 'l', 'm', 'h', 9, 0,
  /* 5212 */ 's', 't', 'm', 'h', 9, 0,
  /* 5218 */ 'v', 's', 'u', 'm', 'h', 9, 0,
  /* 5225 */ 'c', 'i', 'b', 'n', 'h', 9, 0,
  /* 5232 */ 'c', 'g', 'i', 'b', 'n', 'h', 9, 0,
  /* 5240 */ 'c', 'l', 'g', 'i', 'b', 'n', 'h', 9, 0,
  /* 5249 */ 'c', 'l', 'i', 'b', 'n', 'h', 9, 0,
  /* 5257 */ 'c', 'r', 'b', 'n', 'h', 9, 0,
  /* 5264 */ 'c', 'g', 'r', 'b', 'n', 'h', 9, 0,
  /* 5272 */ 'c', 'l', 'g', 'r', 'b', 'n', 'h', 9, 0,
  /* 5281 */ 'c', 'l', 'r', 'b', 'n', 'h', 9, 0,
  /* 5289 */ 'l', 'o', 'c', 'n', 'h', 9, 0,
  /* 5296 */ 's', 't', 'o', 'c', 'n', 'h', 9, 0,
  /* 5304 */ 'l', 'o', 'c', 'g', 'n', 'h', 9, 0,
  /* 5312 */ 's', 't', 'o', 'c', 'g', 'n', 'h', 9, 0,
  /* 5321 */ 'j', 'g', 'n', 'h', 9, 0,
  /* 5327 */ 'l', 'o', 'c', 'h', 'i', 'n', 'h', 9, 0,
  /* 5336 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'h', 9, 0,
  /* 5346 */ 'c', 'i', 'j', 'n', 'h', 9, 0,
  /* 5353 */ 'c', 'g', 'i', 'j', 'n', 'h', 9, 0,
  /* 5361 */ 'c', 'l', 'g', 'i', 'j', 'n', 'h', 9, 0,
  /* 5370 */ 'c', 'l', 'i', 'j', 'n', 'h', 9, 0,
  /* 5378 */ 'c', 'r', 'j', 'n', 'h', 9, 0,
  /* 5385 */ 'c', 'g', 'r', 'j', 'n', 'h', 9, 0,
  /* 5393 */ 'c', 'l', 'g', 'r', 'j', 'n', 'h', 9, 0,
  /* 5402 */ 'c', 'l', 'r', 'j', 'n', 'h', 9, 0,
  /* 5410 */ 'v', 'm', 'n', 'h', 9, 0,
  /* 5416 */ 'l', 'o', 'c', 'r', 'n', 'h', 9, 0,
  /* 5424 */ 'l', 'o', 'c', 'g', 'r', 'n', 'h', 9, 0,
  /* 5433 */ 'c', 'i', 't', 'n', 'h', 9, 0,
  /* 5440 */ 'c', 'l', 'f', 'i', 't', 'n', 'h', 9, 0,
  /* 5449 */ 'c', 'g', 'i', 't', 'n', 'h', 9, 0,
  /* 5457 */ 'c', 'l', 'g', 'i', 't', 'n', 'h', 9, 0,
  /* 5466 */ 'c', 'r', 't', 'n', 'h', 9, 0,
  /* 5473 */ 'c', 'g', 'r', 't', 'n', 'h', 9, 0,
  /* 5481 */ 'c', 'l', 'g', 'r', 't', 'n', 'h', 9, 0,
  /* 5490 */ 'c', 'l', 'r', 't', 'n', 'h', 9, 0,
  /* 5498 */ 'v', 'm', 'a', 'o', 'h', 9, 0,
  /* 5505 */ 'v', 'm', 'a', 'l', 'o', 'h', 9, 0,
  /* 5513 */ 'v', 'm', 'l', 'o', 'h', 9, 0,
  /* 5520 */ 'v', 'm', 'o', 'h', 9, 0,
  /* 5526 */ 'v', 'l', 'r', 'e', 'p', 'h', 9, 0,
  /* 5534 */ 'v', 'r', 'e', 'p', 'h', 9, 0,
  /* 5541 */ 'v', 'l', 'p', 'h', 9, 0,
  /* 5547 */ 'v', 'c', 'e', 'q', 'h', 9, 0,
  /* 5554 */ 'l', 'o', 'c', 'r', 'h', 9, 0,
  /* 5561 */ 'l', 'o', 'c', 'g', 'r', 'h', 9, 0,
  /* 5569 */ 'v', 'i', 's', 't', 'r', 'h', 9, 0,
  /* 5577 */ 'v', 'p', 'k', 's', 'h', 9, 0,
  /* 5584 */ 'v', 'p', 'k', 'l', 's', 'h', 9, 0,
  /* 5592 */ 'v', 's', 'h', 9, 0,
  /* 5597 */ 'c', 'i', 't', 'h', 9, 0,
  /* 5603 */ 'c', 'l', 'f', 'i', 't', 'h', 9, 0,
  /* 5611 */ 'c', 'g', 'i', 't', 'h', 9, 0,
  /* 5618 */ 'c', 'l', 'g', 'i', 't', 'h', 9, 0,
  /* 5626 */ 'c', 'r', 't', 'h', 9, 0,
  /* 5632 */ 'c', 'g', 'r', 't', 'h', 9, 0,
  /* 5639 */ 'c', 'l', 'g', 'r', 't', 'h', 9, 0,
  /* 5647 */ 'c', 'l', 'r', 't', 'h', 9, 0,
  /* 5654 */ 's', 't', 'h', 9, 0,
  /* 5659 */ 'v', 'e', 's', 'r', 'a', 'v', 'h', 9, 0,
  /* 5668 */ 'v', 'l', 'g', 'v', 'h', 9, 0,
  /* 5675 */ 'v', 'e', 'r', 'l', 'l', 'v', 'h', 9, 0,
  /* 5684 */ 'v', 'e', 's', 'r', 'l', 'v', 'h', 9, 0,
  /* 5693 */ 'v', 'e', 's', 'l', 'v', 'h', 9, 0,
  /* 5701 */ 'l', 'r', 'v', 'h', 9, 0,
  /* 5707 */ 's', 't', 'r', 'v', 'h', 9, 0,
  /* 5714 */ 'v', 'm', 'x', 'h', 9, 0,
  /* 5720 */ 'v', 's', 't', 'r', 'c', 'z', 'h', 9, 0,
  /* 5729 */ 'v', 'f', 'a', 'e', 'z', 'h', 9, 0,
  /* 5737 */ 'v', 'f', 'e', 'e', 'z', 'h', 9, 0,
  /* 5745 */ 'v', 'l', 'l', 'e', 'z', 'h', 9, 0,
  /* 5753 */ 'v', 'f', 'e', 'n', 'e', 'z', 'h', 9, 0,
  /* 5762 */ 'v', 'c', 'l', 'z', 'h', 9, 0,
  /* 5769 */ 'v', 'c', 't', 'z', 'h', 9, 0,
  /* 5776 */ 'v', 'p', 'd', 'i', 9, 0,
  /* 5782 */ 'a', 'f', 'i', 9, 0,
  /* 5787 */ 'c', 'f', 'i', 9, 0,
  /* 5792 */ 'a', 'g', 'f', 'i', 9, 0,
  /* 5798 */ 'c', 'g', 'f', 'i', 9, 0,
  /* 5804 */ 'a', 'l', 'g', 'f', 'i', 9, 0,
  /* 5811 */ 'c', 'l', 'g', 'f', 'i', 9, 0,
  /* 5818 */ 's', 'l', 'g', 'f', 'i', 9, 0,
  /* 5825 */ 'm', 's', 'g', 'f', 'i', 9, 0,
  /* 5832 */ 'a', 'l', 'f', 'i', 9, 0,
  /* 5838 */ 'c', 'l', 'f', 'i', 9, 0,
  /* 5844 */ 's', 'l', 'f', 'i', 9, 0,
  /* 5850 */ 'm', 's', 'f', 'i', 9, 0,
  /* 5856 */ 'a', 'h', 'i', 9, 0,
  /* 5861 */ 'l', 'o', 'c', 'h', 'i', 9, 0,
  /* 5868 */ 'a', 'g', 'h', 'i', 9, 0,
  /* 5874 */ 'l', 'o', 'c', 'g', 'h', 'i', 9, 0,
  /* 5882 */ 'l', 'g', 'h', 'i', 9, 0,
  /* 5888 */ 'm', 'g', 'h', 'i', 9, 0,
  /* 5894 */ 'm', 'v', 'g', 'h', 'i', 9, 0,
  /* 5901 */ 'm', 'v', 'h', 'h', 'i', 9, 0,
  /* 5908 */ 'l', 'h', 'i', 9, 0,
  /* 5913 */ 'm', 'h', 'i', 9, 0,
  /* 5918 */ 'm', 'v', 'h', 'i', 9, 0,
  /* 5924 */ 'c', 'l', 'i', 9, 0,
  /* 5929 */ 'n', 'i', 9, 0,
  /* 5933 */ 'o', 'i', 9, 0,
  /* 5937 */ 'a', 's', 'i', 9, 0,
  /* 5942 */ 'a', 'g', 's', 'i', 9, 0,
  /* 5948 */ 'c', 'h', 's', 'i', 9, 0,
  /* 5954 */ 'c', 'l', 'f', 'h', 's', 'i', 9, 0,
  /* 5962 */ 'c', 'g', 'h', 's', 'i', 9, 0,
  /* 5969 */ 'c', 'l', 'g', 'h', 's', 'i', 9, 0,
  /* 5977 */ 'c', 'h', 'h', 's', 'i', 9, 0,
  /* 5984 */ 'c', 'l', 'h', 'h', 's', 'i', 9, 0,
  /* 5992 */ 'm', 'v', 'i', 9, 0,
  /* 5997 */ 'x', 'i', 9, 0,
  /* 6001 */ 'c', 'i', 'j', 9, 0,
  /* 6006 */ 'c', 'g', 'i', 'j', 9, 0,
  /* 6012 */ 'c', 'l', 'g', 'i', 'j', 9, 0,
  /* 6019 */ 'c', 'l', 'i', 'j', 9, 0,
  /* 6025 */ 'c', 'r', 'j', 9, 0,
  /* 6030 */ 'c', 'g', 'r', 'j', 9, 0,
  /* 6036 */ 'c', 'l', 'g', 'r', 'j', 9, 0,
  /* 6043 */ 'c', 'l', 'r', 'j', 9, 0,
  /* 6049 */ 's', 'l', 'a', 'k', 9, 0,
  /* 6055 */ 's', 'r', 'a', 'k', 9, 0,
  /* 6061 */ 's', 't', 'c', 'k', 9, 0,
  /* 6067 */ 'a', 'h', 'i', 'k', 9, 0,
  /* 6073 */ 'a', 'g', 'h', 'i', 'k', 9, 0,
  /* 6080 */ 'a', 'l', 'g', 'h', 's', 'i', 'k', 9, 0,
  /* 6089 */ 'a', 'l', 'h', 's', 'i', 'k', 9, 0,
  /* 6097 */ 's', 'l', 'l', 'k', 9, 0,
  /* 6103 */ 's', 'r', 'l', 'k', 9, 0,
  /* 6109 */ 'a', 'r', 'k', 9, 0,
  /* 6114 */ 'a', 'g', 'r', 'k', 9, 0,
  /* 6120 */ 'a', 'l', 'g', 'r', 'k', 9, 0,
  /* 6127 */ 's', 'l', 'g', 'r', 'k', 9, 0,
  /* 6134 */ 'n', 'g', 'r', 'k', 9, 0,
  /* 6140 */ 'o', 'g', 'r', 'k', 9, 0,
  /* 6146 */ 's', 'g', 'r', 'k', 9, 0,
  /* 6152 */ 'x', 'g', 'r', 'k', 9, 0,
  /* 6158 */ 'a', 'l', 'r', 'k', 9, 0,
  /* 6164 */ 's', 'l', 'r', 'k', 9, 0,
  /* 6170 */ 'n', 'r', 'k', 9, 0,
  /* 6175 */ 'o', 'r', 'k', 9, 0,
  /* 6180 */ 's', 'r', 'k', 9, 0,
  /* 6185 */ 'x', 'r', 'k', 9, 0,
  /* 6190 */ 'l', 'a', 'a', 'l', 9, 0,
  /* 6196 */ 'c', 'i', 'b', 'l', 9, 0,
  /* 6202 */ 'c', 'g', 'i', 'b', 'l', 9, 0,
  /* 6209 */ 'c', 'l', 'g', 'i', 'b', 'l', 9, 0,
  /* 6217 */ 'c', 'l', 'i', 'b', 'l', 9, 0,
  /* 6224 */ 'c', 'r', 'b', 'l', 9, 0,
  /* 6230 */ 'c', 'g', 'r', 'b', 'l', 9, 0,
  /* 6237 */ 'c', 'l', 'g', 'r', 'b', 'l', 9, 0,
  /* 6245 */ 'c', 'l', 'r', 'b', 'l', 9, 0,
  /* 6252 */ 'l', 'o', 'c', 'l', 9, 0,
  /* 6258 */ 's', 't', 'o', 'c', 'l', 9, 0,
  /* 6265 */ 'b', 'r', 'c', 'l', 9, 0,
  /* 6271 */ 'd', 'l', 9, 0,
  /* 6275 */ 'v', 's', 'e', 'l', 9, 0,
  /* 6281 */ 'l', 'o', 'c', 'g', 'l', 9, 0,
  /* 6288 */ 's', 't', 'o', 'c', 'g', 'l', 9, 0,
  /* 6296 */ 'j', 'g', 'l', 9, 0,
  /* 6301 */ 'i', 'i', 'h', 'l', 9, 0,
  /* 6307 */ 'l', 'l', 'i', 'h', 'l', 9, 0,
  /* 6314 */ 'n', 'i', 'h', 'l', 9, 0,
  /* 6320 */ 'o', 'i', 'h', 'l', 9, 0,
  /* 6326 */ 't', 'm', 'h', 'l', 9, 0,
  /* 6332 */ 'l', 'o', 'c', 'h', 'i', 'l', 9, 0,
  /* 6340 */ 'l', 'o', 'c', 'g', 'h', 'i', 'l', 9, 0,
  /* 6349 */ 'c', 'i', 'j', 'l', 9, 0,
  /* 6355 */ 'c', 'g', 'i', 'j', 'l', 9, 0,
  /* 6362 */ 'c', 'l', 'g', 'i', 'j', 'l', 9, 0,
  /* 6370 */ 'c', 'l', 'i', 'j', 'l', 9, 0,
  /* 6377 */ 'c', 'r', 'j', 'l', 9, 0,
  /* 6383 */ 'c', 'g', 'r', 'j', 'l', 9, 0,
  /* 6390 */ 'c', 'l', 'g', 'r', 'j', 'l', 9, 0,
  /* 6398 */ 'c', 'l', 'r', 'j', 'l', 9, 0,
  /* 6405 */ 'i', 'i', 'l', 'l', 9, 0,
  /* 6411 */ 'l', 'l', 'i', 'l', 'l', 9, 0,
  /* 6418 */ 'n', 'i', 'l', 'l', 9, 0,
  /* 6424 */ 'o', 'i', 'l', 'l', 9, 0,
  /* 6430 */ 't', 'm', 'l', 'l', 9, 0,
  /* 6436 */ 'r', 'l', 'l', 9, 0,
  /* 6441 */ 's', 'l', 'l', 9, 0,
  /* 6446 */ 'v', 'l', 'l', 9, 0,
  /* 6451 */ 'c', 'i', 'b', 'n', 'l', 9, 0,
  /* 6458 */ 'c', 'g', 'i', 'b', 'n', 'l', 9, 0,
  /* 6466 */ 'c', 'l', 'g', 'i', 'b', 'n', 'l', 9, 0,
  /* 6475 */ 'c', 'l', 'i', 'b', 'n', 'l', 9, 0,
  /* 6483 */ 'c', 'r', 'b', 'n', 'l', 9, 0,
  /* 6490 */ 'c', 'g', 'r', 'b', 'n', 'l', 9, 0,
  /* 6498 */ 'c', 'l', 'g', 'r', 'b', 'n', 'l', 9, 0,
  /* 6507 */ 'c', 'l', 'r', 'b', 'n', 'l', 9, 0,
  /* 6515 */ 'l', 'o', 'c', 'n', 'l', 9, 0,
  /* 6522 */ 's', 't', 'o', 'c', 'n', 'l', 9, 0,
  /* 6530 */ 'l', 'o', 'c', 'g', 'n', 'l', 9, 0,
  /* 6538 */ 's', 't', 'o', 'c', 'g', 'n', 'l', 9, 0,
  /* 6547 */ 'j', 'g', 'n', 'l', 9, 0,
  /* 6553 */ 'l', 'o', 'c', 'h', 'i', 'n', 'l', 9, 0,
  /* 6562 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'l', 9, 0,
  /* 6572 */ 'c', 'i', 'j', 'n', 'l', 9, 0,
  /* 6579 */ 'c', 'g', 'i', 'j', 'n', 'l', 9, 0,
  /* 6587 */ 'c', 'l', 'g', 'i', 'j', 'n', 'l', 9, 0,
  /* 6596 */ 'c', 'l', 'i', 'j', 'n', 'l', 9, 0,
  /* 6604 */ 'c', 'r', 'j', 'n', 'l', 9, 0,
  /* 6611 */ 'c', 'g', 'r', 'j', 'n', 'l', 9, 0,
  /* 6619 */ 'c', 'l', 'g', 'r', 'j', 'n', 'l', 9, 0,
  /* 6628 */ 'c', 'l', 'r', 'j', 'n', 'l', 9, 0,
  /* 6636 */ 'l', 'o', 'c', 'r', 'n', 'l', 9, 0,
  /* 6644 */ 'l', 'o', 'c', 'g', 'r', 'n', 'l', 9, 0,
  /* 6653 */ 'c', 'i', 't', 'n', 'l', 9, 0,
  /* 6660 */ 'c', 'l', 'f', 'i', 't', 'n', 'l', 9, 0,
  /* 6669 */ 'c', 'g', 'i', 't', 'n', 'l', 9, 0,
  /* 6677 */ 'c', 'l', 'g', 'i', 't', 'n', 'l', 9, 0,
  /* 6686 */ 'c', 'r', 't', 'n', 'l', 9, 0,
  /* 6693 */ 'c', 'g', 'r', 't', 'n', 'l', 9, 0,
  /* 6701 */ 'c', 'l', 'g', 'r', 't', 'n', 'l', 9, 0,
  /* 6710 */ 'c', 'l', 'r', 't', 'n', 'l', 9, 0,
  /* 6718 */ 'l', 'a', 'r', 'l', 9, 0,
  /* 6724 */ 'l', 'o', 'c', 'r', 'l', 9, 0,
  /* 6731 */ 'p', 'f', 'd', 'r', 'l', 9, 0,
  /* 6738 */ 'c', 'g', 'f', 'r', 'l', 9, 0,
  /* 6745 */ 'c', 'l', 'g', 'f', 'r', 'l', 9, 0,
  /* 6753 */ 'l', 'l', 'g', 'f', 'r', 'l', 9, 0,
  /* 6761 */ 'l', 'o', 'c', 'g', 'r', 'l', 9, 0,
  /* 6769 */ 'c', 'l', 'g', 'r', 'l', 9, 0,
  /* 6776 */ 's', 't', 'g', 'r', 'l', 9, 0,
  /* 6783 */ 'c', 'h', 'r', 'l', 9, 0,
  /* 6789 */ 'c', 'g', 'h', 'r', 'l', 9, 0,
  /* 6796 */ 'c', 'l', 'g', 'h', 'r', 'l', 9, 0,
  /* 6804 */ 'l', 'l', 'g', 'h', 'r', 'l', 9, 0,
  /* 6812 */ 'c', 'l', 'h', 'r', 'l', 9, 0,
  /* 6819 */ 'l', 'l', 'h', 'r', 'l', 9, 0,
  /* 6826 */ 's', 't', 'h', 'r', 'l', 9, 0,
  /* 6833 */ 'c', 'l', 'r', 'l', 9, 0,
  /* 6839 */ 'v', 's', 'r', 'l', 9, 0,
  /* 6845 */ 's', 't', 'r', 'l', 9, 0,
  /* 6851 */ 'e', 'x', 'r', 'l', 9, 0,
  /* 6857 */ 'b', 'r', 'a', 's', 'l', 9, 0,
  /* 6864 */ 'v', 's', 'l', 9, 0,
  /* 6869 */ 'c', 'i', 't', 'l', 9, 0,
  /* 6875 */ 'c', 'l', 'f', 'i', 't', 'l', 9, 0,
  /* 6883 */ 'c', 'g', 'i', 't', 'l', 9, 0,
  /* 6890 */ 'c', 'l', 'g', 'i', 't', 'l', 9, 0,
  /* 6898 */ 'c', 'r', 't', 'l', 9, 0,
  /* 6904 */ 'c', 'g', 'r', 't', 'l', 9, 0,
  /* 6911 */ 'c', 'l', 'g', 'r', 't', 'l', 9, 0,
  /* 6919 */ 'c', 'l', 'r', 't', 'l', 9, 0,
  /* 6926 */ 'v', 's', 't', 'l', 9, 0,
  /* 6932 */ 'v', 'l', 9, 0,
  /* 6936 */ 'v', 'g', 'b', 'm', 9, 0,
  /* 6942 */ 'i', 'c', 'm', 9, 0,
  /* 6947 */ 'l', 'o', 'c', 'm', 9, 0,
  /* 6953 */ 's', 't', 'o', 'c', 'm', 9, 0,
  /* 6960 */ 'l', 'o', 'c', 'g', 'm', 9, 0,
  /* 6967 */ 's', 't', 'o', 'c', 'g', 'm', 9, 0,
  /* 6975 */ 'j', 'g', 'm', 9, 0,
  /* 6980 */ 'l', 'o', 'c', 'h', 'i', 'm', 9, 0,
  /* 6988 */ 'l', 'o', 'c', 'g', 'h', 'i', 'm', 9, 0,
  /* 6997 */ 'j', 'm', 9, 0,
  /* 7001 */ 'v', 'l', 'm', 9, 0,
  /* 7006 */ 'l', 'o', 'c', 'n', 'm', 9, 0,
  /* 7013 */ 's', 't', 'o', 'c', 'n', 'm', 9, 0,
  /* 7021 */ 'l', 'o', 'c', 'g', 'n', 'm', 9, 0,
  /* 7029 */ 's', 't', 'o', 'c', 'g', 'n', 'm', 9, 0,
  /* 7038 */ 'j', 'g', 'n', 'm', 9, 0,
  /* 7044 */ 'l', 'o', 'c', 'h', 'i', 'n', 'm', 9, 0,
  /* 7053 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'm', 9, 0,
  /* 7063 */ 'j', 'n', 'm', 9, 0,
  /* 7068 */ 'l', 'o', 'c', 'r', 'n', 'm', 9, 0,
  /* 7076 */ 'l', 'o', 'c', 'g', 'r', 'n', 'm', 9, 0,
  /* 7085 */ 'i', 'p', 'm', 9, 0,
  /* 7090 */ 'l', 'o', 'c', 'r', 'm', 9, 0,
  /* 7097 */ 'v', 'p', 'e', 'r', 'm', 9, 0,
  /* 7104 */ 'l', 'o', 'c', 'g', 'r', 'm', 9, 0,
  /* 7112 */ 'v', 'c', 'k', 's', 'm', 9, 0,
  /* 7119 */ 'v', 's', 't', 'm', 9, 0,
  /* 7125 */ 'v', 't', 'm', 9, 0,
  /* 7130 */ 'l', 'a', 'n', 9, 0,
  /* 7135 */ 'r', 'i', 's', 'b', 'g', 'n', 9, 0,
  /* 7143 */ 't', 'b', 'e', 'g', 'i', 'n', 9, 0,
  /* 7151 */ 'v', 'n', 9, 0,
  /* 7155 */ 'l', 'a', 'o', 9, 0,
  /* 7160 */ 'l', 'o', 'c', 'o', 9, 0,
  /* 7166 */ 's', 't', 'o', 'c', 'o', 9, 0,
  /* 7173 */ 'l', 'o', 'c', 'g', 'o', 9, 0,
  /* 7180 */ 's', 't', 'o', 'c', 'g', 'o', 9, 0,
  /* 7188 */ 'j', 'g', 'o', 9, 0,
  /* 7193 */ 'l', 'o', 'c', 'h', 'i', 'o', 9, 0,
  /* 7201 */ 'l', 'o', 'c', 'g', 'h', 'i', 'o', 9, 0,
  /* 7210 */ 'j', 'o', 9, 0,
  /* 7214 */ 'l', 'o', 'c', 'n', 'o', 9, 0,
  /* 7221 */ 's', 't', 'o', 'c', 'n', 'o', 9, 0,
  /* 7229 */ 'l', 'o', 'c', 'g', 'n', 'o', 9, 0,
  /* 7237 */ 's', 't', 'o', 'c', 'g', 'n', 'o', 9, 0,
  /* 7246 */ 'j', 'g', 'n', 'o', 9, 0,
  /* 7252 */ 'l', 'o', 'c', 'h', 'i', 'n', 'o', 9, 0,
  /* 7261 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'o', 9, 0,
  /* 7271 */ 'j', 'n', 'o', 9, 0,
  /* 7276 */ 'l', 'o', 'c', 'r', 'n', 'o', 9, 0,
  /* 7284 */ 'l', 'o', 'c', 'g', 'r', 'n', 'o', 9, 0,
  /* 7293 */ 'v', 'n', 'o', 9, 0,
  /* 7298 */ 'l', 'o', 'c', 'r', 'o', 9, 0,
  /* 7305 */ 'v', 'z', 'e', 'r', 'o', 9, 0,
  /* 7312 */ 'l', 'o', 'c', 'g', 'r', 'o', 9, 0,
  /* 7320 */ 'v', 'o', 9, 0,
  /* 7324 */ 'l', 'o', 'c', 'p', 9, 0,
  /* 7330 */ 's', 't', 'o', 'c', 'p', 9, 0,
  /* 7337 */ 'l', 'o', 'c', 'g', 'p', 9, 0,
  /* 7344 */ 's', 't', 'o', 'c', 'g', 'p', 9, 0,
  /* 7352 */ 'j', 'g', 'p', 9, 0,
  /* 7357 */ 'v', 'l', 'v', 'g', 'p', 9, 0,
  /* 7364 */ 'l', 'o', 'c', 'h', 'i', 'p', 9, 0,
  /* 7372 */ 'l', 'o', 'c', 'g', 'h', 'i', 'p', 9, 0,
  /* 7381 */ 'j', 'p', 9, 0,
  /* 7385 */ 'l', 'o', 'c', 'n', 'p', 9, 0,
  /* 7392 */ 's', 't', 'o', 'c', 'n', 'p', 9, 0,
  /* 7400 */ 'l', 'o', 'c', 'g', 'n', 'p', 9, 0,
  /* 7408 */ 's', 't', 'o', 'c', 'g', 'n', 'p', 9, 0,
  /* 7417 */ 'j', 'g', 'n', 'p', 9, 0,
  /* 7423 */ 'l', 'o', 'c', 'h', 'i', 'n', 'p', 9, 0,
  /* 7432 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'p', 9, 0,
  /* 7442 */ 'j', 'n', 'p', 9, 0,
  /* 7447 */ 'l', 'o', 'c', 'r', 'n', 'p', 9, 0,
  /* 7455 */ 'l', 'o', 'c', 'g', 'r', 'n', 'p', 9, 0,
  /* 7464 */ 'l', 'o', 'c', 'r', 'p', 9, 0,
  /* 7471 */ 'l', 'o', 'c', 'g', 'r', 'p', 9, 0,
  /* 7479 */ 'v', 'a', 'q', 9, 0,
  /* 7484 */ 'v', 'a', 'c', 'q', 9, 0,
  /* 7490 */ 'v', 'a', 'c', 'c', 'q', 9, 0,
  /* 7497 */ 'v', 'a', 'c', 'c', 'c', 'q', 9, 0,
  /* 7505 */ 'v', 's', 'b', 'c', 'b', 'i', 'q', 9, 0,
  /* 7514 */ 'v', 's', 'c', 'b', 'i', 'q', 9, 0,
  /* 7522 */ 'v', 's', 'b', 'i', 'q', 9, 0,
  /* 7529 */ 'v', 's', 'q', 9, 0,
  /* 7534 */ 'e', 'a', 'r', 9, 0,
  /* 7539 */ 'm', 'a', 'd', 'b', 'r', 9, 0,
  /* 7546 */ 'l', 'c', 'd', 'b', 'r', 9, 0,
  /* 7553 */ 'd', 'd', 'b', 'r', 9, 0,
  /* 7559 */ 'l', 'e', 'd', 'b', 'r', 9, 0,
  /* 7566 */ 'c', 'f', 'd', 'b', 'r', 9, 0,
  /* 7573 */ 'c', 'l', 'f', 'd', 'b', 'r', 9, 0,
  /* 7581 */ 'c', 'g', 'd', 'b', 'r', 9, 0,
  /* 7588 */ 'c', 'l', 'g', 'd', 'b', 'r', 9, 0,
  /* 7596 */ 'f', 'i', 'd', 'b', 'r', 9, 0,
  /* 7603 */ 'm', 'd', 'b', 'r', 9, 0,
  /* 7609 */ 'l', 'n', 'd', 'b', 'r', 9, 0,
  /* 7616 */ 'l', 'p', 'd', 'b', 'r', 9, 0,
  /* 7623 */ 's', 'q', 'd', 'b', 'r', 9, 0,
  /* 7630 */ 'm', 's', 'd', 'b', 'r', 9, 0,
  /* 7637 */ 'l', 't', 'd', 'b', 'r', 9, 0,
  /* 7644 */ 'l', 'x', 'd', 'b', 'r', 9, 0,
  /* 7651 */ 'm', 'x', 'd', 'b', 'r', 9, 0,
  /* 7658 */ 'm', 'a', 'e', 'b', 'r', 9, 0,
  /* 7665 */ 'l', 'c', 'e', 'b', 'r', 9, 0,
  /* 7672 */ 'l', 'd', 'e', 'b', 'r', 9, 0,
  /* 7679 */ 'm', 'd', 'e', 'b', 'r', 9, 0,
  /* 7686 */ 'm', 'e', 'e', 'b', 'r', 9, 0,
  /* 7693 */ 'c', 'f', 'e', 'b', 'r', 9, 0,
  /* 7700 */ 'c', 'l', 'f', 'e', 'b', 'r', 9, 0,
  /* 7708 */ 'c', 'g', 'e', 'b', 'r', 9, 0,
  /* 7715 */ 'c', 'l', 'g', 'e', 'b', 'r', 9, 0,
  /* 7723 */ 'f', 'i', 'e', 'b', 'r', 9, 0,
  /* 7730 */ 'l', 'n', 'e', 'b', 'r', 9, 0,
  /* 7737 */ 'l', 'p', 'e', 'b', 'r', 9, 0,
  /* 7744 */ 's', 'q', 'e', 'b', 'r', 9, 0,
  /* 7751 */ 'm', 's', 'e', 'b', 'r', 9, 0,
  /* 7758 */ 'l', 't', 'e', 'b', 'r', 9, 0,
  /* 7765 */ 'l', 'x', 'e', 'b', 'r', 9, 0,
  /* 7772 */ 'c', 'd', 'f', 'b', 'r', 9, 0,
  /* 7779 */ 'c', 'e', 'f', 'b', 'r', 9, 0,
  /* 7786 */ 'c', 'd', 'l', 'f', 'b', 'r', 9, 0,
  /* 7794 */ 'c', 'e', 'l', 'f', 'b', 'r', 9, 0,
  /* 7802 */ 'c', 'x', 'l', 'f', 'b', 'r', 9, 0,
  /* 7810 */ 'c', 'x', 'f', 'b', 'r', 9, 0,
  /* 7817 */ 'c', 'd', 'g', 'b', 'r', 9, 0,
  /* 7824 */ 'c', 'e', 'g', 'b', 'r', 9, 0,
  /* 7831 */ 'c', 'd', 'l', 'g', 'b', 'r', 9, 0,
  /* 7839 */ 'c', 'e', 'l', 'g', 'b', 'r', 9, 0,
  /* 7847 */ 'c', 'x', 'l', 'g', 'b', 'r', 9, 0,
  /* 7855 */ 'c', 'x', 'g', 'b', 'r', 9, 0,
  /* 7862 */ 's', 'l', 'b', 'r', 9, 0,
  /* 7868 */ 'a', 'x', 'b', 'r', 9, 0,
  /* 7874 */ 'l', 'c', 'x', 'b', 'r', 9, 0,
  /* 7881 */ 'l', 'd', 'x', 'b', 'r', 9, 0,
  /* 7888 */ 'l', 'e', 'x', 'b', 'r', 9, 0,
  /* 7895 */ 'c', 'f', 'x', 'b', 'r', 9, 0,
  /* 7902 */ 'c', 'l', 'f', 'x', 'b', 'r', 9, 0,
  /* 7910 */ 'c', 'g', 'x', 'b', 'r', 9, 0,
  /* 7917 */ 'c', 'l', 'g', 'x', 'b', 'r', 9, 0,
  /* 7925 */ 'f', 'i', 'x', 'b', 'r', 9, 0,
  /* 7932 */ 'm', 'x', 'b', 'r', 9, 0,
  /* 7938 */ 'l', 'n', 'x', 'b', 'r', 9, 0,
  /* 7945 */ 'l', 'p', 'x', 'b', 'r', 9, 0,
  /* 7952 */ 's', 'q', 'x', 'b', 'r', 9, 0,
  /* 7959 */ 's', 'x', 'b', 'r', 9, 0,
  /* 7965 */ 'l', 't', 'x', 'b', 'r', 9, 0,
  /* 7972 */ 'b', 'c', 'r', 9, 0,
  /* 7977 */ 'l', 'l', 'g', 'c', 'r', 9, 0,
  /* 7984 */ 'a', 'l', 'c', 'r', 9, 0,
  /* 7990 */ 'l', 'l', 'c', 'r', 9, 0,
  /* 7996 */ 'l', 'o', 'c', 'r', 9, 0,
  /* 8002 */ 'l', 'g', 'd', 'r', 9, 0,
  /* 8008 */ 'l', 'd', 'r', 9, 0,
  /* 8013 */ 'c', 'p', 's', 'd', 'r', 9, 0,
  /* 8020 */ 'l', 'z', 'd', 'r', 9, 0,
  /* 8026 */ 'b', 'e', 'r', 9, 0,
  /* 8031 */ 'b', 'h', 'e', 'r', 9, 0,
  /* 8037 */ 'b', 'n', 'h', 'e', 'r', 9, 0,
  /* 8044 */ 'b', 'l', 'e', 'r', 9, 0,
  /* 8050 */ 'b', 'n', 'l', 'e', 'r', 9, 0,
  /* 8057 */ 'b', 'n', 'e', 'r', 9, 0,
  /* 8063 */ 'l', 'z', 'e', 'r', 9, 0,
  /* 8069 */ 'l', 'c', 'd', 'f', 'r', 9, 0,
  /* 8076 */ 'l', 'n', 'd', 'f', 'r', 9, 0,
  /* 8083 */ 'l', 'p', 'd', 'f', 'r', 9, 0,
  /* 8090 */ 'a', 'g', 'f', 'r', 9, 0,
  /* 8096 */ 'l', 'c', 'g', 'f', 'r', 9, 0,
  /* 8103 */ 'a', 'l', 'g', 'f', 'r', 9, 0,
  /* 8110 */ 'c', 'l', 'g', 'f', 'r', 9, 0,
  /* 8117 */ 'l', 'l', 'g', 'f', 'r', 9, 0,
  /* 8124 */ 's', 'l', 'g', 'f', 'r', 9, 0,
  /* 8131 */ 'l', 'n', 'g', 'f', 'r', 9, 0,
  /* 8138 */ 'l', 'p', 'g', 'f', 'r', 9, 0,
  /* 8145 */ 'd', 's', 'g', 'f', 'r', 9, 0,
  /* 8152 */ 'm', 's', 'g', 'f', 'r', 9, 0,
  /* 8159 */ 'l', 't', 'g', 'f', 'r', 9, 0,
  /* 8166 */ 'a', 'g', 'r', 9, 0,
  /* 8171 */ 's', 'l', 'b', 'g', 'r', 9, 0,
  /* 8178 */ 'a', 'l', 'c', 'g', 'r', 9, 0,
  /* 8185 */ 'l', 'o', 'c', 'g', 'r', 9, 0,
  /* 8192 */ 'l', 'd', 'g', 'r', 9, 0,
  /* 8198 */ 'a', 'l', 'g', 'r', 9, 0,
  /* 8204 */ 'c', 'l', 'g', 'r', 9, 0,
  /* 8210 */ 'd', 'l', 'g', 'r', 9, 0,
  /* 8216 */ 'm', 'l', 'g', 'r', 9, 0,
  /* 8222 */ 's', 'l', 'g', 'r', 9, 0,
  /* 8228 */ 'l', 'n', 'g', 'r', 9, 0,
  /* 8234 */ 'f', 'l', 'o', 'g', 'r', 9, 0,
  /* 8241 */ 'l', 'p', 'g', 'r', 9, 0,
  /* 8247 */ 'd', 's', 'g', 'r', 9, 0,
  /* 8253 */ 'm', 's', 'g', 'r', 9, 0,
  /* 8259 */ 'l', 't', 'g', 'r', 9, 0,
  /* 8265 */ 'l', 'r', 'v', 'g', 'r', 9, 0,
  /* 8272 */ 'x', 'g', 'r', 9, 0,
  /* 8277 */ 'b', 'h', 'r', 9, 0,
  /* 8282 */ 'l', 'l', 'g', 'h', 'r', 9, 0,
  /* 8289 */ 'b', 'l', 'h', 'r', 9, 0,
  /* 8295 */ 'l', 'l', 'h', 'r', 9, 0,
  /* 8301 */ 'b', 'n', 'l', 'h', 'r', 9, 0,
  /* 8308 */ 'b', 'n', 'h', 'r', 9, 0,
  /* 8314 */ 'a', 'l', 'r', 9, 0,
  /* 8319 */ 'b', 'l', 'r', 9, 0,
  /* 8324 */ 'c', 'l', 'r', 9, 0,
  /* 8329 */ 'd', 'l', 'r', 9, 0,
  /* 8334 */ 'b', 'n', 'l', 'r', 9, 0,
  /* 8340 */ 's', 'l', 'r', 9, 0,
  /* 8345 */ 'v', 'l', 'r', 9, 0,
  /* 8350 */ 'b', 'm', 'r', 9, 0,
  /* 8355 */ 'b', 'n', 'm', 'r', 9, 0,
  /* 8361 */ 'l', 'n', 'r', 9, 0,
  /* 8366 */ 'b', 'o', 'r', 9, 0,
  /* 8371 */ 'b', 'n', 'o', 'r', 9, 0,
  /* 8377 */ 'b', 'p', 'r', 9, 0,
  /* 8382 */ 'l', 'p', 'r', 9, 0,
  /* 8387 */ 'b', 'n', 'p', 'r', 9, 0,
  /* 8393 */ 'b', 'a', 's', 'r', 9, 0,
  /* 8399 */ 'm', 's', 'r', 9, 0,
  /* 8404 */ 'l', 't', 'r', 9, 0,
  /* 8409 */ 'l', 'r', 'v', 'r', 9, 0,
  /* 8415 */ 'l', 'x', 'r', 9, 0,
  /* 8420 */ 'l', 'z', 'x', 'r', 9, 0,
  /* 8426 */ 'b', 'z', 'r', 9, 0,
  /* 8431 */ 'b', 'n', 'z', 'r', 9, 0,
  /* 8437 */ 'b', 'r', 'a', 's', 9, 0,
  /* 8443 */ 'v', 's', 't', 'r', 'c', 'b', 's', 9, 0,
  /* 8452 */ 'v', 'f', 'c', 'e', 'd', 'b', 's', 9, 0,
  /* 8461 */ 'w', 'f', 'c', 'e', 'd', 'b', 's', 9, 0,
  /* 8470 */ 'v', 'f', 'c', 'h', 'e', 'd', 'b', 's', 9, 0,
  /* 8480 */ 'w', 'f', 'c', 'h', 'e', 'd', 'b', 's', 9, 0,
  /* 8490 */ 'v', 'f', 'c', 'h', 'd', 'b', 's', 9, 0,
  /* 8499 */ 'w', 'f', 'c', 'h', 'd', 'b', 's', 9, 0,
  /* 8508 */ 'v', 'f', 'a', 'e', 'b', 's', 9, 0,
  /* 8516 */ 'v', 'f', 'e', 'e', 'b', 's', 9, 0,
  /* 8524 */ 'v', 'f', 'e', 'n', 'e', 'b', 's', 9, 0,
  /* 8533 */ 'v', 'c', 'h', 'b', 's', 9, 0,
  /* 8540 */ 'v', 'c', 'h', 'l', 'b', 's', 9, 0,
  /* 8548 */ 'v', 'c', 'e', 'q', 'b', 's', 9, 0,
  /* 8556 */ 'v', 'i', 's', 't', 'r', 'b', 's', 9, 0,
  /* 8565 */ 'v', 's', 't', 'r', 'c', 'z', 'b', 's', 9, 0,
  /* 8575 */ 'v', 'f', 'a', 'e', 'z', 'b', 's', 9, 0,
  /* 8584 */ 'v', 'f', 'e', 'e', 'z', 'b', 's', 9, 0,
  /* 8593 */ 'v', 'f', 'e', 'n', 'e', 'z', 'b', 's', 9, 0,
  /* 8603 */ 'c', 's', 9, 0,
  /* 8607 */ 'v', 's', 't', 'r', 'c', 'f', 's', 9, 0,
  /* 8616 */ 'v', 'f', 'a', 'e', 'f', 's', 9, 0,
  /* 8624 */ 'v', 'f', 'e', 'e', 'f', 's', 9, 0,
  /* 8632 */ 'v', 'f', 'e', 'n', 'e', 'f', 's', 9, 0,
  /* 8641 */ 'v', 'c', 'h', 'f', 's', 9, 0,
  /* 8648 */ 'v', 'c', 'h', 'l', 'f', 's', 9, 0,
  /* 8656 */ 'v', 'c', 'e', 'q', 'f', 's', 9, 0,
  /* 8664 */ 'v', 'i', 's', 't', 'r', 'f', 's', 9, 0,
  /* 8673 */ 'v', 'p', 'k', 's', 'f', 's', 9, 0,
  /* 8681 */ 'v', 'p', 'k', 'l', 's', 'f', 's', 9, 0,
  /* 8690 */ 'v', 's', 't', 'r', 'c', 'z', 'f', 's', 9, 0,
  /* 8700 */ 'v', 'f', 'a', 'e', 'z', 'f', 's', 9, 0,
  /* 8709 */ 'v', 'f', 'e', 'e', 'z', 'f', 's', 9, 0,
  /* 8718 */ 'v', 'f', 'e', 'n', 'e', 'z', 'f', 's', 9, 0,
  /* 8728 */ 'v', 'c', 'h', 'g', 's', 9, 0,
  /* 8735 */ 'v', 'c', 'h', 'l', 'g', 's', 9, 0,
  /* 8743 */ 'v', 'c', 'e', 'q', 'g', 's', 9, 0,
  /* 8751 */ 'v', 'p', 'k', 's', 'g', 's', 9, 0,
  /* 8759 */ 'v', 'p', 'k', 'l', 's', 'g', 's', 9, 0,
  /* 8768 */ 'v', 's', 't', 'r', 'c', 'h', 's', 9, 0,
  /* 8777 */ 'v', 'f', 'a', 'e', 'h', 's', 9, 0,
  /* 8785 */ 'v', 'f', 'e', 'e', 'h', 's', 9, 0,
  /* 8793 */ 'v', 'f', 'e', 'n', 'e', 'h', 's', 9, 0,
  /* 8802 */ 'v', 'c', 'h', 'h', 's', 9, 0,
  /* 8809 */ 'v', 'c', 'h', 'l', 'h', 's', 9, 0,
  /* 8817 */ 'v', 'c', 'e', 'q', 'h', 's', 9, 0,
  /* 8825 */ 'v', 'i', 's', 't', 'r', 'h', 's', 9, 0,
  /* 8834 */ 'v', 'p', 'k', 's', 'h', 's', 9, 0,
  /* 8842 */ 'v', 'p', 'k', 'l', 's', 'h', 's', 9, 0,
  /* 8851 */ 'v', 's', 't', 'r', 'c', 'z', 'h', 's', 9, 0,
  /* 8861 */ 'v', 'f', 'a', 'e', 'z', 'h', 's', 9, 0,
  /* 8870 */ 'v', 'f', 'e', 'e', 'z', 'h', 's', 9, 0,
  /* 8879 */ 'v', 'f', 'e', 'n', 'e', 'z', 'h', 's', 9, 0,
  /* 8889 */ 'm', 's', 9, 0,
  /* 8893 */ 'v', 'p', 'o', 'p', 'c', 't', 9, 0,
  /* 8901 */ 'b', 'r', 'c', 't', 9, 0,
  /* 8907 */ 'c', 'i', 't', 9, 0,
  /* 8912 */ 'c', 'l', 'f', 'i', 't', 9, 0,
  /* 8919 */ 'c', 'g', 'i', 't', 9, 0,
  /* 8925 */ 'c', 'l', 'g', 'i', 't', 9, 0,
  /* 8932 */ 'l', 't', 9, 0,
  /* 8936 */ 'p', 'o', 'p', 'c', 'n', 't', 9, 0,
  /* 8944 */ 'c', 'r', 't', 9, 0,
  /* 8949 */ 'c', 'g', 'r', 't', 9, 0,
  /* 8955 */ 'c', 'l', 'g', 'r', 't', 9, 0,
  /* 8962 */ 'c', 'l', 'r', 't', 9, 0,
  /* 8968 */ 't', 'a', 'b', 'o', 'r', 't', 9, 0,
  /* 8976 */ 'c', 'l', 's', 't', 9, 0,
  /* 8982 */ 's', 'r', 's', 't', 9, 0,
  /* 8988 */ 'm', 'v', 's', 't', 9, 0,
  /* 8994 */ 'l', 'r', 'v', 9, 0,
  /* 8999 */ 's', 't', 'r', 'v', 9, 0,
  /* 9005 */ 'v', 'm', 'a', 'l', 'h', 'w', 9, 0,
  /* 9013 */ 'v', 'm', 'l', 'h', 'w', 9, 0,
  /* 9020 */ 'v', 'u', 'p', 'l', 'h', 'w', 9, 0,
  /* 9028 */ 'l', 'a', 'x', 9, 0,
  /* 9033 */ 'e', 'x', 9, 0,
  /* 9037 */ 'v', 'x', 9, 0,
  /* 9041 */ 'l', 'a', 'y', 9, 0,
  /* 9046 */ 'i', 'c', 'y', 9, 0,
  /* 9051 */ 's', 't', 'c', 'y', 9, 0,
  /* 9057 */ 'l', 'd', 'y', 9, 0,
  /* 9062 */ 's', 't', 'd', 'y', 9, 0,
  /* 9068 */ 'l', 'e', 'y', 9, 0,
  /* 9073 */ 's', 't', 'e', 'y', 9, 0,
  /* 9079 */ 'a', 'h', 'y', 9, 0,
  /* 9084 */ 'c', 'h', 'y', 9, 0,
  /* 9089 */ 'l', 'h', 'y', 9, 0,
  /* 9094 */ 'm', 'h', 'y', 9, 0,
  /* 9099 */ 's', 'h', 'y', 9, 0,
  /* 9104 */ 's', 't', 'h', 'y', 9, 0,
  /* 9110 */ 'c', 'l', 'i', 'y', 9, 0,
  /* 9116 */ 'n', 'i', 'y', 9, 0,
  /* 9121 */ 'o', 'i', 'y', 9, 0,
  /* 9126 */ 'm', 'v', 'i', 'y', 9, 0,
  /* 9132 */ 'x', 'i', 'y', 9, 0,
  /* 9137 */ 'a', 'l', 'y', 9, 0,
  /* 9142 */ 'c', 'l', 'y', 9, 0,
  /* 9147 */ 's', 'l', 'y', 9, 0,
  /* 9152 */ 'i', 'c', 'm', 'y', 9, 0,
  /* 9158 */ 'l', 'm', 'y', 9, 0,
  /* 9163 */ 's', 't', 'm', 'y', 9, 0,
  /* 9169 */ 'n', 'y', 9, 0,
  /* 9173 */ 'o', 'y', 9, 0,
  /* 9177 */ 'c', 's', 'y', 9, 0,
  /* 9182 */ 'm', 's', 'y', 9, 0,
  /* 9187 */ 's', 't', 'y', 9, 0,
  /* 9192 */ 'x', 'y', 9, 0,
  /* 9196 */ 'l', 'o', 'c', 'z', 9, 0,
  /* 9202 */ 's', 't', 'o', 'c', 'z', 9, 0,
  /* 9209 */ 'l', 'o', 'c', 'g', 'z', 9, 0,
  /* 9216 */ 's', 't', 'o', 'c', 'g', 'z', 9, 0,
  /* 9224 */ 'j', 'g', 'z', 9, 0,
  /* 9229 */ 'l', 'o', 'c', 'h', 'i', 'z', 9, 0,
  /* 9237 */ 'l', 'o', 'c', 'g', 'h', 'i', 'z', 9, 0,
  /* 9246 */ 'j', 'z', 9, 0,
  /* 9250 */ 'l', 'o', 'c', 'n', 'z', 9, 0,
  /* 9257 */ 's', 't', 'o', 'c', 'n', 'z', 9, 0,
  /* 9265 */ 'l', 'o', 'c', 'g', 'n', 'z', 9, 0,
  /* 9273 */ 's', 't', 'o', 'c', 'g', 'n', 'z', 9, 0,
  /* 9282 */ 'j', 'g', 'n', 'z', 9, 0,
  /* 9288 */ 'l', 'o', 'c', 'h', 'i', 'n', 'z', 9, 0,
  /* 9297 */ 'l', 'o', 'c', 'g', 'h', 'i', 'n', 'z', 9, 0,
  /* 9307 */ 'j', 'n', 'z', 9, 0,
  /* 9312 */ 'l', 'o', 'c', 'r', 'n', 'z', 9, 0,
  /* 9320 */ 'l', 'o', 'c', 'g', 'r', 'n', 'z', 9, 0,
  /* 9329 */ 'l', 'o', 'c', 'r', 'z', 9, 0,
  /* 9336 */ 'l', 'o', 'c', 'g', 'r', 'z', 9, 0,
  /* 9344 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'n', 't', 'e', 'r', '.', 0,
  /* 9367 */ '#', 32, 'X', 'R', 'a', 'y', 32, 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 32, 'E', 'x', 'i', 't', '.', 0,
  /* 9389 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 9402 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 9409 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 9419 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 9434 */ 'c', 'i', 'b', 0,
  /* 9438 */ 'c', 'g', 'i', 'b', 0,
  /* 9443 */ 'c', 'l', 'g', 'i', 'b', 0,
  /* 9449 */ 'c', 'l', 'i', 'b', 0,
  /* 9454 */ 'c', 'r', 'b', 0,
  /* 9458 */ 'c', 'g', 'r', 'b', 0,
  /* 9463 */ 'c', 'l', 'g', 'r', 'b', 0,
  /* 9469 */ 'c', 'l', 'r', 'b', 0,
  /* 9474 */ 'l', 'o', 'c', 0,
  /* 9478 */ 's', 't', 'o', 'c', 0,
  /* 9483 */ 't', 'e', 'n', 'd', 0,
  /* 9488 */ 'l', 'o', 'c', 'g', 0,
  /* 9493 */ 's', 't', 'o', 'c', 'g', 0,
  /* 9499 */ 'j', 'g', 0,
  /* 9502 */ 'l', 'o', 'c', 'h', 'i', 0,
  /* 9508 */ 'l', 'o', 'c', 'g', 'h', 'i', 0,
  /* 9515 */ 'c', 'i', 'j', 0,
  /* 9519 */ 'c', 'g', 'i', 'j', 0,
  /* 9524 */ 'c', 'l', 'g', 'i', 'j', 0,
  /* 9530 */ 'c', 'l', 'i', 'j', 0,
  /* 9535 */ 'c', 'r', 'j', 0,
  /* 9539 */ 'c', 'g', 'r', 'j', 0,
  /* 9544 */ 'c', 'l', 'g', 'r', 'j', 0,
  /* 9550 */ 'c', 'l', 'r', 'j', 0,
  /* 9555 */ 'l', 'o', 'c', 'r', 0,
  /* 9560 */ 'l', 'o', 'c', 'g', 'r', 0,
  /* 9566 */ 'c', 'i', 't', 0,
  /* 9570 */ 'c', 'l', 'f', 'i', 't', 0,
  /* 9576 */ 'c', 'g', 'i', 't', 0,
  /* 9581 */ 'c', 'l', 'g', 'i', 't', 0,
  /* 9587 */ 'c', 'r', 't', 0,
  /* 9591 */ 'c', 'g', 'r', 't', 0,
  /* 9596 */ 'c', 'l', 'g', 'r', 't', 0,
  /* 9602 */ 'c', 'l', 'r', 't', 0,
  };

  static const uint32_t OpInfo0[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    9410U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    9403U,	// BUNDLE
    9420U,	// LIFETIME_START
    9390U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_LOAD_OP
    0U,	// PATCHABLE_OP
    9345U,	// PATCHABLE_FUNCTION_ENTER
    9368U,	// PATCHABLE_RET
    0U,	// G_ADD
    0U,	// G_OR
    0U,	// G_BR
    16387U,	// A
    16523U,	// ADB
    4218229U,	// ADBR
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ADJDYNALLOC
    16840U,	// AEB
    4218348U,	// AEBR
    0U,	// AEXT128_64
    8410775U,	// AFI
    0U,	// AFIMux
    19896U,	// AG
    19336U,	// AGF
    8410785U,	// AGFI
    4218779U,	// AGFR
    12605165U,	// AGHI
    151017402U,	// AGHIK
    4218855U,	// AGR
    2298501091U,	// AGRK
    21010231U,	// AGSI
    20417U,	// AH
    12605153U,	// AHI
    151017396U,	// AHIK
    0U,	// AHIMux
    0U,	// AHIMuxK
    25464U,	// AHY
    8409383U,	// AIH
    22577U,	// AL
    17463U,	// ALC
    19968U,	// ALCG
    4218867U,	// ALCGR
    4218673U,	// ALCR
    25188041U,	// ALFI
    20089U,	// ALG
    19353U,	// ALGF
    25188013U,	// ALGFI
    4218792U,	// ALGFR
    151017409U,	// ALGHSIK
    4218887U,	// ALGR
    2298501097U,	// ALGRK
    151017418U,	// ALHSIK
    4219003U,	// ALR
    2298501135U,	// ALRK
    25522U,	// ALY
    4218224U,	// AR
    2298501086U,	// ARK
    21010226U,	// ASI
    0U,	// ATOMIC_CMP_SWAPW
    0U,	// ATOMIC_LOADW_AFI
    0U,	// ATOMIC_LOADW_AR
    0U,	// ATOMIC_LOADW_MAX
    0U,	// ATOMIC_LOADW_MIN
    0U,	// ATOMIC_LOADW_NILH
    0U,	// ATOMIC_LOADW_NILHi
    0U,	// ATOMIC_LOADW_NR
    0U,	// ATOMIC_LOADW_NRi
    0U,	// ATOMIC_LOADW_OILH
    0U,	// ATOMIC_LOADW_OR
    0U,	// ATOMIC_LOADW_SR
    0U,	// ATOMIC_LOADW_UMAX
    0U,	// ATOMIC_LOADW_UMIN
    0U,	// ATOMIC_LOADW_XILF
    0U,	// ATOMIC_LOADW_XR
    0U,	// ATOMIC_LOAD_AFI
    0U,	// ATOMIC_LOAD_AGFI
    0U,	// ATOMIC_LOAD_AGHI
    0U,	// ATOMIC_LOAD_AGR
    0U,	// ATOMIC_LOAD_AHI
    0U,	// ATOMIC_LOAD_AR
    0U,	// ATOMIC_LOAD_MAX_32
    0U,	// ATOMIC_LOAD_MAX_64
    0U,	// ATOMIC_LOAD_MIN_32
    0U,	// ATOMIC_LOAD_MIN_64
    0U,	// ATOMIC_LOAD_NGR
    0U,	// ATOMIC_LOAD_NGRi
    0U,	// ATOMIC_LOAD_NIHF64
    0U,	// ATOMIC_LOAD_NIHF64i
    0U,	// ATOMIC_LOAD_NIHH64
    0U,	// ATOMIC_LOAD_NIHH64i
    0U,	// ATOMIC_LOAD_NIHL64
    0U,	// ATOMIC_LOAD_NIHL64i
    0U,	// ATOMIC_LOAD_NILF
    0U,	// ATOMIC_LOAD_NILF64
    0U,	// ATOMIC_LOAD_NILF64i
    0U,	// ATOMIC_LOAD_NILFi
    0U,	// ATOMIC_LOAD_NILH
    0U,	// ATOMIC_LOAD_NILH64
    0U,	// ATOMIC_LOAD_NILH64i
    0U,	// ATOMIC_LOAD_NILHi
    0U,	// ATOMIC_LOAD_NILL
    0U,	// ATOMIC_LOAD_NILL64
    0U,	// ATOMIC_LOAD_NILL64i
    0U,	// ATOMIC_LOAD_NILLi
    0U,	// ATOMIC_LOAD_NR
    0U,	// ATOMIC_LOAD_NRi
    0U,	// ATOMIC_LOAD_OGR
    0U,	// ATOMIC_LOAD_OIHF64
    0U,	// ATOMIC_LOAD_OIHH64
    0U,	// ATOMIC_LOAD_OIHL64
    0U,	// ATOMIC_LOAD_OILF
    0U,	// ATOMIC_LOAD_OILF64
    0U,	// ATOMIC_LOAD_OILH
    0U,	// ATOMIC_LOAD_OILH64
    0U,	// ATOMIC_LOAD_OILL
    0U,	// ATOMIC_LOAD_OILL64
    0U,	// ATOMIC_LOAD_OR
    0U,	// ATOMIC_LOAD_SGR
    0U,	// ATOMIC_LOAD_SR
    0U,	// ATOMIC_LOAD_UMAX_32
    0U,	// ATOMIC_LOAD_UMAX_64
    0U,	// ATOMIC_LOAD_UMIN_32
    0U,	// ATOMIC_LOAD_UMIN_64
    0U,	// ATOMIC_LOAD_XGR
    0U,	// ATOMIC_LOAD_XIHF64
    0U,	// ATOMIC_LOAD_XILF
    0U,	// ATOMIC_LOAD_XILF64
    0U,	// ATOMIC_LOAD_XR
    0U,	// ATOMIC_SWAPW
    0U,	// ATOMIC_SWAP_32
    0U,	// ATOMIC_SWAP_64
    4218557U,	// AXBR
    25427U,	// AY
    312361U,	// AsmBC
    29941541U,	// AsmBCR
    836703U,	// AsmBRC
    841850U,	// AsmBRCL
    302006966U,	// AsmCGIB
    2449495927U,	// AsmCGIJ
    171991768U,	// AsmCGIT
    151012251U,	// AsmCGRB
    151017359U,	// AsmCGRJ
    151020278U,	// AsmCGRT
    302006954U,	// AsmCIB
    2449495922U,	// AsmCIJ
    171991756U,	// AsmCIT
    176186065U,	// AsmCLFIT
    314589884U,	// AsmCLGIB
    2462078845U,	// AsmCLGIJ
    176186078U,	// AsmCLGIT
    151012257U,	// AsmCLGRB
    151017365U,	// AsmCLGRJ
    151020284U,	// AsmCLGRT
    314589891U,	// AsmCLIB
    2462078852U,	// AsmCLIJ
    151012264U,	// AsmCLRB
    151017372U,	// AsmCLRJ
    151020291U,	// AsmCLRT
    151012246U,	// AsmCRB
    151017354U,	// AsmCRJ
    151020273U,	// AsmCRT
    1073387U,	// AsmEAltBR
    74783U,	// AsmEAltJ
    74761U,	// AsmEAltJG
    50357229U,	// AsmEAltLOC
    50357242U,	// AsmEAltLOCG
    12608534U,	// AsmEAltLOCGHI
    4220025U,	// AsmEAltLOCGR
    12608526U,	// AsmEAltLOCHI
    4220018U,	// AsmEAltLOCR
    54551539U,	// AsmEAltSTOC
    54551553U,	// AsmEAltSTOCG
    1072987U,	// AsmEBR
    67379U,	// AsmEJ
    66788U,	// AsmEJG
    50349251U,	// AsmELOC
    50349269U,	// AsmELOCG
    12601128U,	// AsmELOCGHI
    4213446U,	// AsmELOCGR
    12601120U,	// AsmELOCHI
    4213439U,	// AsmELOCR
    54543561U,	// AsmESTOC
    54543580U,	// AsmESTOCG
    1073338U,	// AsmHAltBR
    72918U,	// AsmHAltJ
    72889U,	// AsmHAltJG
    50355357U,	// AsmHAltLOC
    50355370U,	// AsmHAltLOCG
    12606669U,	// AsmHAltLOCGHI
    4218160U,	// AsmHAltLOCGR
    12606661U,	// AsmHAltLOCHI
    4218153U,	// AsmHAltLOCR
    54549667U,	// AsmHAltSTOC
    54549681U,	// AsmHAltSTOCG
    1073238U,	// AsmHBR
    1072992U,	// AsmHEBR
    66916U,	// AsmHEJ
    66889U,	// AsmHEJG
    50349353U,	// AsmHELOC
    50349368U,	// AsmHELOCG
    12600664U,	// AsmHELOCGHI
    4212438U,	// AsmHELOCGR
    12600655U,	// AsmHELOCHI
    4212430U,	// AsmHELOCR
    54543664U,	// AsmHESTOC
    54543680U,	// AsmHESTOCG
    69985U,	// AsmHJ
    69795U,	// AsmHJG
    50352168U,	// AsmHLOC
    50352269U,	// AsmHLOCG
    12603720U,	// AsmHLOCGHI
    4216250U,	// AsmHLOCGR
    12603712U,	// AsmHLOCHI
    4216243U,	// AsmHLOCR
    54546478U,	// AsmHSTOC
    54546580U,	// AsmHSTOCG
    436228771U,	// AsmJEAltCGIB
    570446635U,	// AsmJEAltCGIJ
    37770135U,	// AsmJEAltCGIT
    2298499783U,	// AsmJEAltCGRB
    151016271U,	// AsmJEAltCGRJ
    16798642U,	// AsmJEAltCGRT
    436228763U,	// AsmJEAltCIB
    570446627U,	// AsmJEAltCIJ
    37770117U,	// AsmJEAltCIT
    41964429U,	// AsmJEAltCLFIT
    448811692U,	// AsmJEAltCLGIB
    583029556U,	// AsmJEAltCLGIJ
    41964448U,	// AsmJEAltCLGIT
    2298499792U,	// AsmJEAltCLGRB
    151016280U,	// AsmJEAltCLGRJ
    16798651U,	// AsmJEAltCLGRT
    448811702U,	// AsmJEAltCLIB
    583029566U,	// AsmJEAltCLIJ
    2298499802U,	// AsmJEAltCLRB
    151016290U,	// AsmJEAltCLRJ
    16798661U,	// AsmJEAltCLRT
    2298499775U,	// AsmJEAltCRB
    151016263U,	// AsmJEAltCRJ
    16798634U,	// AsmJEAltCRT
    436225169U,	// AsmJECGIB
    570443575U,	// AsmJECGIJ
    37767900U,	// AsmJECGIT
    2298496173U,	// AsmJECGRB
    151013203U,	// AsmJECGRJ
    16796401U,	// AsmJECGRT
    436225163U,	// AsmJECIB
    570443569U,	// AsmJECIJ
    37767886U,	// AsmJECIT
    41962196U,	// AsmJECLFIT
    448808088U,	// AsmJECLGIB
    583026494U,	// AsmJECLGIJ
    41962211U,	// AsmJECLGIT
    2298496180U,	// AsmJECLGRB
    151013210U,	// AsmJECLGRJ
    16796408U,	// AsmJECLGRT
    448808096U,	// AsmJECLIB
    583026502U,	// AsmJECLIJ
    2298496188U,	// AsmJECLRB
    151013218U,	// AsmJECLRJ
    16796416U,	// AsmJECLRT
    2298496167U,	// AsmJECRB
    151013197U,	// AsmJECRJ
    16796395U,	// AsmJECRT
    436226104U,	// AsmJHAltCGIB
    570443968U,	// AsmJHAltCGIJ
    37767461U,	// AsmJHAltCGIT
    2298497116U,	// AsmJHAltCGRB
    151013604U,	// AsmJHAltCGRJ
    16795968U,	// AsmJHAltCGRT
    436226096U,	// AsmJHAltCIB
    570443960U,	// AsmJHAltCIJ
    37767443U,	// AsmJHAltCIT
    41961755U,	// AsmJHAltCLFIT
    448809025U,	// AsmJHAltCLGIB
    583026889U,	// AsmJHAltCLGIJ
    41961774U,	// AsmJHAltCLGIT
    2298497125U,	// AsmJHAltCLGRB
    151013613U,	// AsmJHAltCLGRJ
    16795977U,	// AsmJHAltCLGRT
    448809035U,	// AsmJHAltCLIB
    583026899U,	// AsmJHAltCLIJ
    2298497135U,	// AsmJHAltCLRB
    151013623U,	// AsmJHAltCLRJ
    16795987U,	// AsmJHAltCLRT
    2298497108U,	// AsmJHAltCRB
    151013596U,	// AsmJHAltCRJ
    16795960U,	// AsmJHAltCRT
    436228056U,	// AsmJHCGIB
    570446181U,	// AsmJHCGIJ
    37770732U,	// AsmJHCGIT
    2298499065U,	// AsmJHCGRB
    151015809U,	// AsmJHCGRJ
    16799233U,	// AsmJHCGRT
    436228050U,	// AsmJHCIB
    570446175U,	// AsmJHCIJ
    37770718U,	// AsmJHCIT
    41965028U,	// AsmJHCLFIT
    448810975U,	// AsmJHCLGIB
    583029100U,	// AsmJHCLGIJ
    41965043U,	// AsmJHCLGIT
    2298499072U,	// AsmJHCLGRB
    151015816U,	// AsmJHCLGRJ
    16799240U,	// AsmJHCLGRT
    448810983U,	// AsmJHCLIB
    583029108U,	// AsmJHCLIJ
    2298499080U,	// AsmJHCLRB
    151015824U,	// AsmJHCLRJ
    16799248U,	// AsmJHCLRT
    2298499059U,	// AsmJHCRB
    151015803U,	// AsmJHCRJ
    16799227U,	// AsmJHCRT
    436230459U,	// AsmJHEAltCGIB
    570448308U,	// AsmJHEAltCGIJ
    37771790U,	// AsmJHEAltCGIT
    2298501467U,	// AsmJHEAltCGRB
    151017940U,	// AsmJHEAltCGRJ
    16800294U,	// AsmJHEAltCGRT
    436230452U,	// AsmJHEAltCIB
    570448301U,	// AsmJHEAltCIJ
    37771774U,	// AsmJHEAltCIT
    41966085U,	// AsmJHEAltCLFIT
    448813379U,	// AsmJHEAltCLGIB
    583031228U,	// AsmJHEAltCLGIJ
    41966102U,	// AsmJHEAltCLGIT
    2298501475U,	// AsmJHEAltCLGRB
    151017948U,	// AsmJHEAltCLGRJ
    16800302U,	// AsmJHEAltCLGRT
    448813388U,	// AsmJHEAltCLIB
    583031237U,	// AsmJHEAltCLIJ
    2298501484U,	// AsmJHEAltCLRB
    151017957U,	// AsmJHEAltCLRJ
    16800311U,	// AsmJHEAltCLRT
    2298501460U,	// AsmJHEAltCRB
    151017933U,	// AsmJHEAltCRJ
    16800287U,	// AsmJHEAltCRT
    436225264U,	// AsmJHECGIB
    570443113U,	// AsmJHECGIJ
    37766895U,	// AsmJHECGIT
    2298496272U,	// AsmJHECGRB
    151012745U,	// AsmJHECGRJ
    16795399U,	// AsmJHECGRT
    436225257U,	// AsmJHECIB
    570443106U,	// AsmJHECIJ
    37766879U,	// AsmJHECIT
    41961190U,	// AsmJHECLFIT
    448808184U,	// AsmJHECLGIB
    583026033U,	// AsmJHECLGIJ
    41961207U,	// AsmJHECLGIT
    2298496280U,	// AsmJHECLGRB
    151012753U,	// AsmJHECLGRJ
    16795407U,	// AsmJHECLGRT
    448808193U,	// AsmJHECLIB
    583026042U,	// AsmJHECLIJ
    2298496289U,	// AsmJHECLRB
    151012762U,	// AsmJHECLRJ
    16795416U,	// AsmJHECLRT
    2298496265U,	// AsmJHECRB
    151012738U,	// AsmJHECRJ
    16795392U,	// AsmJHECRT
    436225450U,	// AsmJLAltCGIB
    570443314U,	// AsmJLAltCGIJ
    37766807U,	// AsmJLAltCGIT
    2298496462U,	// AsmJLAltCGRB
    151012950U,	// AsmJLAltCGRJ
    16795314U,	// AsmJLAltCGRT
    436225442U,	// AsmJLAltCIB
    570443306U,	// AsmJLAltCIJ
    37766789U,	// AsmJLAltCIT
    41961101U,	// AsmJLAltCLFIT
    448808371U,	// AsmJLAltCLGIB
    583026235U,	// AsmJLAltCLGIJ
    41961120U,	// AsmJLAltCLGIT
    2298496471U,	// AsmJLAltCLGRB
    151012959U,	// AsmJLAltCLGRJ
    16795323U,	// AsmJLAltCLGRT
    448808381U,	// AsmJLAltCLIB
    583026245U,	// AsmJLAltCLIJ
    2298496481U,	// AsmJLAltCLRB
    151012969U,	// AsmJLAltCLRJ
    16795333U,	// AsmJLAltCLRT
    2298496454U,	// AsmJLAltCRB
    151012942U,	// AsmJLAltCRJ
    16795306U,	// AsmJLAltCRT
    436230203U,	// AsmJLCGIB
    570448084U,	// AsmJLCGIJ
    37772004U,	// AsmJLCGIT
    2298501207U,	// AsmJLCGRB
    151017712U,	// AsmJLCGRJ
    16800505U,	// AsmJLCGRT
    436230197U,	// AsmJLCIB
    570448078U,	// AsmJLCIJ
    37771990U,	// AsmJLCIT
    41966300U,	// AsmJLCLFIT
    448813122U,	// AsmJLCLGIB
    583031003U,	// AsmJLCLGIJ
    41966315U,	// AsmJLCLGIT
    2298501214U,	// AsmJLCLGRB
    151017719U,	// AsmJLCLGRJ
    16800512U,	// AsmJLCLGRT
    448813130U,	// AsmJLCLIB
    583031011U,	// AsmJLCLIJ
    2298501222U,	// AsmJLCLRB
    151017727U,	// AsmJLCLRJ
    16800520U,	// AsmJLCLRT
    2298501201U,	// AsmJLCRB
    151017706U,	// AsmJLCRJ
    16800499U,	// AsmJLCRT
    436229233U,	// AsmJLEAltCGIB
    570447082U,	// AsmJLEAltCGIJ
    37770570U,	// AsmJLEAltCGIT
    2298500241U,	// AsmJLEAltCGRB
    151016714U,	// AsmJLEAltCGRJ
    16799074U,	// AsmJLEAltCGRT
    436229226U,	// AsmJLEAltCIB
    570447075U,	// AsmJLEAltCIJ
    37770554U,	// AsmJLEAltCIT
    41964865U,	// AsmJLEAltCLFIT
    448812153U,	// AsmJLEAltCLGIB
    583030002U,	// AsmJLEAltCLGIJ
    41964882U,	// AsmJLEAltCLGIT
    2298500249U,	// AsmJLEAltCLGRB
    151016722U,	// AsmJLEAltCLGRJ
    16799082U,	// AsmJLEAltCLGRT
    448812162U,	// AsmJLEAltCLIB
    583030011U,	// AsmJLEAltCLIJ
    2298500258U,	// AsmJLEAltCLRB
    151016731U,	// AsmJLEAltCLRJ
    16799091U,	// AsmJLEAltCLRT
    2298500234U,	// AsmJLEAltCRB
    151016707U,	// AsmJLEAltCRJ
    16799067U,	// AsmJLEAltCRT
    436225911U,	// AsmJLECGIB
    570443767U,	// AsmJLECGIJ
    37767549U,	// AsmJLECGIT
    2298496919U,	// AsmJLECGRB
    151013399U,	// AsmJLECGRJ
    16796053U,	// AsmJLECGRT
    436225904U,	// AsmJLECIB
    570443760U,	// AsmJLECIJ
    37767533U,	// AsmJLECIT
    41961844U,	// AsmJLECLFIT
    448808831U,	// AsmJLECLGIB
    583026687U,	// AsmJLECLGIJ
    41961861U,	// AsmJLECLGIT
    2298496927U,	// AsmJLECLGRB
    151013407U,	// AsmJLECLGRJ
    16796061U,	// AsmJLECLGRT
    448808840U,	// AsmJLECLIB
    583026696U,	// AsmJLECLIJ
    2298496936U,	// AsmJLECLRB
    151013416U,	// AsmJLECLRJ
    16796070U,	// AsmJLECLRT
    2298496912U,	// AsmJLECRB
    151013392U,	// AsmJLECRJ
    16796046U,	// AsmJLECRT
    436226485U,	// AsmJLHAltCGIB
    570444334U,	// AsmJLHAltCGIJ
    37767822U,	// AsmJLHAltCGIT
    2298497493U,	// AsmJLHAltCGRB
    151013966U,	// AsmJLHAltCGRJ
    16796326U,	// AsmJLHAltCGRT
    436226478U,	// AsmJLHAltCIB
    570444327U,	// AsmJLHAltCIJ
    37767806U,	// AsmJLHAltCIT
    41962117U,	// AsmJLHAltCLFIT
    448809405U,	// AsmJLHAltCLGIB
    583027254U,	// AsmJLHAltCLGIJ
    41962134U,	// AsmJLHAltCLGIT
    2298497501U,	// AsmJLHAltCLGRB
    151013974U,	// AsmJLHAltCLGRJ
    16796334U,	// AsmJLHAltCLGRT
    448809414U,	// AsmJLHAltCLIB
    583027263U,	// AsmJLHAltCLIJ
    2298497510U,	// AsmJLHAltCLRB
    151013983U,	// AsmJLHAltCLRJ
    16796343U,	// AsmJLHAltCLRT
    2298497486U,	// AsmJLHAltCRB
    151013959U,	// AsmJLHAltCRJ
    16796319U,	// AsmJLHAltCRT
    436228516U,	// AsmJLHCGIB
    570446412U,	// AsmJLHCGIJ
    37770245U,	// AsmJLHCGIT
    2298499524U,	// AsmJLHCGRB
    151016044U,	// AsmJLHCGRJ
    16798749U,	// AsmJLHCGRT
    436228509U,	// AsmJLHCIB
    570446405U,	// AsmJLHCIJ
    37770229U,	// AsmJLHCIT
    41964540U,	// AsmJLHCLFIT
    448811436U,	// AsmJLHCLGIB
    583029332U,	// AsmJLHCLGIJ
    41964557U,	// AsmJLHCLGIT
    2298499532U,	// AsmJLHCLGRB
    151016052U,	// AsmJLHCLGRJ
    16798757U,	// AsmJLHCLGRT
    448811445U,	// AsmJLHCLIB
    583029341U,	// AsmJLHCLIJ
    2298499541U,	// AsmJLHCLRB
    151016061U,	// AsmJLHCLRJ
    16798766U,	// AsmJLHCLRT
    2298499517U,	// AsmJLHCRB
    151016037U,	// AsmJLHCRJ
    16798742U,	// AsmJLHCRT
    1073311U,	// AsmLAltBR
    72534U,	// AsmLAltJ
    72512U,	// AsmLAltJG
    50354980U,	// AsmLAltLOC
    50354993U,	// AsmLAltLOCG
    12606285U,	// AsmLAltLOCGHI
    4217793U,	// AsmLAltLOCGR
    12606277U,	// AsmLAltLOCHI
    4217779U,	// AsmLAltLOCR
    54549290U,	// AsmLAltSTOC
    54549304U,	// AsmLAltSTOCG
    1073280U,	// AsmLBR
    1073005U,	// AsmLEBR
    67570U,	// AsmLEJ
    67543U,	// AsmLEJG
    50350000U,	// AsmLELOC
    50350022U,	// AsmLELOCG
    12601318U,	// AsmLELOCGHI
    4213092U,	// AsmLELOCGR
    12601309U,	// AsmLELOCHI
    4213084U,	// AsmLELOCR
    54544311U,	// AsmLESTOC
    54544334U,	// AsmLESTOCG
    1073250U,	// AsmLHBR
    70215U,	// AsmLHJ
    70148U,	// AsmLHJG
    50352612U,	// AsmLHLOC
    50352627U,	// AsmLHLOCG
    12603938U,	// AsmLHLOCGHI
    4215766U,	// AsmLHLOCGR
    12603929U,	// AsmLHLOCHI
    4215758U,	// AsmLHLOCR
    54546923U,	// AsmLHSTOC
    54546939U,	// AsmLHSTOCG
    71888U,	// AsmLJ
    71833U,	// AsmLJG
    50354285U,	// AsmLLOC
    50354314U,	// AsmLLOCG
    12605637U,	// AsmLLOCGHI
    4217450U,	// AsmLLOCGR
    12605629U,	// AsmLLOCHI
    4217413U,	// AsmLLOCR
    2332050516U,	// AsmLOC
    2332053004U,	// AsmLOCG
    146822899U,	// AsmLOCGHI
    138436602U,	// AsmLOCGR
    146822886U,	// AsmLOCHI
    138436413U,	// AsmLOCR
    54548595U,	// AsmLSTOC
    54548625U,	// AsmLSTOCG
    1073392U,	// AsmNEAltBR
    74844U,	// AsmNEAltJ
    74819U,	// AsmNEAltJG
    50357283U,	// AsmNEAltLOC
    50357298U,	// AsmNEAltLOCG
    12608594U,	// AsmNEAltLOCGHI
    4220009U,	// AsmNEAltLOCGR
    12608585U,	// AsmNEAltLOCHI
    4220001U,	// AsmNEAltLOCR
    54551594U,	// AsmNEAltSTOC
    54551610U,	// AsmNEAltSTOCG
    1073018U,	// AsmNEBR
    68137U,	// AsmNEJ
    68110U,	// AsmNEJG
    50350574U,	// AsmNELOC
    50350589U,	// AsmNELOCG
    12601885U,	// AsmNELOCGHI
    4213365U,	// AsmNELOCGR
    12601876U,	// AsmNELOCHI
    4213357U,	// AsmNELOCR
    54544885U,	// AsmNESTOC
    54544901U,	// AsmNESTOCG
    1073348U,	// AsmNHAltBR
    72979U,	// AsmNHAltJ
    72954U,	// AsmNHAltJG
    50355418U,	// AsmNHAltLOC
    50355433U,	// AsmNHAltLOCG
    12606729U,	// AsmNHAltLOCGHI
    4218144U,	// AsmNHAltLOCGR
    12606720U,	// AsmNHAltLOCHI
    4218136U,	// AsmNHAltLOCR
    54549729U,	// AsmNHAltSTOC
    54549745U,	// AsmNHAltSTOCG
    1073269U,	// AsmNHBR
    1072998U,	// AsmNHEBR
    67116U,	// AsmNHEJ
    67086U,	// AsmNHEJG
    50349546U,	// AsmNHELOC
    50349563U,	// AsmNHELOCG
    12600863U,	// AsmNHELOCGHI
    4212347U,	// AsmNHELOCGR
    12600853U,	// AsmNHELOCHI
    4212338U,	// AsmNHELOCR
    54543858U,	// AsmNHESTOC
    54543876U,	// AsmNHESTOCG
    70885U,	// AsmNHJ
    70858U,	// AsmNHJG
    50353322U,	// AsmNHLOC
    50353337U,	// AsmNHLOCG
    12604633U,	// AsmNHLOCGHI
    4216113U,	// AsmNHLOCGR
    12604624U,	// AsmNHLOCHI
    4216105U,	// AsmNHLOCR
    54547633U,	// AsmNHSTOC
    54547649U,	// AsmNHSTOCG
    1073316U,	// AsmNLAltBR
    72600U,	// AsmNLAltJ
    72575U,	// AsmNLAltJG
    50355039U,	// AsmNLAltLOC
    50355054U,	// AsmNLAltLOCG
    12606350U,	// AsmNLAltLOCGHI
    4217765U,	// AsmNLAltLOCGR
    12606341U,	// AsmNLAltLOCHI
    4217757U,	// AsmNLAltLOCR
    54549350U,	// AsmNLAltSTOC
    54549366U,	// AsmNLAltSTOCG
    1073295U,	// AsmNLBR
    1073011U,	// AsmNLEBR
    67770U,	// AsmNLEJ
    67740U,	// AsmNLEJG
    50350200U,	// AsmNLELOC
    50350217U,	// AsmNLELOCG
    12601517U,	// AsmNLELOCGHI
    4213001U,	// AsmNLELOCGR
    12601507U,	// AsmNLELOCHI
    4212992U,	// AsmNLELOCR
    54544512U,	// AsmNLESTOC
    54544530U,	// AsmNLESTOCG
    1073262U,	// AsmNLHBR
    70437U,	// AsmNLHJ
    70407U,	// AsmNLHJG
    50352867U,	// AsmNLHLOC
    50352884U,	// AsmNLHLOCG
    12604184U,	// AsmNLHLOCGHI
    4215675U,	// AsmNLHLOCGR
    12604174U,	// AsmNLHLOCHI
    4215666U,	// AsmNLHLOCR
    54547179U,	// AsmNLHSTOC
    54547197U,	// AsmNLHSTOCG
    72111U,	// AsmNLJ
    72084U,	// AsmNLJG
    50354548U,	// AsmNLLOC
    50354563U,	// AsmNLLOCG
    12605859U,	// AsmNLLOCGHI
    4217333U,	// AsmNLLOCGR
    12605850U,	// AsmNLLOCHI
    4217325U,	// AsmNLLOCR
    54548859U,	// AsmNLSTOC
    54548875U,	// AsmNLSTOCG
    1073332U,	// AsmNOBR
    72808U,	// AsmNOJ
    72783U,	// AsmNOJG
    50355247U,	// AsmNOLOC
    50355262U,	// AsmNOLOCG
    12606558U,	// AsmNOLOCGHI
    4217973U,	// AsmNOLOCGR
    12606549U,	// AsmNOLOCHI
    4217965U,	// AsmNOLOCR
    54549558U,	// AsmNOSTOC
    54549574U,	// AsmNOSTOCG
    1073327U,	// AsmOBR
    72747U,	// AsmOJ
    72725U,	// AsmOJG
    50355193U,	// AsmOLOC
    50355206U,	// AsmOLOCG
    12606498U,	// AsmOLOCGHI
    4218001U,	// AsmOLOCGR
    12606490U,	// AsmOLOCHI
    4217987U,	// AsmOLOCR
    54549503U,	// AsmOSTOC
    54549517U,	// AsmOSTOCG
    188761177U,	// AsmSTOC
    188763666U,	// AsmSTOCG
    16801994U,	// BASR
    1402077U,	// BCR
    1072503U,	// BR
    58745078U,	// BRAS
    58743498U,	// BRASL
    1664302U,	// BRC
    1664284U,	// BRCL
    62939846U,	// BRCT
    62934865U,	// BRCTG
    67126314U,	// C
    67125417U,	// CDB
    16801148U,	// CDBR
    16801373U,	// CDFBR
    16801418U,	// CDGBR
    205545067U,	// CDLFBR
    205545112U,	// CDLGBR
    67125717U,	// CEB
    16801267U,	// CEBR
    16801380U,	// CEFBR
    16801425U,	// CEGBR
    205545075U,	// CELFBR
    205545120U,	// CELGBR
    71327119U,	// CFDBR
    71327246U,	// CFEBR
    75519644U,	// CFI
    0U,	// CFIMux
    71327448U,	// CFXBR
    67128822U,	// CG
    71327134U,	// CGDBR
    71327261U,	// CGEBR
    67128205U,	// CGF
    75519655U,	// CGFI
    16801698U,	// CGFR
    79714899U,	// CGFRL
    67129487U,	// CGH
    37770997U,	// CGHI
    79714950U,	// CGHRL
    12621643U,	// CGHSI
    85828831U,	// CGIB
    0U,	// CGIBCall
    0U,	// CGIBReturn
    90023216U,	// CGIJ
    2205033U,	// CGIT
    16801781U,	// CGR
    763995379U,	// CGRB
    0U,	// CGRBCall
    0U,	// CGRBReturn
    898213188U,	// CGRJ
    79714924U,	// CGRL
    29992312U,	// CGRT
    71327463U,	// CGXBR
    67129362U,	// CH
    67128289U,	// CHF
    12621658U,	// CHHSI
    37770984U,	// CHI
    79714944U,	// CHRL
    12621629U,	// CHSI
    67134333U,	// CHY
    85828827U,	// CIB
    0U,	// CIBCall
    0U,	// CIBReturn
    75518260U,	// CIH
    90023212U,	// CIJ
    2205023U,	// CIT
    67131503U,	// CL
    115772U,	// CLC
    0U,	// CLCLoop
    0U,	// CLCSequence
    205544854U,	// CLFDBR
    205544981U,	// CLFEBR
    96507715U,	// CLFHSI
    100685519U,	// CLFI
    0U,	// CLFIMux
    2467171U,	// CLFIT
    205545183U,	// CLFXBR
    67128968U,	// CLG
    205544869U,	// CLGDBR
    205544996U,	// CLGEBR
    67128223U,	// CLGF
    100685492U,	// CLGFI
    16801711U,	// CLGFR
    79714906U,	// CLGFRL
    79714957U,	// CLGHRL
    96507730U,	// CLGHSI
    86615268U,	// CLGIB
    0U,	// CLGIBCall
    0U,	// CLGIBReturn
    90809653U,	// CLGIJ
    2467182U,	// CLGIT
    16801805U,	// CLGR
    763995384U,	// CLGRB
    0U,	// CLGRBCall
    0U,	// CLGRBReturn
    898213193U,	// CLGRJ
    79714930U,	// CLGRL
    29992317U,	// CLGRT
    205545198U,	// CLGXBR
    67128333U,	// CLHF
    96507745U,	// CLHHSI
    79714973U,	// CLHRL
    104896293U,	// CLI
    86615274U,	// CLIB
    0U,	// CLIBCall
    0U,	// CLIBReturn
    100684113U,	// CLIH
    90809659U,	// CLIJ
    104899479U,	// CLIY
    0U,	// CLMux
    16801925U,	// CLR
    763995390U,	// CLRB
    0U,	// CLRBCall
    0U,	// CLRBReturn
    898213199U,	// CLRJ
    79714994U,	// CLRL
    29992323U,	// CLRT
    16802577U,	// CLST
    0U,	// CLSTLoop
    67134391U,	// CLY
    0U,	// CMux
    2285920078U,	// CPSDRdd
    2285920078U,	// CPSDRds
    2285920078U,	// CPSDRsd
    2285920078U,	// CPSDRss
    16801574U,	// CR
    763995375U,	// CRB
    0U,	// CRBCall
    0U,	// CRBReturn
    898213184U,	// CRJ
    79714887U,	// CRL
    29992308U,	// CRT
    138437020U,	// CS
    138432302U,	// CSG
    138437594U,	// CSY
    16801476U,	// CXBR
    16801411U,	// CXFBR
    16801456U,	// CXGBR
    205545083U,	// CXLFBR
    205545128U,	// CXLGBR
    67134296U,	// CY
    0U,	// CallBASR
    0U,	// CallBCR
    0U,	// CallBR
    0U,	// CallBRASL
    0U,	// CallBRCL
    0U,	// CallJG
    0U,	// CondReturn
    0U,	// CondStore16
    0U,	// CondStore16Inv
    0U,	// CondStore16Mux
    0U,	// CondStore16MuxInv
    0U,	// CondStore32
    0U,	// CondStore32Inv
    0U,	// CondStore64
    0U,	// CondStore64Inv
    0U,	// CondStore8
    0U,	// CondStore8Inv
    0U,	// CondStore8Mux
    0U,	// CondStore8MuxInv
    0U,	// CondStoreF32
    0U,	// CondStoreF32Inv
    0U,	// CondStoreF64
    0U,	// CondStoreF64Inv
    0U,	// CondTrap
    16582U,	// DDB
    4218242U,	// DDBR
    16860U,	// DEB
    4218362U,	// DEBR
    22656U,	// DL
    20109U,	// DLG
    4218899U,	// DLGR
    4219018U,	// DLR
    20275U,	// DSG
    19385U,	// DSGF
    4218834U,	// DSGFR
    4218936U,	// DSGR
    4218571U,	// DXBR
    109075823U,	// EAR
    1066112U,	// ETND
    67134282U,	// EX
    79715012U,	// EXRL
    71327149U,	// FIDBR
    205537304U,	// FIDBRA
    71327276U,	// FIEBR
    205537312U,	// FIEBRA
    71327478U,	// FIXBR
    205537336U,	// FIXBRA
    16801835U,	// FLOGR
    0U,	// GOT
    17459U,	// IC
    17459U,	// IC32
    25431U,	// IC32Y
    113269535U,	// ICM
    113267773U,	// ICMH
    113271745U,	// ICMY
    25431U,	// ICY
    0U,	// IIFMux
    100682726U,	// IIHF
    0U,	// IIHF64
    96489681U,	// IIHH
    0U,	// IIHH64
    96491678U,	// IIHL
    0U,	// IIHL64
    0U,	// IIHMux
    100682871U,	// IILF
    0U,	// IILF64
    96490028U,	// IILH
    0U,	// IILH64
    96491782U,	// IILL
    0U,	// IILL64
    0U,	// IILMux
    1072046U,	// IPM
    71540U,	// J
    69229U,	// JG
    67131442U,	// L
    0U,	// L128
    67125255U,	// LA
    2298494977U,	// LAA
    2298498486U,	// LAAG
    2298501167U,	// LAAL
    2298498679U,	// LAALG
    2298502107U,	// LAN
    2298498808U,	// LANG
    2298502132U,	// LAO
    2298498820U,	// LAOG
    79714879U,	// LARL
    2298504005U,	// LAX
    2298498971U,	// LAXG
    67134290U,	// LAY
    67125972U,	// LB
    67129326U,	// LBH
    0U,	// LBMux
    16801464U,	// LBR
    2348826722U,	// LCBB
    16801147U,	// LCDBR
    16801670U,	// LCDFR
    16801670U,	// LCDFR_32
    16801266U,	// LCEBR
    16801697U,	// LCGFR
    16801780U,	// LCGR
    16801586U,	// LCR
    16801475U,	// LCXBR
    67126396U,	// LD
    67126480U,	// LDE32
    67125723U,	// LDEB
    16801273U,	// LDEBR
    16801793U,	// LDGR
    16801609U,	// LDR
    16801609U,	// LDR32
    16801482U,	// LDXBR
    205537320U,	// LDXBRA
    67134306U,	// LDY
    67127155U,	// LE
    16801160U,	// LEDBR
    205537296U,	// LEDBRA
    0U,	// LEFR
    16801646U,	// LER
    16801489U,	// LEXBR
    205537328U,	// LEXBRA
    67134317U,	// LEY
    0U,	// LFER
    67129474U,	// LFH
    67128954U,	// LG
    67125839U,	// LGB
    16801434U,	// LGBR
    16801603U,	// LGDR
    67128218U,	// LGF
    75519662U,	// LGFI
    16801705U,	// LGFR
    79714907U,	// LGFRL
    67129513U,	// LGH
    37771003U,	// LGHI
    16801884U,	// LGHR
    79714958U,	// LGHRL
    16801800U,	// LGR
    79714931U,	// LGRL
    67129760U,	// LH
    67129581U,	// LHH
    37771029U,	// LHI
    0U,	// LHIMux
    0U,	// LHMux
    16801891U,	// LHR
    79714974U,	// LHRL
    67134338U,	// LHY
    67126337U,	// LLC
    67129372U,	// LLCH
    0U,	// LLCMux
    16801591U,	// LLCR
    0U,	// LLCRMux
    67126317U,	// LLGC
    16801578U,	// LLGCR
    67128229U,	// LLGF
    16801718U,	// LLGFR
    79714914U,	// LLGFRL
    67129512U,	// LLGH
    16801883U,	// LLGHR
    79714965U,	// LLGHRL
    67129992U,	// LLH
    67129586U,	// LLHH
    0U,	// LLHMux
    16801896U,	// LLHR
    79714980U,	// LLHRL
    0U,	// LLHRMux
    100682732U,	// LLIHF
    41963735U,	// LLIHH
    41965732U,	// LLIHL
    100682877U,	// LLILF
    41964082U,	// LLILH
    41965836U,	// LLILL
    2298501979U,	// LM
    2298498797U,	// LMG
    2298500184U,	// LMH
    2298504135U,	// LMY
    0U,	// LMux
    16801210U,	// LNDBR
    16801677U,	// LNDFR
    16801677U,	// LNDFR_32
    16801331U,	// LNEBR
    16801732U,	// LNGFR
    16801829U,	// LNGR
    16801962U,	// LNR
    16801539U,	// LNXBR
    140547U,	// LOC
    140561U,	// LOCG
    2254117U,	// LOCGHI
    30041433U,	// LOCGR
    2254111U,	// LOCHI
    30041428U,	// LOCR
    16801217U,	// LPDBR
    16801684U,	// LPDFR
    16801684U,	// LPDFR_32
    16801338U,	// LPEBR
    16801739U,	// LPGFR
    16801842U,	// LPGR
    16801983U,	// LPR
    16801546U,	// LPXBR
    16801916U,	// LR
    79714995U,	// LRL
    0U,	// LRMux
    67134243U,	// LRV
    67129230U,	// LRVG
    16801866U,	// LRVGR
    67130950U,	// LRVH
    16802010U,	// LRVR
    67134181U,	// LT
    16801238U,	// LTDBR
    16801238U,	// LTDBRCompare
    0U,	// LTDBRCompare_VecPseudo
    16801359U,	// LTEBR
    16801359U,	// LTEBRCompare
    0U,	// LTEBRCompare_VecPseudo
    67129176U,	// LTG
    67128261U,	// LTGF
    16801760U,	// LTGFR
    16801860U,	// LTGR
    16802005U,	// LTR
    16801566U,	// LTXBR
    16801566U,	// LTXBRCompare
    0U,	// LTXBRCompare_VecPseudo
    0U,	// LX
    67125690U,	// LXDB
    16801245U,	// LXDBR
    67125809U,	// LXEB
    16801366U,	// LXEBR
    16802016U,	// LXR
    67134387U,	// LY
    1072981U,	// LZDR
    1073024U,	// LZER
    1073381U,	// LZXR
    138428569U,	// MADB
    2285919604U,	// MADBR
    138428878U,	// MAEB
    2285919723U,	// MAEBR
    16736U,	// MDB
    4218292U,	// MDBR
    16872U,	// MDEB
    4218368U,	// MDEBR
    16885U,	// MEEB
    4218375U,	// MEEBR
    12605185U,	// MGHI
    21567U,	// MH
    12605210U,	// MHI
    25479U,	// MHY
    20143U,	// MLG
    4218905U,	// MLGR
    25274U,	// MS
    138428844U,	// MSDB
    2285919695U,	// MSDBR
    138428964U,	// MSEB
    2285919816U,	// MSEBR
    8410843U,	// MSFI
    20295U,	// MSG
    19391U,	// MSGF
    8410818U,	// MSGFI
    4218841U,	// MSGFR
    4218942U,	// MSGR
    4219088U,	// MSR
    25567U,	// MSY
    115817U,	// MVC
    0U,	// MVCLoop
    0U,	// MVCSequence
    12621575U,	// MVGHI
    12621582U,	// MVHHI
    12621599U,	// MVHI
    104896361U,	// MVI
    104899495U,	// MVIY
    16802589U,	// MVST
    0U,	// MVSTLoop
    4218621U,	// MXBR
    16832U,	// MXDB
    4218340U,	// MXDBR
    0U,	// MemBarrier
    23517U,	// N
    115787U,	// NC
    0U,	// NCLoop
    0U,	// NCSequence
    20218U,	// NG
    4218918U,	// NGR
    2298501111U,	// NGRK
    104896298U,	// NI
    0U,	// NIFMux
    25185267U,	// NIHF
    0U,	// NIHF64
    96489694U,	// NIHH
    0U,	// NIHH64
    96491691U,	// NIHL
    0U,	// NIHL64
    0U,	// NIHMux
    25185412U,	// NILF
    0U,	// NILF64
    96490041U,	// NILH
    0U,	// NILH64
    96491795U,	// NILL
    0U,	// NILL64
    0U,	// NILMux
    104899485U,	// NIY
    4219051U,	// NR
    2298501147U,	// NRK
    67129181U,	// NTSTG
    25554U,	// NY
    23542U,	// O
    115797U,	// OC
    0U,	// OCLoop
    0U,	// OCSequence
    20230U,	// OG
    4218925U,	// OGR
    2298501117U,	// OGRK
    104896302U,	// OI
    0U,	// OIFMux
    25185273U,	// OIHF
    0U,	// OIHF64
    96489700U,	// OIHH
    0U,	// OIHH64
    96491697U,	// OIHL
    0U,	// OIHL64
    0U,	// OIHMux
    25185418U,	// OILF
    0U,	// OILF64
    96490047U,	// OILH
    0U,	// OILH64
    96491801U,	// OILL
    0U,	// OILL64
    0U,	// OILMux
    104899490U,	// OIY
    4219056U,	// OR
    2298501152U,	// ORK
    25558U,	// OY
    312439U,	// PFD
    842316U,	// PFDRL
    16802537U,	// POPCNT
    151011339U,	// PPA
    138431959U,	// RISBG
    138431959U,	// RISBG32
    138435552U,	// RISBGN
    138432065U,	// RISBHG
    0U,	// RISBHH
    0U,	// RISBHL
    138432126U,	// RISBLG
    0U,	// RISBLH
    0U,	// RISBLL
    0U,	// RISBMux
    2298501413U,	// RLL
    2298498723U,	// RLLG
    138431966U,	// RNSBG
    138431973U,	// ROSBG
    138431980U,	// RXSBG
    0U,	// Return
    24825U,	// S
    16798U,	// SDB
    4218320U,	// SDBR
    16933U,	// SEB
    4218441U,	// SEBR
    20271U,	// SG
    19386U,	// SGF
    4218835U,	// SGFR
    4218937U,	// SGR
    2298501123U,	// SGRK
    21965U,	// SH
    25484U,	// SHY
    23245U,	// SL
    50348038U,	// SLA
    2298501026U,	// SLAK
    17194U,	// SLB
    19921U,	// SLBG
    4218860U,	// SLBGR
    4218551U,	// SLBR
    25188053U,	// SLFI
    20172U,	// SLG
    19371U,	// SLGF
    25188027U,	// SLGFI
    4218813U,	// SLGFR
    4218911U,	// SLGR
    2298501104U,	// SLGRK
    50354474U,	// SLL
    2298498729U,	// SLLG
    2298501074U,	// SLLK
    4219029U,	// SLR
    2298501141U,	// SLRK
    25532U,	// SLY
    67125646U,	// SQDB
    16801224U,	// SQDBR
    67125790U,	// SQEB
    16801345U,	// SQEBR
    16801553U,	// SQXBR
    4219084U,	// SR
    50348097U,	// SRA
    2298498502U,	// SRAG
    2298501032U,	// SRAK
    2298501157U,	// SRK
    50354873U,	// SRL
    2298498756U,	// SRLG
    2298501080U,	// SRLK
    16802583U,	// SRST
    0U,	// SRSTLoop
    67134227U,	// ST
    0U,	// ST128
    67126372U,	// STC
    67129405U,	// STCH
    1087406U,	// STCK
    1083241U,	// STCKE
    1084493U,	// STCKF
    0U,	// STCMux
    67134300U,	// STCY
    67126406U,	// STD
    67134311U,	// STDY
    67128071U,	// STE
    67134322U,	// STEY
    67129479U,	// STFH
    1083327U,	// STFLE
    67129183U,	// STG
    79714937U,	// STGRL
    67130903U,	// STH
    67129633U,	// STHH
    0U,	// STHMux
    79714987U,	// STHRL
    67134353U,	// STHY
    2298502097U,	// STM
    2298498802U,	// STMG
    2298500189U,	// STMH
    2298504140U,	// STMY
    0U,	// STMux
    173319U,	// STOC
    173334U,	// STOCG
    79715006U,	// STRL
    67134248U,	// STRV
    67129236U,	// STRVG
    67130956U,	// STRVH
    0U,	// STX
    67134436U,	// STY
    181358U,	// SVC
    4218648U,	// SXBR
    25563U,	// SY
    0U,	// Select32
    0U,	// Select32Mux
    0U,	// Select64
    0U,	// SelectF128
    0U,	// SelectF32
    0U,	// SelectF64
    0U,	// Serialize
    1090313U,	// TABORT
    96508904U,	// TBEGIN
    96502854U,	// TBEGINC
    0U,	// TBEGIN_nofloat
    67125438U,	// TCDB
    67125716U,	// TCEB
    67126245U,	// TCXB
    9484U,	// TEND
    0U,	// TLS_GDCALL
    0U,	// TLS_LDCALL
    104897490U,	// TM
    41963783U,	// TMHH
    0U,	// TMHH64
    41965751U,	// TMHL
    0U,	// TMHL64
    0U,	// TMHMux
    41964181U,	// TMLH
    0U,	// TMLH64
    41965855U,	// TMLL
    0U,	// TMLL64
    0U,	// TMLMux
    104899533U,	// TMY
    0U,	// Trap
    2298495069U,	// VAB
    2298495086U,	// VACCB
    2298502474U,	// VACCCQ
    2298497825U,	// VACCF
    2298498547U,	// VACCG
    2298499087U,	// VACCH
    2298502467U,	// VACCQ
    2298502461U,	// VACQ
    2298497820U,	// VAF
    2298498508U,	// VAG
    2298499021U,	// VAH
    2298502456U,	// VAQ
    2298495580U,	// VAVGB
    2298497995U,	// VAVGF
    2298498611U,	// VAVGG
    2298499254U,	// VAVGH
    2298495711U,	// VAVGLB
    2298498152U,	// VAVGLF
    2298498706U,	// VAVGLG
    2298499594U,	// VAVGLH
    151011895U,	// VCDGB
    151011916U,	// VCDLGB
    2298495887U,	// VCEQB
    2298503525U,	// VCEQBS
    2298498339U,	// VCEQF
    2298503633U,	// VCEQFS
    2298498847U,	// VCEQG
    2298503720U,	// VCEQGS
    2298500524U,	// VCEQH
    2298503794U,	// VCEQHS
    151011586U,	// VCGDB
    2298495601U,	// VCHB
    2298503510U,	// VCHBS
    2298498016U,	// VCHF
    2298503618U,	// VCHFS
    2298498633U,	// VCHG
    2298503705U,	// VCHGS
    2298499275U,	// VCHH
    2298503779U,	// VCHHS
    2298495719U,	// VCHLB
    2298503517U,	// VCHLBS
    2298498160U,	// VCHLF
    2298503625U,	// VCHLFS
    2298498714U,	// VCHLG
    2298503712U,	// VCHLGS
    2298499602U,	// VCHLH
    2298503786U,	// VCHLHS
    2298502089U,	// VCKSM
    151011600U,	// VCLGDB
    16794651U,	// VCLZB
    16797096U,	// VCLZF
    16797615U,	// VCLZG
    16799363U,	// VCLZH
    16794658U,	// VCTZB
    16797103U,	// VCTZF
    16797622U,	// VCTZG
    16799370U,	// VCTZH
    16793717U,	// VECB
    16796456U,	// VECF
    16797178U,	// VECG
    16797718U,	// VECH
    16794328U,	// VECLB
    16796769U,	// VECLF
    16797318U,	// VECLG
    16798173U,	// VECLH
    2285912905U,	// VERIMB
    2285915364U,	// VERIMF
    2285915877U,	// VERIMG
    2285917264U,	// VERIMH
    2298495734U,	// VERLLB
    2298498206U,	// VERLLF
    2298498721U,	// VERLLG
    2298499725U,	// VERLLH
    2298495947U,	// VERLLVB
    2298498398U,	// VERLLVF
    2298498932U,	// VERLLVG
    2298500652U,	// VERLLVH
    2298495784U,	// VESLB
    2298498249U,	// VESLF
    2298498762U,	// VESLG
    2298500078U,	// VESLH
    2298495965U,	// VESLVB
    2298498416U,	// VESLVF
    2298498950U,	// VESLVG
    2298500670U,	// VESLVH
    2298495054U,	// VESRAB
    2298497812U,	// VESRAF
    2298498500U,	// VESRAG
    2298499013U,	// VESRAH
    2298495931U,	// VESRAVB
    2298498382U,	// VESRAVF
    2298498916U,	// VESRAVG
    2298500636U,	// VESRAVH
    2298495769U,	// VESRLB
    2298498241U,	// VESRLF
    2298498754U,	// VESRLG
    2298500070U,	// VESRLH
    2298495956U,	// VESRLVB
    2298498407U,	// VESRLVF
    2298498941U,	// VESRLVG
    2298500661U,	// VESRLVH
    2298495113U,	// VFADB
    2298495430U,	// VFAEB
    2298503485U,	// VFAEBS
    2298497852U,	// VFAEF
    2298503593U,	// VFAEFS
    2298499139U,	// VFAEH
    2298503754U,	// VFAEHS
    2298495994U,	// VFAEZB
    2298503552U,	// VFAEZBS
    2298498439U,	// VFAEZF
    2298503677U,	// VFAEZFS
    2298500706U,	// VFAEZH
    2298503838U,	// VFAEZHS
    2298495186U,	// VFCEDB
    2298503429U,	// VFCEDBS
    2298495264U,	// VFCHDB
    2298503467U,	// VFCHDBS
    2298495202U,	// VFCHEDB
    2298503447U,	// VFCHEDBS
    2298495172U,	// VFDDB
    2298495470U,	// VFEEB
    2298503493U,	// VFEEBS
    2298497873U,	// VFEEF
    2298503601U,	// VFEEFS
    2298499153U,	// VFEEH
    2298503762U,	// VFEEHS
    2298496002U,	// VFEEZB
    2298503561U,	// VFEEZBS
    2298498447U,	// VFEEZF
    2298503686U,	// VFEEZFS
    2298500714U,	// VFEEZH
    2298503847U,	// VFEEZHS
    2298495510U,	// VFENEB
    2298503501U,	// VFENEBS
    2298497913U,	// VFENEF
    2298503609U,	// VFENEFS
    2298499187U,	// VFENEH
    2298503770U,	// VFENEHS
    2298496018U,	// VFENEZB
    2298503570U,	// VFENEZBS
    2298498463U,	// VFENEZF
    2298503695U,	// VFENEZFS
    2298500730U,	// VFENEZH
    2298503856U,	// VFENEZHS
    151011650U,	// VFIDB
    16793774U,	// VFLCDB
    16793964U,	// VFLNDB
    16793980U,	// VFLPDB
    2298495127U,	// VFMADB
    2298495326U,	// VFMDB
    2298495402U,	// VFMSDB
    2298495388U,	// VFSDB
    16793996U,	// VFSQDB
    2298495280U,	// VFTCIDB
    41966361U,	// VGBM
    1056983896U,	// VGEF
    1191202336U,	// VGEG
    2298495046U,	// VGFMAB
    2298497804U,	// VGFMAF
    2298498492U,	// VGFMAG
    2298499005U,	// VGFMAH
    2298495804U,	// VGFMB
    2298498263U,	// VGFMF
    2298498776U,	// VGFMG
    2298500163U,	// VGFMH
    1254114115U,	// VGMB
    1254116574U,	// VGMF
    1254117087U,	// VGMG
    1254118474U,	// VGMH
    16794542U,	// VISTRB
    16802157U,	// VISTRBS
    16796978U,	// VISTRF
    16802265U,	// VISTRFS
    16799170U,	// VISTRH
    16802426U,	// VISTRHS
    67132181U,	// VL
    0U,	// VL32
    0U,	// VL64
    2348826728U,	// VLBB
    16793723U,	// VLCB
    16796462U,	// VLCF
    16797190U,	// VLCG
    16797730U,	// VLCH
    16794074U,	// VLDEB
    134234634U,	// VLEB
    151011572U,	// VLEDB
    2281720685U,	// VLEF
    134237734U,	// VLEG
    2281721959U,	// VLEH
    146817711U,	// VLEIB
    146820158U,	// VLEIF
    2294304350U,	// VLEIG
    146821433U,	// VLEIH
    2298495940U,	// VLGVB
    2298498391U,	// VLGVF
    2298498925U,	// VLGVG
    2298500645U,	// VLGVH
    2298501423U,	// VLL
    67126282U,	// VLLEZB
    67128727U,	// VLLEZF
    67129255U,	// VLLEZG
    67130994U,	// VLLEZH
    2298501978U,	// VLM
    16794505U,	// VLPB
    16796957U,	// VLPF
    16797465U,	// VLPG
    16799142U,	// VLPH
    16801946U,	// VLR
    0U,	// VLR32
    0U,	// VLR64
    67126138U,	// VLREPB
    67128590U,	// VLREPF
    67129098U,	// VLREPG
    67130775U,	// VLREPH
    138429027U,	// VLVGB
    138431442U,	// VLVGF
    138432058U,	// VLVGG
    138432701U,	// VLVGH
    2298502334U,	// VLVGP
    0U,	// VLVGP32
    2298495437U,	// VMAEB
    2298497859U,	// VMAEF
    2298499146U,	// VMAEH
    2298495594U,	// VMAHB
    2298498009U,	// VMAHF
    2298499268U,	// VMAHH
    2298495697U,	// VMALB
    2298495483U,	// VMALEB
    2298497886U,	// VMALEF
    2298499160U,	// VMALEH
    2298498138U,	// VMALF
    2298495607U,	// VMALHB
    2298498053U,	// VMALHF
    2298499306U,	// VMALHH
    2298503982U,	// VMALHW
    2298495845U,	// VMALOB
    2298498297U,	// VMALOF
    2298500482U,	// VMALOH
    2298495838U,	// VMAOB
    2298498290U,	// VMAOF
    2298500475U,	// VMAOH
    2298495504U,	// VMEB
    2298497907U,	// VMEF
    2298499181U,	// VMEH
    2298495630U,	// VMHB
    2298498082U,	// VMHF
    2298499341U,	// VMHH
    2298495742U,	// VMLB
    2298495491U,	// VMLEB
    2298497894U,	// VMLEF
    2298499168U,	// VMLEH
    2298498214U,	// VMLF
    2298495615U,	// VMLHB
    2298498067U,	// VMLHF
    2298499320U,	// VMLHH
    2298503990U,	// VMLHW
    2298495853U,	// VMLOB
    2298498305U,	// VMLOF
    2298500490U,	// VMLOH
    2298495832U,	// VMNB
    2298498284U,	// VMNF
    2298498814U,	// VMNG
    2298500387U,	// VMNH
    2298495748U,	// VMNLB
    2298498220U,	// VMNLF
    2298498740U,	// VMNLG
    2298499947U,	// VMNLH
    2298495860U,	// VMOB
    2298498312U,	// VMOF
    2298500497U,	// VMOH
    2298495643U,	// VMRHB
    2298498095U,	// VMRHF
    2298498639U,	// VMRHG
    2298499354U,	// VMRHH
    2298495762U,	// VMRLB
    2298498234U,	// VMRLF
    2298498747U,	// VMRLG
    2298500063U,	// VMRLH
    2298495979U,	// VMXB
    2298498424U,	// VMXF
    2298498977U,	// VMXG
    2298500691U,	// VMXH
    2298495797U,	// VMXLB
    2298498256U,	// VMXLF
    2298498769U,	// VMXLG
    2298500150U,	// VMXLH
    2298502128U,	// VN
    2298496079U,	// VNC
    2298502270U,	// VNO
    2298502297U,	// VO
    1067623U,	// VONE
    2298500753U,	// VPDI
    2298502074U,	// VPERM
    2298498132U,	// VPKF
    2298498673U,	// VPKG
    2298499479U,	// VPKH
    2298498369U,	// VPKLSF
    2298503658U,	// VPKLSFS
    2298498879U,	// VPKLSG
    2298503736U,	// VPKLSGS
    2298500561U,	// VPKLSH
    2298503819U,	// VPKLSHS
    2298498362U,	// VPKSF
    2298503650U,	// VPKSFS
    2298498872U,	// VPKSG
    2298503728U,	// VPKSGS
    2298500554U,	// VPKSH
    2298503811U,	// VPKSHS
    151020222U,	// VPOPCT
    2298495874U,	// VREPB
    2298498326U,	// VREPF
    2298498834U,	// VREPG
    2298500511U,	// VREPH
    37765833U,	// VREPIB
    37768261U,	// VREPIF
    37768805U,	// VREPIG
    37769559U,	// VREPIH
    2298495926U,	// VSB
    2298502482U,	// VSBCBIQ
    2298502499U,	// VSBIQ
    2298495650U,	// VSCBIB
    2298498102U,	// VSCBIF
    2298498646U,	// VSCBIG
    2298499372U,	// VSCBIH
    2298502491U,	// VSCBIQ
    1463831370U,	// VSCEF
    1598049817U,	// VSCEG
    16794181U,	// VSEGB
    16796562U,	// VSEGF
    16797852U,	// VSEGH
    2298501252U,	// VSEL
    2298498377U,	// VSF
    2298498892U,	// VSG
    2298500569U,	// VSH
    2298501841U,	// VSL
    2298495791U,	// VSLB
    2298495319U,	// VSLDB
    2298502506U,	// VSQ
    2298495040U,	// VSRA
    2298495062U,	// VSRAB
    2298501816U,	// VSRL
    2298495777U,	// VSRLB
    67134238U,	// VST
    0U,	// VST32
    0U,	// VST64
    2348827178U,	// VSTEB
    201345921U,	// VSTEF
    2348830252U,	// VSTEG
    201347195U,	// VSTEH
    2298501903U,	// VSTL
    2298502096U,	// VSTM
    2298495105U,	// VSTRCB
    2298503420U,	// VSTRCBS
    2298497844U,	// VSTRCF
    2298503584U,	// VSTRCFS
    2298499125U,	// VSTRCH
    2298503745U,	// VSTRCHS
    2298495985U,	// VSTRCZB
    2298503542U,	// VSTRCZBS
    2298498430U,	// VSTRCZF
    2298503667U,	// VSTRCZFS
    2298500697U,	// VSTRCZH
    2298503828U,	// VSTRCZHS
    2298495825U,	// VSUMB
    2298497969U,	// VSUMGF
    2298499246U,	// VSUMGH
    2298500195U,	// VSUMH
    2298498346U,	// VSUMQF
    2298498854U,	// VSUMQG
    16800726U,	// VTM
    16794260U,	// VUPHB
    16796712U,	// VUPHF
    16797971U,	// VUPHH
    16794379U,	// VUPLB
    16796851U,	// VUPLF
    16794246U,	// VUPLHB
    16796698U,	// VUPLHF
    16797951U,	// VUPLHH
    16802621U,	// VUPLHW
    16794350U,	// VUPLLB
    16796822U,	// VUPLLF
    16798341U,	// VUPLLH
    2298504014U,	// VX
    1072266U,	// VZERO
    151011902U,	// WCDGB
    151011924U,	// WCDLGB
    151011593U,	// WCGDB
    151011608U,	// WCLGDB
    2298495120U,	// WFADB
    16793767U,	// WFCDB
    2298495194U,	// WFCEDB
    2298503438U,	// WFCEDBS
    2298495272U,	// WFCHDB
    2298503476U,	// WFCHDBS
    2298495211U,	// WFCHEDB
    2298503457U,	// WFCHEDBS
    2298495179U,	// WFDDB
    151011657U,	// WFIDB
    16793936U,	// WFKDB
    16793782U,	// WFLCDB
    16793972U,	// WFLNDB
    16793988U,	// WFLPDB
    2298495135U,	// WFMADB
    2298495333U,	// WFMDB
    2298495410U,	// WFMSDB
    2298495395U,	// WFSDB
    16794004U,	// WFSQDB
    2298495289U,	// WFTCIDB
    16794081U,	// WLDEB
    151011579U,	// WLEDB
    25415U,	// X
    115827U,	// XC
    0U,	// XCLoop
    0U,	// XCSequence
    20381U,	// XG
    4218961U,	// XGR
    2298501129U,	// XGRK
    104896366U,	// XI
    0U,	// XIFMux
    25185279U,	// XIHF
    0U,	// XIHF64
    25185424U,	// XILF
    0U,	// XILF64
    104899501U,	// XIY
    4219105U,	// XR
    2298501162U,	// XRK
    25577U,	// XY
    0U,	// ZEXT128_32
    0U,	// ZEXT128_64
  };

  static const uint16_t OpInfo1[] = {
    0U,	// PHI
    0U,	// INLINEASM
    0U,	// CFI_INSTRUCTION
    0U,	// EH_LABEL
    0U,	// GC_LABEL
    0U,	// KILL
    0U,	// EXTRACT_SUBREG
    0U,	// INSERT_SUBREG
    0U,	// IMPLICIT_DEF
    0U,	// SUBREG_TO_REG
    0U,	// COPY_TO_REGCLASS
    0U,	// DBG_VALUE
    0U,	// REG_SEQUENCE
    0U,	// COPY
    0U,	// BUNDLE
    0U,	// LIFETIME_START
    0U,	// LIFETIME_END
    0U,	// STACKMAP
    0U,	// PATCHPOINT
    0U,	// LOAD_STACK_GUARD
    0U,	// STATEPOINT
    0U,	// LOCAL_ESCAPE
    0U,	// FAULTING_LOAD_OP
    0U,	// PATCHABLE_OP
    0U,	// PATCHABLE_FUNCTION_ENTER
    0U,	// PATCHABLE_RET
    0U,	// G_ADD
    0U,	// G_OR
    0U,	// G_BR
    0U,	// A
    0U,	// ADB
    0U,	// ADBR
    0U,	// ADJCALLSTACKDOWN
    0U,	// ADJCALLSTACKUP
    0U,	// ADJDYNALLOC
    0U,	// AEB
    0U,	// AEBR
    0U,	// AEXT128_64
    0U,	// AFI
    0U,	// AFIMux
    0U,	// AG
    0U,	// AGF
    0U,	// AGFI
    0U,	// AGFR
    0U,	// AGHI
    0U,	// AGHIK
    0U,	// AGR
    0U,	// AGRK
    0U,	// AGSI
    0U,	// AH
    0U,	// AHI
    0U,	// AHIK
    0U,	// AHIMux
    0U,	// AHIMuxK
    0U,	// AHY
    0U,	// AIH
    0U,	// AL
    0U,	// ALC
    0U,	// ALCG
    0U,	// ALCGR
    0U,	// ALCR
    0U,	// ALFI
    0U,	// ALG
    0U,	// ALGF
    0U,	// ALGFI
    0U,	// ALGFR
    0U,	// ALGHSIK
    0U,	// ALGR
    0U,	// ALGRK
    0U,	// ALHSIK
    0U,	// ALR
    0U,	// ALRK
    0U,	// ALY
    0U,	// AR
    0U,	// ARK
    0U,	// ASI
    0U,	// ATOMIC_CMP_SWAPW
    0U,	// ATOMIC_LOADW_AFI
    0U,	// ATOMIC_LOADW_AR
    0U,	// ATOMIC_LOADW_MAX
    0U,	// ATOMIC_LOADW_MIN
    0U,	// ATOMIC_LOADW_NILH
    0U,	// ATOMIC_LOADW_NILHi
    0U,	// ATOMIC_LOADW_NR
    0U,	// ATOMIC_LOADW_NRi
    0U,	// ATOMIC_LOADW_OILH
    0U,	// ATOMIC_LOADW_OR
    0U,	// ATOMIC_LOADW_SR
    0U,	// ATOMIC_LOADW_UMAX
    0U,	// ATOMIC_LOADW_UMIN
    0U,	// ATOMIC_LOADW_XILF
    0U,	// ATOMIC_LOADW_XR
    0U,	// ATOMIC_LOAD_AFI
    0U,	// ATOMIC_LOAD_AGFI
    0U,	// ATOMIC_LOAD_AGHI
    0U,	// ATOMIC_LOAD_AGR
    0U,	// ATOMIC_LOAD_AHI
    0U,	// ATOMIC_LOAD_AR
    0U,	// ATOMIC_LOAD_MAX_32
    0U,	// ATOMIC_LOAD_MAX_64
    0U,	// ATOMIC_LOAD_MIN_32
    0U,	// ATOMIC_LOAD_MIN_64
    0U,	// ATOMIC_LOAD_NGR
    0U,	// ATOMIC_LOAD_NGRi
    0U,	// ATOMIC_LOAD_NIHF64
    0U,	// ATOMIC_LOAD_NIHF64i
    0U,	// ATOMIC_LOAD_NIHH64
    0U,	// ATOMIC_LOAD_NIHH64i
    0U,	// ATOMIC_LOAD_NIHL64
    0U,	// ATOMIC_LOAD_NIHL64i
    0U,	// ATOMIC_LOAD_NILF
    0U,	// ATOMIC_LOAD_NILF64
    0U,	// ATOMIC_LOAD_NILF64i
    0U,	// ATOMIC_LOAD_NILFi
    0U,	// ATOMIC_LOAD_NILH
    0U,	// ATOMIC_LOAD_NILH64
    0U,	// ATOMIC_LOAD_NILH64i
    0U,	// ATOMIC_LOAD_NILHi
    0U,	// ATOMIC_LOAD_NILL
    0U,	// ATOMIC_LOAD_NILL64
    0U,	// ATOMIC_LOAD_NILL64i
    0U,	// ATOMIC_LOAD_NILLi
    0U,	// ATOMIC_LOAD_NR
    0U,	// ATOMIC_LOAD_NRi
    0U,	// ATOMIC_LOAD_OGR
    0U,	// ATOMIC_LOAD_OIHF64
    0U,	// ATOMIC_LOAD_OIHH64
    0U,	// ATOMIC_LOAD_OIHL64
    0U,	// ATOMIC_LOAD_OILF
    0U,	// ATOMIC_LOAD_OILF64
    0U,	// ATOMIC_LOAD_OILH
    0U,	// ATOMIC_LOAD_OILH64
    0U,	// ATOMIC_LOAD_OILL
    0U,	// ATOMIC_LOAD_OILL64
    0U,	// ATOMIC_LOAD_OR
    0U,	// ATOMIC_LOAD_SGR
    0U,	// ATOMIC_LOAD_SR
    0U,	// ATOMIC_LOAD_UMAX_32
    0U,	// ATOMIC_LOAD_UMAX_64
    0U,	// ATOMIC_LOAD_UMIN_32
    0U,	// ATOMIC_LOAD_UMIN_64
    0U,	// ATOMIC_LOAD_XGR
    0U,	// ATOMIC_LOAD_XIHF64
    0U,	// ATOMIC_LOAD_XILF
    0U,	// ATOMIC_LOAD_XILF64
    0U,	// ATOMIC_LOAD_XR
    0U,	// ATOMIC_SWAPW
    0U,	// ATOMIC_SWAP_32
    0U,	// ATOMIC_SWAP_64
    0U,	// AXBR
    0U,	// AY
    0U,	// AsmBC
    0U,	// AsmBCR
    0U,	// AsmBRC
    0U,	// AsmBRCL
    1U,	// AsmCGIB
    1U,	// AsmCGIJ
    2U,	// AsmCGIT
    18U,	// AsmCGRB
    50U,	// AsmCGRJ
    2U,	// AsmCGRT
    1U,	// AsmCIB
    1U,	// AsmCIJ
    2U,	// AsmCIT
    2U,	// AsmCLFIT
    1U,	// AsmCLGIB
    1U,	// AsmCLGIJ
    2U,	// AsmCLGIT
    18U,	// AsmCLGRB
    50U,	// AsmCLGRJ
    2U,	// AsmCLGRT
    1U,	// AsmCLIB
    1U,	// AsmCLIJ
    18U,	// AsmCLRB
    50U,	// AsmCLRJ
    2U,	// AsmCLRT
    18U,	// AsmCRB
    50U,	// AsmCRJ
    2U,	// AsmCRT
    0U,	// AsmEAltBR
    0U,	// AsmEAltJ
    0U,	// AsmEAltJG
    0U,	// AsmEAltLOC
    0U,	// AsmEAltLOCG
    0U,	// AsmEAltLOCGHI
    0U,	// AsmEAltLOCGR
    0U,	// AsmEAltLOCHI
    0U,	// AsmEAltLOCR
    0U,	// AsmEAltSTOC
    0U,	// AsmEAltSTOCG
    0U,	// AsmEBR
    0U,	// AsmEJ
    0U,	// AsmEJG
    0U,	// AsmELOC
    0U,	// AsmELOCG
    0U,	// AsmELOCGHI
    0U,	// AsmELOCGR
    0U,	// AsmELOCHI
    0U,	// AsmELOCR
    0U,	// AsmESTOC
    0U,	// AsmESTOCG
    0U,	// AsmHAltBR
    0U,	// AsmHAltJ
    0U,	// AsmHAltJG
    0U,	// AsmHAltLOC
    0U,	// AsmHAltLOCG
    0U,	// AsmHAltLOCGHI
    0U,	// AsmHAltLOCGR
    0U,	// AsmHAltLOCHI
    0U,	// AsmHAltLOCR
    0U,	// AsmHAltSTOC
    0U,	// AsmHAltSTOCG
    0U,	// AsmHBR
    0U,	// AsmHEBR
    0U,	// AsmHEJ
    0U,	// AsmHEJG
    0U,	// AsmHELOC
    0U,	// AsmHELOCG
    0U,	// AsmHELOCGHI
    0U,	// AsmHELOCGR
    0U,	// AsmHELOCHI
    0U,	// AsmHELOCR
    0U,	// AsmHESTOC
    0U,	// AsmHESTOCG
    0U,	// AsmHJ
    0U,	// AsmHJG
    0U,	// AsmHLOC
    0U,	// AsmHLOCG
    0U,	// AsmHLOCGHI
    0U,	// AsmHLOCGR
    0U,	// AsmHLOCHI
    0U,	// AsmHLOCR
    0U,	// AsmHSTOC
    0U,	// AsmHSTOCG
    0U,	// AsmJEAltCGIB
    0U,	// AsmJEAltCGIJ
    0U,	// AsmJEAltCGIT
    2U,	// AsmJEAltCGRB
    3U,	// AsmJEAltCGRJ
    0U,	// AsmJEAltCGRT
    0U,	// AsmJEAltCIB
    0U,	// AsmJEAltCIJ
    0U,	// AsmJEAltCIT
    0U,	// AsmJEAltCLFIT
    0U,	// AsmJEAltCLGIB
    0U,	// AsmJEAltCLGIJ
    0U,	// AsmJEAltCLGIT
    2U,	// AsmJEAltCLGRB
    3U,	// AsmJEAltCLGRJ
    0U,	// AsmJEAltCLGRT
    0U,	// AsmJEAltCLIB
    0U,	// AsmJEAltCLIJ
    2U,	// AsmJEAltCLRB
    3U,	// AsmJEAltCLRJ
    0U,	// AsmJEAltCLRT
    2U,	// AsmJEAltCRB
    3U,	// AsmJEAltCRJ
    0U,	// AsmJEAltCRT
    0U,	// AsmJECGIB
    0U,	// AsmJECGIJ
    0U,	// AsmJECGIT
    2U,	// AsmJECGRB
    3U,	// AsmJECGRJ
    0U,	// AsmJECGRT
    0U,	// AsmJECIB
    0U,	// AsmJECIJ
    0U,	// AsmJECIT
    0U,	// AsmJECLFIT
    0U,	// AsmJECLGIB
    0U,	// AsmJECLGIJ
    0U,	// AsmJECLGIT
    2U,	// AsmJECLGRB
    3U,	// AsmJECLGRJ
    0U,	// AsmJECLGRT
    0U,	// AsmJECLIB
    0U,	// AsmJECLIJ
    2U,	// AsmJECLRB
    3U,	// AsmJECLRJ
    0U,	// AsmJECLRT
    2U,	// AsmJECRB
    3U,	// AsmJECRJ
    0U,	// AsmJECRT
    0U,	// AsmJHAltCGIB
    0U,	// AsmJHAltCGIJ
    0U,	// AsmJHAltCGIT
    2U,	// AsmJHAltCGRB
    3U,	// AsmJHAltCGRJ
    0U,	// AsmJHAltCGRT
    0U,	// AsmJHAltCIB
    0U,	// AsmJHAltCIJ
    0U,	// AsmJHAltCIT
    0U,	// AsmJHAltCLFIT
    0U,	// AsmJHAltCLGIB
    0U,	// AsmJHAltCLGIJ
    0U,	// AsmJHAltCLGIT
    2U,	// AsmJHAltCLGRB
    3U,	// AsmJHAltCLGRJ
    0U,	// AsmJHAltCLGRT
    0U,	// AsmJHAltCLIB
    0U,	// AsmJHAltCLIJ
    2U,	// AsmJHAltCLRB
    3U,	// AsmJHAltCLRJ
    0U,	// AsmJHAltCLRT
    2U,	// AsmJHAltCRB
    3U,	// AsmJHAltCRJ
    0U,	// AsmJHAltCRT
    0U,	// AsmJHCGIB
    0U,	// AsmJHCGIJ
    0U,	// AsmJHCGIT
    2U,	// AsmJHCGRB
    3U,	// AsmJHCGRJ
    0U,	// AsmJHCGRT
    0U,	// AsmJHCIB
    0U,	// AsmJHCIJ
    0U,	// AsmJHCIT
    0U,	// AsmJHCLFIT
    0U,	// AsmJHCLGIB
    0U,	// AsmJHCLGIJ
    0U,	// AsmJHCLGIT
    2U,	// AsmJHCLGRB
    3U,	// AsmJHCLGRJ
    0U,	// AsmJHCLGRT
    0U,	// AsmJHCLIB
    0U,	// AsmJHCLIJ
    2U,	// AsmJHCLRB
    3U,	// AsmJHCLRJ
    0U,	// AsmJHCLRT
    2U,	// AsmJHCRB
    3U,	// AsmJHCRJ
    0U,	// AsmJHCRT
    0U,	// AsmJHEAltCGIB
    0U,	// AsmJHEAltCGIJ
    0U,	// AsmJHEAltCGIT
    2U,	// AsmJHEAltCGRB
    3U,	// AsmJHEAltCGRJ
    0U,	// AsmJHEAltCGRT
    0U,	// AsmJHEAltCIB
    0U,	// AsmJHEAltCIJ
    0U,	// AsmJHEAltCIT
    0U,	// AsmJHEAltCLFIT
    0U,	// AsmJHEAltCLGIB
    0U,	// AsmJHEAltCLGIJ
    0U,	// AsmJHEAltCLGIT
    2U,	// AsmJHEAltCLGRB
    3U,	// AsmJHEAltCLGRJ
    0U,	// AsmJHEAltCLGRT
    0U,	// AsmJHEAltCLIB
    0U,	// AsmJHEAltCLIJ
    2U,	// AsmJHEAltCLRB
    3U,	// AsmJHEAltCLRJ
    0U,	// AsmJHEAltCLRT
    2U,	// AsmJHEAltCRB
    3U,	// AsmJHEAltCRJ
    0U,	// AsmJHEAltCRT
    0U,	// AsmJHECGIB
    0U,	// AsmJHECGIJ
    0U,	// AsmJHECGIT
    2U,	// AsmJHECGRB
    3U,	// AsmJHECGRJ
    0U,	// AsmJHECGRT
    0U,	// AsmJHECIB
    0U,	// AsmJHECIJ
    0U,	// AsmJHECIT
    0U,	// AsmJHECLFIT
    0U,	// AsmJHECLGIB
    0U,	// AsmJHECLGIJ
    0U,	// AsmJHECLGIT
    2U,	// AsmJHECLGRB
    3U,	// AsmJHECLGRJ
    0U,	// AsmJHECLGRT
    0U,	// AsmJHECLIB
    0U,	// AsmJHECLIJ
    2U,	// AsmJHECLRB
    3U,	// AsmJHECLRJ
    0U,	// AsmJHECLRT
    2U,	// AsmJHECRB
    3U,	// AsmJHECRJ
    0U,	// AsmJHECRT
    0U,	// AsmJLAltCGIB
    0U,	// AsmJLAltCGIJ
    0U,	// AsmJLAltCGIT
    2U,	// AsmJLAltCGRB
    3U,	// AsmJLAltCGRJ
    0U,	// AsmJLAltCGRT
    0U,	// AsmJLAltCIB
    0U,	// AsmJLAltCIJ
    0U,	// AsmJLAltCIT
    0U,	// AsmJLAltCLFIT
    0U,	// AsmJLAltCLGIB
    0U,	// AsmJLAltCLGIJ
    0U,	// AsmJLAltCLGIT
    2U,	// AsmJLAltCLGRB
    3U,	// AsmJLAltCLGRJ
    0U,	// AsmJLAltCLGRT
    0U,	// AsmJLAltCLIB
    0U,	// AsmJLAltCLIJ
    2U,	// AsmJLAltCLRB
    3U,	// AsmJLAltCLRJ
    0U,	// AsmJLAltCLRT
    2U,	// AsmJLAltCRB
    3U,	// AsmJLAltCRJ
    0U,	// AsmJLAltCRT
    0U,	// AsmJLCGIB
    0U,	// AsmJLCGIJ
    0U,	// AsmJLCGIT
    2U,	// AsmJLCGRB
    3U,	// AsmJLCGRJ
    0U,	// AsmJLCGRT
    0U,	// AsmJLCIB
    0U,	// AsmJLCIJ
    0U,	// AsmJLCIT
    0U,	// AsmJLCLFIT
    0U,	// AsmJLCLGIB
    0U,	// AsmJLCLGIJ
    0U,	// AsmJLCLGIT
    2U,	// AsmJLCLGRB
    3U,	// AsmJLCLGRJ
    0U,	// AsmJLCLGRT
    0U,	// AsmJLCLIB
    0U,	// AsmJLCLIJ
    2U,	// AsmJLCLRB
    3U,	// AsmJLCLRJ
    0U,	// AsmJLCLRT
    2U,	// AsmJLCRB
    3U,	// AsmJLCRJ
    0U,	// AsmJLCRT
    0U,	// AsmJLEAltCGIB
    0U,	// AsmJLEAltCGIJ
    0U,	// AsmJLEAltCGIT
    2U,	// AsmJLEAltCGRB
    3U,	// AsmJLEAltCGRJ
    0U,	// AsmJLEAltCGRT
    0U,	// AsmJLEAltCIB
    0U,	// AsmJLEAltCIJ
    0U,	// AsmJLEAltCIT
    0U,	// AsmJLEAltCLFIT
    0U,	// AsmJLEAltCLGIB
    0U,	// AsmJLEAltCLGIJ
    0U,	// AsmJLEAltCLGIT
    2U,	// AsmJLEAltCLGRB
    3U,	// AsmJLEAltCLGRJ
    0U,	// AsmJLEAltCLGRT
    0U,	// AsmJLEAltCLIB
    0U,	// AsmJLEAltCLIJ
    2U,	// AsmJLEAltCLRB
    3U,	// AsmJLEAltCLRJ
    0U,	// AsmJLEAltCLRT
    2U,	// AsmJLEAltCRB
    3U,	// AsmJLEAltCRJ
    0U,	// AsmJLEAltCRT
    0U,	// AsmJLECGIB
    0U,	// AsmJLECGIJ
    0U,	// AsmJLECGIT
    2U,	// AsmJLECGRB
    3U,	// AsmJLECGRJ
    0U,	// AsmJLECGRT
    0U,	// AsmJLECIB
    0U,	// AsmJLECIJ
    0U,	// AsmJLECIT
    0U,	// AsmJLECLFIT
    0U,	// AsmJLECLGIB
    0U,	// AsmJLECLGIJ
    0U,	// AsmJLECLGIT
    2U,	// AsmJLECLGRB
    3U,	// AsmJLECLGRJ
    0U,	// AsmJLECLGRT
    0U,	// AsmJLECLIB
    0U,	// AsmJLECLIJ
    2U,	// AsmJLECLRB
    3U,	// AsmJLECLRJ
    0U,	// AsmJLECLRT
    2U,	// AsmJLECRB
    3U,	// AsmJLECRJ
    0U,	// AsmJLECRT
    0U,	// AsmJLHAltCGIB
    0U,	// AsmJLHAltCGIJ
    0U,	// AsmJLHAltCGIT
    2U,	// AsmJLHAltCGRB
    3U,	// AsmJLHAltCGRJ
    0U,	// AsmJLHAltCGRT
    0U,	// AsmJLHAltCIB
    0U,	// AsmJLHAltCIJ
    0U,	// AsmJLHAltCIT
    0U,	// AsmJLHAltCLFIT
    0U,	// AsmJLHAltCLGIB
    0U,	// AsmJLHAltCLGIJ
    0U,	// AsmJLHAltCLGIT
    2U,	// AsmJLHAltCLGRB
    3U,	// AsmJLHAltCLGRJ
    0U,	// AsmJLHAltCLGRT
    0U,	// AsmJLHAltCLIB
    0U,	// AsmJLHAltCLIJ
    2U,	// AsmJLHAltCLRB
    3U,	// AsmJLHAltCLRJ
    0U,	// AsmJLHAltCLRT
    2U,	// AsmJLHAltCRB
    3U,	// AsmJLHAltCRJ
    0U,	// AsmJLHAltCRT
    0U,	// AsmJLHCGIB
    0U,	// AsmJLHCGIJ
    0U,	// AsmJLHCGIT
    2U,	// AsmJLHCGRB
    3U,	// AsmJLHCGRJ
    0U,	// AsmJLHCGRT
    0U,	// AsmJLHCIB
    0U,	// AsmJLHCIJ
    0U,	// AsmJLHCIT
    0U,	// AsmJLHCLFIT
    0U,	// AsmJLHCLGIB
    0U,	// AsmJLHCLGIJ
    0U,	// AsmJLHCLGIT
    2U,	// AsmJLHCLGRB
    3U,	// AsmJLHCLGRJ
    0U,	// AsmJLHCLGRT
    0U,	// AsmJLHCLIB
    0U,	// AsmJLHCLIJ
    2U,	// AsmJLHCLRB
    3U,	// AsmJLHCLRJ
    0U,	// AsmJLHCLRT
    2U,	// AsmJLHCRB
    3U,	// AsmJLHCRJ
    0U,	// AsmJLHCRT
    0U,	// AsmLAltBR
    0U,	// AsmLAltJ
    0U,	// AsmLAltJG
    0U,	// AsmLAltLOC
    0U,	// AsmLAltLOCG
    0U,	// AsmLAltLOCGHI
    0U,	// AsmLAltLOCGR
    0U,	// AsmLAltLOCHI
    0U,	// AsmLAltLOCR
    0U,	// AsmLAltSTOC
    0U,	// AsmLAltSTOCG
    0U,	// AsmLBR
    0U,	// AsmLEBR
    0U,	// AsmLEJ
    0U,	// AsmLEJG
    0U,	// AsmLELOC
    0U,	// AsmLELOCG
    0U,	// AsmLELOCGHI
    0U,	// AsmLELOCGR
    0U,	// AsmLELOCHI
    0U,	// AsmLELOCR
    0U,	// AsmLESTOC
    0U,	// AsmLESTOCG
    0U,	// AsmLHBR
    0U,	// AsmLHJ
    0U,	// AsmLHJG
    0U,	// AsmLHLOC
    0U,	// AsmLHLOCG
    0U,	// AsmLHLOCGHI
    0U,	// AsmLHLOCGR
    0U,	// AsmLHLOCHI
    0U,	// AsmLHLOCR
    0U,	// AsmLHSTOC
    0U,	// AsmLHSTOCG
    0U,	// AsmLJ
    0U,	// AsmLJG
    0U,	// AsmLLOC
    0U,	// AsmLLOCG
    0U,	// AsmLLOCGHI
    0U,	// AsmLLOCGR
    0U,	// AsmLLOCHI
    0U,	// AsmLLOCR
    3U,	// AsmLOC
    3U,	// AsmLOCG
    4U,	// AsmLOCGHI
    4U,	// AsmLOCGR
    4U,	// AsmLOCHI
    4U,	// AsmLOCR
    0U,	// AsmLSTOC
    0U,	// AsmLSTOCG
    0U,	// AsmNEAltBR
    0U,	// AsmNEAltJ
    0U,	// AsmNEAltJG
    0U,	// AsmNEAltLOC
    0U,	// AsmNEAltLOCG
    0U,	// AsmNEAltLOCGHI
    0U,	// AsmNEAltLOCGR
    0U,	// AsmNEAltLOCHI
    0U,	// AsmNEAltLOCR
    0U,	// AsmNEAltSTOC
    0U,	// AsmNEAltSTOCG
    0U,	// AsmNEBR
    0U,	// AsmNEJ
    0U,	// AsmNEJG
    0U,	// AsmNELOC
    0U,	// AsmNELOCG
    0U,	// AsmNELOCGHI
    0U,	// AsmNELOCGR
    0U,	// AsmNELOCHI
    0U,	// AsmNELOCR
    0U,	// AsmNESTOC
    0U,	// AsmNESTOCG
    0U,	// AsmNHAltBR
    0U,	// AsmNHAltJ
    0U,	// AsmNHAltJG
    0U,	// AsmNHAltLOC
    0U,	// AsmNHAltLOCG
    0U,	// AsmNHAltLOCGHI
    0U,	// AsmNHAltLOCGR
    0U,	// AsmNHAltLOCHI
    0U,	// AsmNHAltLOCR
    0U,	// AsmNHAltSTOC
    0U,	// AsmNHAltSTOCG
    0U,	// AsmNHBR
    0U,	// AsmNHEBR
    0U,	// AsmNHEJ
    0U,	// AsmNHEJG
    0U,	// AsmNHELOC
    0U,	// AsmNHELOCG
    0U,	// AsmNHELOCGHI
    0U,	// AsmNHELOCGR
    0U,	// AsmNHELOCHI
    0U,	// AsmNHELOCR
    0U,	// AsmNHESTOC
    0U,	// AsmNHESTOCG
    0U,	// AsmNHJ
    0U,	// AsmNHJG
    0U,	// AsmNHLOC
    0U,	// AsmNHLOCG
    0U,	// AsmNHLOCGHI
    0U,	// AsmNHLOCGR
    0U,	// AsmNHLOCHI
    0U,	// AsmNHLOCR
    0U,	// AsmNHSTOC
    0U,	// AsmNHSTOCG
    0U,	// AsmNLAltBR
    0U,	// AsmNLAltJ
    0U,	// AsmNLAltJG
    0U,	// AsmNLAltLOC
    0U,	// AsmNLAltLOCG
    0U,	// AsmNLAltLOCGHI
    0U,	// AsmNLAltLOCGR
    0U,	// AsmNLAltLOCHI
    0U,	// AsmNLAltLOCR
    0U,	// AsmNLAltSTOC
    0U,	// AsmNLAltSTOCG
    0U,	// AsmNLBR
    0U,	// AsmNLEBR
    0U,	// AsmNLEJ
    0U,	// AsmNLEJG
    0U,	// AsmNLELOC
    0U,	// AsmNLELOCG
    0U,	// AsmNLELOCGHI
    0U,	// AsmNLELOCGR
    0U,	// AsmNLELOCHI
    0U,	// AsmNLELOCR
    0U,	// AsmNLESTOC
    0U,	// AsmNLESTOCG
    0U,	// AsmNLHBR
    0U,	// AsmNLHJ
    0U,	// AsmNLHJG
    0U,	// AsmNLHLOC
    0U,	// AsmNLHLOCG
    0U,	// AsmNLHLOCGHI
    0U,	// AsmNLHLOCGR
    0U,	// AsmNLHLOCHI
    0U,	// AsmNLHLOCR
    0U,	// AsmNLHSTOC
    0U,	// AsmNLHSTOCG
    0U,	// AsmNLJ
    0U,	// AsmNLJG
    0U,	// AsmNLLOC
    0U,	// AsmNLLOCG
    0U,	// AsmNLLOCGHI
    0U,	// AsmNLLOCGR
    0U,	// AsmNLLOCHI
    0U,	// AsmNLLOCR
    0U,	// AsmNLSTOC
    0U,	// AsmNLSTOCG
    0U,	// AsmNOBR
    0U,	// AsmNOJ
    0U,	// AsmNOJG
    0U,	// AsmNOLOC
    0U,	// AsmNOLOCG
    0U,	// AsmNOLOCGHI
    0U,	// AsmNOLOCGR
    0U,	// AsmNOLOCHI
    0U,	// AsmNOLOCR
    0U,	// AsmNOSTOC
    0U,	// AsmNOSTOCG
    0U,	// AsmOBR
    0U,	// AsmOJ
    0U,	// AsmOJG
    0U,	// AsmOLOC
    0U,	// AsmOLOCG
    0U,	// AsmOLOCGHI
    0U,	// AsmOLOCGR
    0U,	// AsmOLOCHI
    0U,	// AsmOLOCR
    0U,	// AsmOSTOC
    0U,	// AsmOSTOCG
    4U,	// AsmSTOC
    4U,	// AsmSTOCG
    0U,	// BASR
    0U,	// BCR
    0U,	// BR
    0U,	// BRAS
    0U,	// BRASL
    0U,	// BRC
    0U,	// BRCL
    0U,	// BRCT
    0U,	// BRCTG
    0U,	// C
    0U,	// CDB
    0U,	// CDBR
    0U,	// CDFBR
    0U,	// CDGBR
    4U,	// CDLFBR
    4U,	// CDLGBR
    0U,	// CEB
    0U,	// CEBR
    0U,	// CEFBR
    0U,	// CEGBR
    4U,	// CELFBR
    4U,	// CELGBR
    0U,	// CFDBR
    0U,	// CFEBR
    0U,	// CFI
    0U,	// CFIMux
    0U,	// CFXBR
    0U,	// CG
    0U,	// CGDBR
    0U,	// CGEBR
    0U,	// CGF
    0U,	// CGFI
    0U,	// CGFR
    0U,	// CGFRL
    0U,	// CGH
    0U,	// CGHI
    0U,	// CGHRL
    0U,	// CGHSI
    0U,	// CGIB
    0U,	// CGIBCall
    0U,	// CGIBReturn
    0U,	// CGIJ
    0U,	// CGIT
    0U,	// CGR
    0U,	// CGRB
    0U,	// CGRBCall
    0U,	// CGRBReturn
    0U,	// CGRJ
    0U,	// CGRL
    0U,	// CGRT
    0U,	// CGXBR
    0U,	// CH
    0U,	// CHF
    0U,	// CHHSI
    0U,	// CHI
    0U,	// CHRL
    0U,	// CHSI
    0U,	// CHY
    0U,	// CIB
    0U,	// CIBCall
    0U,	// CIBReturn
    0U,	// CIH
    0U,	// CIJ
    0U,	// CIT
    0U,	// CL
    0U,	// CLC
    0U,	// CLCLoop
    0U,	// CLCSequence
    4U,	// CLFDBR
    4U,	// CLFEBR
    0U,	// CLFHSI
    0U,	// CLFI
    0U,	// CLFIMux
    0U,	// CLFIT
    4U,	// CLFXBR
    0U,	// CLG
    4U,	// CLGDBR
    4U,	// CLGEBR
    0U,	// CLGF
    0U,	// CLGFI
    0U,	// CLGFR
    0U,	// CLGFRL
    0U,	// CLGHRL
    0U,	// CLGHSI
    0U,	// CLGIB
    0U,	// CLGIBCall
    0U,	// CLGIBReturn
    0U,	// CLGIJ
    0U,	// CLGIT
    0U,	// CLGR
    0U,	// CLGRB
    0U,	// CLGRBCall
    0U,	// CLGRBReturn
    0U,	// CLGRJ
    0U,	// CLGRL
    0U,	// CLGRT
    4U,	// CLGXBR
    0U,	// CLHF
    0U,	// CLHHSI
    0U,	// CLHRL
    0U,	// CLI
    0U,	// CLIB
    0U,	// CLIBCall
    0U,	// CLIBReturn
    0U,	// CLIH
    0U,	// CLIJ
    0U,	// CLIY
    0U,	// CLMux
    0U,	// CLR
    0U,	// CLRB
    0U,	// CLRBCall
    0U,	// CLRBReturn
    0U,	// CLRJ
    0U,	// CLRL
    0U,	// CLRT
    0U,	// CLST
    0U,	// CLSTLoop
    0U,	// CLY
    0U,	// CMux
    4U,	// CPSDRdd
    4U,	// CPSDRds
    4U,	// CPSDRsd
    4U,	// CPSDRss
    0U,	// CR
    0U,	// CRB
    0U,	// CRBCall
    0U,	// CRBReturn
    0U,	// CRJ
    0U,	// CRL
    0U,	// CRT
    1U,	// CS
    1U,	// CSG
    1U,	// CSY
    0U,	// CXBR
    0U,	// CXFBR
    0U,	// CXGBR
    4U,	// CXLFBR
    4U,	// CXLGBR
    0U,	// CY
    0U,	// CallBASR
    0U,	// CallBCR
    0U,	// CallBR
    0U,	// CallBRASL
    0U,	// CallBRCL
    0U,	// CallJG
    0U,	// CondReturn
    0U,	// CondStore16
    0U,	// CondStore16Inv
    0U,	// CondStore16Mux
    0U,	// CondStore16MuxInv
    0U,	// CondStore32
    0U,	// CondStore32Inv
    0U,	// CondStore64
    0U,	// CondStore64Inv
    0U,	// CondStore8
    0U,	// CondStore8Inv
    0U,	// CondStore8Mux
    0U,	// CondStore8MuxInv
    0U,	// CondStoreF32
    0U,	// CondStoreF32Inv
    0U,	// CondStoreF64
    0U,	// CondStoreF64Inv
    0U,	// CondTrap
    0U,	// DDB
    0U,	// DDBR
    0U,	// DEB
    0U,	// DEBR
    0U,	// DL
    0U,	// DLG
    0U,	// DLGR
    0U,	// DLR
    0U,	// DSG
    0U,	// DSGF
    0U,	// DSGFR
    0U,	// DSGR
    0U,	// DXBR
    0U,	// EAR
    0U,	// ETND
    0U,	// EX
    0U,	// EXRL
    0U,	// FIDBR
    4U,	// FIDBRA
    0U,	// FIEBR
    4U,	// FIEBRA
    0U,	// FIXBR
    4U,	// FIXBRA
    0U,	// FLOGR
    0U,	// GOT
    0U,	// IC
    0U,	// IC32
    0U,	// IC32Y
    0U,	// ICM
    0U,	// ICMH
    0U,	// ICMY
    0U,	// ICY
    0U,	// IIFMux
    0U,	// IIHF
    0U,	// IIHF64
    0U,	// IIHH
    0U,	// IIHH64
    0U,	// IIHL
    0U,	// IIHL64
    0U,	// IIHMux
    0U,	// IILF
    0U,	// IILF64
    0U,	// IILH
    0U,	// IILH64
    0U,	// IILL
    0U,	// IILL64
    0U,	// IILMux
    0U,	// IPM
    0U,	// J
    0U,	// JG
    0U,	// L
    0U,	// L128
    0U,	// LA
    2U,	// LAA
    2U,	// LAAG
    2U,	// LAAL
    2U,	// LAALG
    2U,	// LAN
    2U,	// LANG
    2U,	// LAO
    2U,	// LAOG
    0U,	// LARL
    2U,	// LAX
    2U,	// LAXG
    0U,	// LAY
    0U,	// LB
    0U,	// LBH
    0U,	// LBMux
    0U,	// LBR
    3U,	// LCBB
    0U,	// LCDBR
    0U,	// LCDFR
    0U,	// LCDFR_32
    0U,	// LCEBR
    0U,	// LCGFR
    0U,	// LCGR
    0U,	// LCR
    0U,	// LCXBR
    0U,	// LD
    0U,	// LDE32
    0U,	// LDEB
    0U,	// LDEBR
    0U,	// LDGR
    0U,	// LDR
    0U,	// LDR32
    0U,	// LDXBR
    4U,	// LDXBRA
    0U,	// LDY
    0U,	// LE
    0U,	// LEDBR
    4U,	// LEDBRA
    0U,	// LEFR
    0U,	// LER
    0U,	// LEXBR
    4U,	// LEXBRA
    0U,	// LEY
    0U,	// LFER
    0U,	// LFH
    0U,	// LG
    0U,	// LGB
    0U,	// LGBR
    0U,	// LGDR
    0U,	// LGF
    0U,	// LGFI
    0U,	// LGFR
    0U,	// LGFRL
    0U,	// LGH
    0U,	// LGHI
    0U,	// LGHR
    0U,	// LGHRL
    0U,	// LGR
    0U,	// LGRL
    0U,	// LH
    0U,	// LHH
    0U,	// LHI
    0U,	// LHIMux
    0U,	// LHMux
    0U,	// LHR
    0U,	// LHRL
    0U,	// LHY
    0U,	// LLC
    0U,	// LLCH
    0U,	// LLCMux
    0U,	// LLCR
    0U,	// LLCRMux
    0U,	// LLGC
    0U,	// LLGCR
    0U,	// LLGF
    0U,	// LLGFR
    0U,	// LLGFRL
    0U,	// LLGH
    0U,	// LLGHR
    0U,	// LLGHRL
    0U,	// LLH
    0U,	// LLHH
    0U,	// LLHMux
    0U,	// LLHR
    0U,	// LLHRL
    0U,	// LLHRMux
    0U,	// LLIHF
    0U,	// LLIHH
    0U,	// LLIHL
    0U,	// LLILF
    0U,	// LLILH
    0U,	// LLILL
    2U,	// LM
    2U,	// LMG
    2U,	// LMH
    2U,	// LMY
    0U,	// LMux
    0U,	// LNDBR
    0U,	// LNDFR
    0U,	// LNDFR_32
    0U,	// LNEBR
    0U,	// LNGFR
    0U,	// LNGR
    0U,	// LNR
    0U,	// LNXBR
    0U,	// LOC
    0U,	// LOCG
    0U,	// LOCGHI
    0U,	// LOCGR
    0U,	// LOCHI
    0U,	// LOCR
    0U,	// LPDBR
    0U,	// LPDFR
    0U,	// LPDFR_32
    0U,	// LPEBR
    0U,	// LPGFR
    0U,	// LPGR
    0U,	// LPR
    0U,	// LPXBR
    0U,	// LR
    0U,	// LRL
    0U,	// LRMux
    0U,	// LRV
    0U,	// LRVG
    0U,	// LRVGR
    0U,	// LRVH
    0U,	// LRVR
    0U,	// LT
    0U,	// LTDBR
    0U,	// LTDBRCompare
    0U,	// LTDBRCompare_VecPseudo
    0U,	// LTEBR
    0U,	// LTEBRCompare
    0U,	// LTEBRCompare_VecPseudo
    0U,	// LTG
    0U,	// LTGF
    0U,	// LTGFR
    0U,	// LTGR
    0U,	// LTR
    0U,	// LTXBR
    0U,	// LTXBRCompare
    0U,	// LTXBRCompare_VecPseudo
    0U,	// LX
    0U,	// LXDB
    0U,	// LXDBR
    0U,	// LXEB
    0U,	// LXEBR
    0U,	// LXR
    0U,	// LY
    0U,	// LZDR
    0U,	// LZER
    0U,	// LZXR
    5U,	// MADB
    5U,	// MADBR
    5U,	// MAEB
    5U,	// MAEBR
    0U,	// MDB
    0U,	// MDBR
    0U,	// MDEB
    0U,	// MDEBR
    0U,	// MEEB
    0U,	// MEEBR
    0U,	// MGHI
    0U,	// MH
    0U,	// MHI
    0U,	// MHY
    0U,	// MLG
    0U,	// MLGR
    0U,	// MS
    5U,	// MSDB
    5U,	// MSDBR
    5U,	// MSEB
    5U,	// MSEBR
    0U,	// MSFI
    0U,	// MSG
    0U,	// MSGF
    0U,	// MSGFI
    0U,	// MSGFR
    0U,	// MSGR
    0U,	// MSR
    0U,	// MSY
    0U,	// MVC
    0U,	// MVCLoop
    0U,	// MVCSequence
    0U,	// MVGHI
    0U,	// MVHHI
    0U,	// MVHI
    0U,	// MVI
    0U,	// MVIY
    0U,	// MVST
    0U,	// MVSTLoop
    0U,	// MXBR
    0U,	// MXDB
    0U,	// MXDBR
    0U,	// MemBarrier
    0U,	// N
    0U,	// NC
    0U,	// NCLoop
    0U,	// NCSequence
    0U,	// NG
    0U,	// NGR
    0U,	// NGRK
    0U,	// NI
    0U,	// NIFMux
    0U,	// NIHF
    0U,	// NIHF64
    0U,	// NIHH
    0U,	// NIHH64
    0U,	// NIHL
    0U,	// NIHL64
    0U,	// NIHMux
    0U,	// NILF
    0U,	// NILF64
    0U,	// NILH
    0U,	// NILH64
    0U,	// NILL
    0U,	// NILL64
    0U,	// NILMux
    0U,	// NIY
    0U,	// NR
    0U,	// NRK
    0U,	// NTSTG
    0U,	// NY
    0U,	// O
    0U,	// OC
    0U,	// OCLoop
    0U,	// OCSequence
    0U,	// OG
    0U,	// OGR
    0U,	// OGRK
    0U,	// OI
    0U,	// OIFMux
    0U,	// OIHF
    0U,	// OIHF64
    0U,	// OIHH
    0U,	// OIHH64
    0U,	// OIHL
    0U,	// OIHL64
    0U,	// OIHMux
    0U,	// OILF
    0U,	// OILF64
    0U,	// OILH
    0U,	// OILH64
    0U,	// OILL
    0U,	// OILL64
    0U,	// OILMux
    0U,	// OIY
    0U,	// OR
    0U,	// ORK
    0U,	// OY
    0U,	// PFD
    0U,	// PFDRL
    0U,	// POPCNT
    2U,	// PPA
    6U,	// RISBG
    6U,	// RISBG32
    6U,	// RISBGN
    6U,	// RISBHG
    0U,	// RISBHH
    0U,	// RISBHL
    6U,	// RISBLG
    0U,	// RISBLH
    0U,	// RISBLL
    0U,	// RISBMux
    2U,	// RLL
    2U,	// RLLG
    6U,	// RNSBG
    6U,	// ROSBG
    6U,	// RXSBG
    0U,	// Return
    0U,	// S
    0U,	// SDB
    0U,	// SDBR
    0U,	// SEB
    0U,	// SEBR
    0U,	// SG
    0U,	// SGF
    0U,	// SGFR
    0U,	// SGR
    0U,	// SGRK
    0U,	// SH
    0U,	// SHY
    0U,	// SL
    0U,	// SLA
    2U,	// SLAK
    0U,	// SLB
    0U,	// SLBG
    0U,	// SLBGR
    0U,	// SLBR
    0U,	// SLFI
    0U,	// SLG
    0U,	// SLGF
    0U,	// SLGFI
    0U,	// SLGFR
    0U,	// SLGR
    0U,	// SLGRK
    0U,	// SLL
    2U,	// SLLG
    2U,	// SLLK
    0U,	// SLR
    0U,	// SLRK
    0U,	// SLY
    0U,	// SQDB
    0U,	// SQDBR
    0U,	// SQEB
    0U,	// SQEBR
    0U,	// SQXBR
    0U,	// SR
    0U,	// SRA
    2U,	// SRAG
    2U,	// SRAK
    0U,	// SRK
    0U,	// SRL
    2U,	// SRLG
    2U,	// SRLK
    0U,	// SRST
    0U,	// SRSTLoop
    0U,	// ST
    0U,	// ST128
    0U,	// STC
    0U,	// STCH
    0U,	// STCK
    0U,	// STCKE
    0U,	// STCKF
    0U,	// STCMux
    0U,	// STCY
    0U,	// STD
    0U,	// STDY
    0U,	// STE
    0U,	// STEY
    0U,	// STFH
    0U,	// STFLE
    0U,	// STG
    0U,	// STGRL
    0U,	// STH
    0U,	// STHH
    0U,	// STHMux
    0U,	// STHRL
    0U,	// STHY
    2U,	// STM
    2U,	// STMG
    2U,	// STMH
    2U,	// STMY
    0U,	// STMux
    0U,	// STOC
    0U,	// STOCG
    0U,	// STRL
    0U,	// STRV
    0U,	// STRVG
    0U,	// STRVH
    0U,	// STX
    0U,	// STY
    0U,	// SVC
    0U,	// SXBR
    0U,	// SY
    0U,	// Select32
    0U,	// Select32Mux
    0U,	// Select64
    0U,	// SelectF128
    0U,	// SelectF32
    0U,	// SelectF64
    0U,	// Serialize
    0U,	// TABORT
    0U,	// TBEGIN
    0U,	// TBEGINC
    0U,	// TBEGIN_nofloat
    0U,	// TCDB
    0U,	// TCEB
    0U,	// TCXB
    0U,	// TEND
    0U,	// TLS_GDCALL
    0U,	// TLS_LDCALL
    0U,	// TM
    0U,	// TMHH
    0U,	// TMHH64
    0U,	// TMHL
    0U,	// TMHL64
    0U,	// TMHMux
    0U,	// TMLH
    0U,	// TMLH64
    0U,	// TMLL
    0U,	// TMLL64
    0U,	// TMLMux
    0U,	// TMY
    0U,	// Trap
    0U,	// VAB
    0U,	// VACCB
    80U,	// VACCCQ
    0U,	// VACCF
    0U,	// VACCG
    0U,	// VACCH
    0U,	// VACCQ
    80U,	// VACQ
    0U,	// VAF
    0U,	// VAG
    0U,	// VAH
    0U,	// VAQ
    0U,	// VAVGB
    0U,	// VAVGF
    0U,	// VAVGG
    0U,	// VAVGH
    0U,	// VAVGLB
    0U,	// VAVGLF
    0U,	// VAVGLG
    0U,	// VAVGLH
    114U,	// VCDGB
    114U,	// VCDLGB
    0U,	// VCEQB
    0U,	// VCEQBS
    0U,	// VCEQF
    0U,	// VCEQFS
    0U,	// VCEQG
    0U,	// VCEQGS
    0U,	// VCEQH
    0U,	// VCEQHS
    114U,	// VCGDB
    0U,	// VCHB
    0U,	// VCHBS
    0U,	// VCHF
    0U,	// VCHFS
    0U,	// VCHG
    0U,	// VCHGS
    0U,	// VCHH
    0U,	// VCHHS
    0U,	// VCHLB
    0U,	// VCHLBS
    0U,	// VCHLF
    0U,	// VCHLFS
    0U,	// VCHLG
    0U,	// VCHLGS
    0U,	// VCHLH
    0U,	// VCHLHS
    0U,	// VCKSM
    114U,	// VCLGDB
    0U,	// VCLZB
    0U,	// VCLZF
    0U,	// VCLZG
    0U,	// VCLZH
    0U,	// VCTZB
    0U,	// VCTZF
    0U,	// VCTZG
    0U,	// VCTZH
    0U,	// VECB
    0U,	// VECF
    0U,	// VECG
    0U,	// VECH
    0U,	// VECLB
    0U,	// VECLF
    0U,	// VECLG
    0U,	// VECLH
    149U,	// VERIMB
    149U,	// VERIMF
    149U,	// VERIMG
    149U,	// VERIMH
    2U,	// VERLLB
    2U,	// VERLLF
    2U,	// VERLLG
    2U,	// VERLLH
    0U,	// VERLLVB
    0U,	// VERLLVF
    0U,	// VERLLVG
    0U,	// VERLLVH
    2U,	// VESLB
    2U,	// VESLF
    2U,	// VESLG
    2U,	// VESLH
    0U,	// VESLVB
    0U,	// VESLVF
    0U,	// VESLVG
    0U,	// VESLVH
    2U,	// VESRAB
    2U,	// VESRAF
    2U,	// VESRAG
    2U,	// VESRAH
    0U,	// VESRAVB
    0U,	// VESRAVF
    0U,	// VESRAVG
    0U,	// VESRAVH
    2U,	// VESRLB
    2U,	// VESRLF
    2U,	// VESRLG
    2U,	// VESRLH
    0U,	// VESRLVB
    0U,	// VESRLVF
    0U,	// VESRLVG
    0U,	// VESRLVH
    0U,	// VFADB
    112U,	// VFAEB
    112U,	// VFAEBS
    112U,	// VFAEF
    112U,	// VFAEFS
    112U,	// VFAEH
    112U,	// VFAEHS
    112U,	// VFAEZB
    112U,	// VFAEZBS
    112U,	// VFAEZF
    112U,	// VFAEZFS
    112U,	// VFAEZH
    112U,	// VFAEZHS
    0U,	// VFCEDB
    0U,	// VFCEDBS
    0U,	// VFCHDB
    0U,	// VFCHDBS
    0U,	// VFCHEDB
    0U,	// VFCHEDBS
    0U,	// VFDDB
    0U,	// VFEEB
    0U,	// VFEEBS
    0U,	// VFEEF
    0U,	// VFEEFS
    0U,	// VFEEH
    0U,	// VFEEHS
    0U,	// VFEEZB
    0U,	// VFEEZBS
    0U,	// VFEEZF
    0U,	// VFEEZFS
    0U,	// VFEEZH
    0U,	// VFEEZHS
    0U,	// VFENEB
    0U,	// VFENEBS
    0U,	// VFENEF
    0U,	// VFENEFS
    0U,	// VFENEH
    0U,	// VFENEHS
    0U,	// VFENEZB
    0U,	// VFENEZBS
    0U,	// VFENEZF
    0U,	// VFENEZFS
    0U,	// VFENEZH
    0U,	// VFENEZHS
    114U,	// VFIDB
    0U,	// VFLCDB
    0U,	// VFLNDB
    0U,	// VFLPDB
    80U,	// VFMADB
    0U,	// VFMDB
    80U,	// VFMSDB
    0U,	// VFSDB
    0U,	// VFSQDB
    6U,	// VFTCIDB
    0U,	// VGBM
    0U,	// VGEF
    0U,	// VGEG
    80U,	// VGFMAB
    80U,	// VGFMAF
    80U,	// VGFMAG
    80U,	// VGFMAH
    0U,	// VGFMB
    0U,	// VGFMF
    0U,	// VGFMG
    0U,	// VGFMH
    0U,	// VGMB
    0U,	// VGMF
    0U,	// VGMG
    0U,	// VGMH
    0U,	// VISTRB
    0U,	// VISTRBS
    0U,	// VISTRF
    0U,	// VISTRFS
    0U,	// VISTRH
    0U,	// VISTRHS
    0U,	// VL
    0U,	// VL32
    0U,	// VL64
    3U,	// VLBB
    0U,	// VLCB
    0U,	// VLCF
    0U,	// VLCG
    0U,	// VLCH
    0U,	// VLDEB
    7U,	// VLEB
    114U,	// VLEDB
    7U,	// VLEF
    8U,	// VLEG
    8U,	// VLEH
    4U,	// VLEIB
    9U,	// VLEIF
    9U,	// VLEIG
    10U,	// VLEIH
    2U,	// VLGVB
    2U,	// VLGVF
    2U,	// VLGVG
    2U,	// VLGVH
    2U,	// VLL
    0U,	// VLLEZB
    0U,	// VLLEZF
    0U,	// VLLEZG
    0U,	// VLLEZH
    2U,	// VLM
    0U,	// VLPB
    0U,	// VLPF
    0U,	// VLPG
    0U,	// VLPH
    0U,	// VLR
    0U,	// VLR32
    0U,	// VLR64
    0U,	// VLREPB
    0U,	// VLREPF
    0U,	// VLREPG
    0U,	// VLREPH
    1U,	// VLVGB
    1U,	// VLVGF
    1U,	// VLVGG
    1U,	// VLVGH
    0U,	// VLVGP
    0U,	// VLVGP32
    80U,	// VMAEB
    80U,	// VMAEF
    80U,	// VMAEH
    80U,	// VMAHB
    80U,	// VMAHF
    80U,	// VMAHH
    80U,	// VMALB
    80U,	// VMALEB
    80U,	// VMALEF
    80U,	// VMALEH
    80U,	// VMALF
    80U,	// VMALHB
    80U,	// VMALHF
    80U,	// VMALHH
    80U,	// VMALHW
    80U,	// VMALOB
    80U,	// VMALOF
    80U,	// VMALOH
    80U,	// VMAOB
    80U,	// VMAOF
    80U,	// VMAOH
    0U,	// VMEB
    0U,	// VMEF
    0U,	// VMEH
    0U,	// VMHB
    0U,	// VMHF
    0U,	// VMHH
    0U,	// VMLB
    0U,	// VMLEB
    0U,	// VMLEF
    0U,	// VMLEH
    0U,	// VMLF
    0U,	// VMLHB
    0U,	// VMLHF
    0U,	// VMLHH
    0U,	// VMLHW
    0U,	// VMLOB
    0U,	// VMLOF
    0U,	// VMLOH
    0U,	// VMNB
    0U,	// VMNF
    0U,	// VMNG
    0U,	// VMNH
    0U,	// VMNLB
    0U,	// VMNLF
    0U,	// VMNLG
    0U,	// VMNLH
    0U,	// VMOB
    0U,	// VMOF
    0U,	// VMOH
    0U,	// VMRHB
    0U,	// VMRHF
    0U,	// VMRHG
    0U,	// VMRHH
    0U,	// VMRLB
    0U,	// VMRLF
    0U,	// VMRLG
    0U,	// VMRLH
    0U,	// VMXB
    0U,	// VMXF
    0U,	// VMXG
    0U,	// VMXH
    0U,	// VMXLB
    0U,	// VMXLF
    0U,	// VMXLG
    0U,	// VMXLH
    0U,	// VN
    0U,	// VNC
    0U,	// VNO
    0U,	// VO
    0U,	// VONE
    112U,	// VPDI
    80U,	// VPERM
    0U,	// VPKF
    0U,	// VPKG
    0U,	// VPKH
    0U,	// VPKLSF
    0U,	// VPKLSFS
    0U,	// VPKLSG
    0U,	// VPKLSGS
    0U,	// VPKLSH
    0U,	// VPKLSHS
    0U,	// VPKSF
    0U,	// VPKSFS
    0U,	// VPKSG
    0U,	// VPKSGS
    0U,	// VPKSH
    0U,	// VPKSHS
    2U,	// VPOPCT
    10U,	// VREPB
    10U,	// VREPF
    10U,	// VREPG
    10U,	// VREPH
    0U,	// VREPIB
    0U,	// VREPIF
    0U,	// VREPIG
    0U,	// VREPIH
    0U,	// VSB
    80U,	// VSBCBIQ
    80U,	// VSBIQ
    0U,	// VSCBIB
    0U,	// VSCBIF
    0U,	// VSCBIG
    0U,	// VSCBIH
    0U,	// VSCBIQ
    0U,	// VSCEF
    0U,	// VSCEG
    0U,	// VSEGB
    0U,	// VSEGF
    0U,	// VSEGH
    80U,	// VSEL
    0U,	// VSF
    0U,	// VSG
    0U,	// VSH
    0U,	// VSL
    0U,	// VSLB
    176U,	// VSLDB
    0U,	// VSQ
    0U,	// VSRA
    0U,	// VSRAB
    0U,	// VSRL
    0U,	// VSRLB
    0U,	// VST
    0U,	// VST32
    0U,	// VST64
    3U,	// VSTEB
    11U,	// VSTEF
    11U,	// VSTEG
    12U,	// VSTEH
    2U,	// VSTL
    2U,	// VSTM
    336U,	// VSTRCB
    336U,	// VSTRCBS
    336U,	// VSTRCF
    336U,	// VSTRCFS
    336U,	// VSTRCH
    336U,	// VSTRCHS
    336U,	// VSTRCZB
    336U,	// VSTRCZBS
    336U,	// VSTRCZF
    336U,	// VSTRCZFS
    336U,	// VSTRCZH
    336U,	// VSTRCZHS
    0U,	// VSUMB
    0U,	// VSUMGF
    0U,	// VSUMGH
    0U,	// VSUMH
    0U,	// VSUMQF
    0U,	// VSUMQG
    0U,	// VTM
    0U,	// VUPHB
    0U,	// VUPHF
    0U,	// VUPHH
    0U,	// VUPLB
    0U,	// VUPLF
    0U,	// VUPLHB
    0U,	// VUPLHF
    0U,	// VUPLHH
    0U,	// VUPLHW
    0U,	// VUPLLB
    0U,	// VUPLLF
    0U,	// VUPLLH
    0U,	// VX
    0U,	// VZERO
    114U,	// WCDGB
    114U,	// WCDLGB
    114U,	// WCGDB
    114U,	// WCLGDB
    0U,	// WFADB
    0U,	// WFCDB
    0U,	// WFCEDB
    0U,	// WFCEDBS
    0U,	// WFCHDB
    0U,	// WFCHDBS
    0U,	// WFCHEDB
    0U,	// WFCHEDBS
    0U,	// WFDDB
    114U,	// WFIDB
    0U,	// WFKDB
    0U,	// WFLCDB
    0U,	// WFLNDB
    0U,	// WFLPDB
    80U,	// WFMADB
    0U,	// WFMDB
    80U,	// WFMSDB
    0U,	// WFSDB
    0U,	// WFSQDB
    6U,	// WFTCIDB
    0U,	// WLDEB
    114U,	// WLEDB
    0U,	// X
    0U,	// XC
    0U,	// XCLoop
    0U,	// XCSequence
    0U,	// XG
    0U,	// XGR
    0U,	// XGRK
    0U,	// XI
    0U,	// XIFMux
    0U,	// XIHF
    0U,	// XIHF64
    0U,	// XILF
    0U,	// XILF64
    0U,	// XIY
    0U,	// XR
    0U,	// XRK
    0U,	// XY
    0U,	// ZEXT128_32
    0U,	// ZEXT128_64
  };

  O << "\t";

  // Emit the opcode for the instruction.
  uint64_t Bits = 0;
  Bits |= (uint64_t)OpInfo0[MI->getOpcode()] << 0;
  Bits |= (uint64_t)OpInfo1[MI->getOpcode()] << 32;
  assert(Bits != 0 && "Cannot print this instruction.");
  O << AsmStrs+(Bits & 16383)-1;


  // Fragment 0 encoded into 4 bits for 12 unique commands.
  switch ((Bits >> 14) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // DBG_VALUE, BUNDLE, LIFETIME_START, LIFETIME_END, PATCHABLE_FUNCTION_EN...
    return;
    break;
  case 1:
    // A, ADB, ADBR, AEB, AEBR, AFI, AG, AGF, AGFI, AGFR, AGHI, AGHIK, AGR, A...
    printOperand(MI, 0, O);
    break;
  case 2:
    // AGSI, ASI, CGHSI, CHHSI, CHSI, CLFHSI, CLGHSI, CLHHSI, CLI, CLIY, MVGH...
    printBDAddrOperand(MI, 0, O);
    break;
  case 3:
    // AsmBC, AsmBCR, AsmBRC, AsmBRCL, PFD, PFDRL
    printU4ImmOperand(MI, 0, O);
    O << ", ";
    break;
  case 4:
    // AsmEAltJ, AsmEAltJG, AsmEJ, AsmEJG, AsmHAltJ, AsmHAltJG, AsmHEJ, AsmHE...
    printPCRelOperand(MI, 0, O);
    return;
    break;
  case 5:
    // BCR, BRC, BRCL
    printCond4Operand(MI, 1, O);
    break;
  case 6:
    // CGIB, CGIJ, CGIT, CGRB, CGRJ, CGRT, CIB, CIJ, CIT, CLFIT, CLGIB, CLGIJ...
    printCond4Operand(MI, 2, O);
    O << "\t";
    printOperand(MI, 0, O);
    O << ", ";
    break;
  case 7:
    // CLC, MVC, NC, OC, XC
    printBDLAddrOperand(MI, 0, O);
    O << ", ";
    printBDAddrOperand(MI, 3, O);
    return;
    break;
  case 8:
    // LOC, LOCG
    printCond4Operand(MI, 5, O);
    O << "\t";
    printOperand(MI, 0, O);
    O << ", ";
    printBDAddrOperand(MI, 2, O);
    return;
    break;
  case 9:
    // LOCGHI, LOCGR, LOCHI, LOCR
    printCond4Operand(MI, 3, O);
    O << "\t";
    printOperand(MI, 0, O);
    O << ", ";
    break;
  case 10:
    // STOC, STOCG
    printCond4Operand(MI, 4, O);
    O << "\t";
    printOperand(MI, 0, O);
    O << ", ";
    printBDAddrOperand(MI, 1, O);
    return;
    break;
  case 11:
    // SVC
    printU8ImmOperand(MI, 0, O);
    return;
    break;
  }


  // Fragment 1 encoded into 4 bits for 11 unique commands.
  switch ((Bits >> 18) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A, ADB, ADBR, AEB, AEBR, AFI, AG, AGF, AGFI, AGFR, AGHI, AGHIK, AGR, A...
    O << ", ";
    break;
  case 1:
    // AsmBC, PFD
    printBDXAddrOperand(MI, 1, O);
    return;
    break;
  case 2:
    // AsmBCR, CGRB, CGRJ, CGRT, CLGRB, CLGRJ, CLGRT, CLRB, CLRJ, CLRT, CRB, ...
    printOperand(MI, 1, O);
    break;
  case 3:
    // AsmBRC, AsmBRCL, PFDRL
    printPCRelOperand(MI, 1, O);
    return;
    break;
  case 4:
    // AsmEAltBR, AsmEBR, AsmHAltBR, AsmHBR, AsmHEBR, AsmLAltBR, AsmLBR, AsmL...
    return;
    break;
  case 5:
    // BCR
    O << "r\t";
    printOperand(MI, 2, O);
    return;
    break;
  case 6:
    // BRC, BRCL
    O << "\t";
    printPCRelOperand(MI, 2, O);
    return;
    break;
  case 7:
    // CGIB, CGIJ, CIB, CIJ
    printS8ImmOperand(MI, 1, O);
    O << ", ";
    break;
  case 8:
    // CGIT, CIT, LOCGHI, LOCHI
    printS16ImmOperand(MI, 1, O);
    return;
    break;
  case 9:
    // CLFIT, CLGIT
    printU16ImmOperand(MI, 1, O);
    return;
    break;
  case 10:
    // CLGIB, CLGIJ, CLIB, CLIJ
    printU8ImmOperand(MI, 1, O);
    O << ", ";
    break;
  }


  // Fragment 2 encoded into 5 bits for 30 unique commands.
  switch ((Bits >> 22) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A, ADB, AEB, AG, AGF, AH, AHY, AL, ALC, ALCG, ALG, ALGF, ALY, AY, DDB,...
    printBDXAddrOperand(MI, 2, O);
    break;
  case 1:
    // ADBR, AEBR, AGFR, AGR, ALCGR, ALCR, ALGFR, ALGR, ALR, AR, AXBR, AsmEAl...
    printOperand(MI, 2, O);
    break;
  case 2:
    // AFI, AGFI, AIH, MSFI, MSGFI
    printS32ImmOperand(MI, 2, O);
    return;
    break;
  case 3:
    // AGHI, AHI, AsmEAltLOCGHI, AsmEAltLOCHI, AsmELOCGHI, AsmELOCHI, AsmHAlt...
    printS16ImmOperand(MI, 2, O);
    break;
  case 4:
    // AGHIK, AGRK, AHIK, ALGHSIK, ALGRK, ALHSIK, ALRK, ARK, AsmCGRB, AsmCGRJ...
    printOperand(MI, 1, O);
    break;
  case 5:
    // AGSI, ASI
    printS8ImmOperand(MI, 2, O);
    return;
    break;
  case 6:
    // ALFI, ALGFI, NIHF, NILF, OIHF, OILF, SLFI, SLGFI, XIHF, XILF
    printU32ImmOperand(MI, 2, O);
    return;
    break;
  case 7:
    // AsmBCR, CGRT, CLGRT, CLRT, CRT, LOCGR, LOCR
    return;
    break;
  case 8:
    // AsmCGIB, AsmCGIJ, AsmCIB, AsmCIJ, AsmJEAltCGIB, AsmJEAltCGIJ, AsmJEAlt...
    printS8ImmOperand(MI, 1, O);
    O << ", ";
    break;
  case 9:
    // AsmCGIT, AsmCIT, AsmJEAltCGIT, AsmJEAltCIT, AsmJECGIT, AsmJECIT, AsmJH...
    printS16ImmOperand(MI, 1, O);
    break;
  case 10:
    // AsmCLFIT, AsmCLGIT, AsmJEAltCLFIT, AsmJEAltCLGIT, AsmJECLFIT, AsmJECLG...
    printU16ImmOperand(MI, 1, O);
    break;
  case 11:
    // AsmCLGIB, AsmCLGIJ, AsmCLIB, AsmCLIJ, AsmJEAltCLGIB, AsmJEAltCLGIJ, As...
    printU8ImmOperand(MI, 1, O);
    O << ", ";
    break;
  case 12:
    // AsmEAltLOC, AsmEAltLOCG, AsmELOC, AsmELOCG, AsmHAltLOC, AsmHAltLOCG, A...
    printBDAddrOperand(MI, 2, O);
    break;
  case 13:
    // AsmEAltSTOC, AsmEAltSTOCG, AsmESTOC, AsmESTOCG, AsmHAltSTOC, AsmHAltST...
    printBDAddrOperand(MI, 1, O);
    break;
  case 14:
    // BRAS, BRASL
    printPCRelTLSOperand(MI, 1, O);
    return;
    break;
  case 15:
    // BRCT, BRCTG
    printPCRelOperand(MI, 2, O);
    return;
    break;
  case 16:
    // C, CDB, CEB, CG, CGF, CGH, CH, CHF, CHY, CL, CLG, CLGF, CLHF, CLY, CY,...
    printBDXAddrOperand(MI, 1, O);
    break;
  case 17:
    // CDLFBR, CDLGBR, CELFBR, CELGBR, CFDBR, CFEBR, CFXBR, CGDBR, CGEBR, CGX...
    printU4ImmOperand(MI, 1, O);
    O << ", ";
    printOperand(MI, 2, O);
    break;
  case 18:
    // CFI, CGFI, CIH, LGFI
    printS32ImmOperand(MI, 1, O);
    return;
    break;
  case 19:
    // CGFRL, CGHRL, CGRL, CHRL, CLGFRL, CLGHRL, CLGRL, CLHRL, CLRL, CRL, EXR...
    printPCRelOperand(MI, 1, O);
    return;
    break;
  case 20:
    // CGIB, CIB, CLGIB, CLIB
    printBDAddrOperand(MI, 3, O);
    return;
    break;
  case 21:
    // CGIJ, CIJ, CLGIJ, CLIJ
    printPCRelOperand(MI, 3, O);
    return;
    break;
  case 22:
    // CGRB, CGRJ, CLGRB, CLGRJ, CLRB, CLRJ, CRB, CRJ
    O << ", ";
    break;
  case 23:
    // CLFHSI, CLGHSI, CLHHSI, IIHH, IIHL, IILH, IILL, NIHH, NIHL, NILH, NILL...
    printU16ImmOperand(MI, 2, O);
    return;
    break;
  case 24:
    // CLFI, CLGFI, CLIH, IIHF, IILF, LLIHF, LLILF
    printU32ImmOperand(MI, 1, O);
    return;
    break;
  case 25:
    // CLI, CLIY, MVI, MVIY, NI, NIY, OI, OIY, TM, TMY, XI, XIY
    printU8ImmOperand(MI, 2, O);
    return;
    break;
  case 26:
    // EAR
    printAccessRegOperand(MI, 1, O);
    return;
    break;
  case 27:
    // ICM, ICMH, ICMY
    printU4ImmOperand(MI, 2, O);
    O << ", ";
    printBDAddrOperand(MI, 3, O);
    return;
    break;
  case 28:
    // VGEF, VGEG
    printBDVAddrOperand(MI, 2, O);
    O << ", ";
    break;
  case 29:
    // VSCEF, VSCEG
    printBDVAddrOperand(MI, 1, O);
    O << ", ";
    break;
  }


  // Fragment 3 encoded into 4 bits for 12 unique commands.
  switch ((Bits >> 27) & 15) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // A, ADB, ADBR, AEB, AEBR, AG, AGF, AGFR, AGHI, AGR, AH, AHI, AHY, AL, A...
    return;
    break;
  case 1:
    // AGHIK, AGRK, AHIK, ALGHSIK, ALGRK, ALHSIK, ALRK, ARK, AsmCGIT, AsmCGRB...
    O << ", ";
    break;
  case 2:
    // AsmCGIB, AsmCGIJ, AsmCIB, AsmCIJ, AsmCLGIB, AsmCLGIJ, AsmCLIB, AsmCLIJ
    printU4ImmOperand(MI, 2, O);
    O << ", ";
    break;
  case 3:
    // AsmJEAltCGIB, AsmJEAltCIB, AsmJEAltCLGIB, AsmJEAltCLIB, AsmJECGIB, Asm...
    printBDAddrOperand(MI, 2, O);
    return;
    break;
  case 4:
    // AsmJEAltCGIJ, AsmJEAltCIJ, AsmJEAltCLGIJ, AsmJEAltCLIJ, AsmJECGIJ, Asm...
    printPCRelOperand(MI, 2, O);
    return;
    break;
  case 5:
    // CGRB, CLGRB, CLRB, CRB
    printBDAddrOperand(MI, 3, O);
    return;
    break;
  case 6:
    // CGRJ, CLGRJ, CLRJ, CRJ
    printPCRelOperand(MI, 3, O);
    return;
    break;
  case 7:
    // VGEF
    printU2ImmOperand(MI, 5, O);
    return;
    break;
  case 8:
    // VGEG
    printU1ImmOperand(MI, 5, O);
    return;
    break;
  case 9:
    // VGMB, VGMF, VGMG, VGMH
    printU8ImmOperand(MI, 2, O);
    return;
    break;
  case 10:
    // VSCEF
    printU2ImmOperand(MI, 4, O);
    return;
    break;
  case 11:
    // VSCEG
    printU1ImmOperand(MI, 4, O);
    return;
    break;
  }


  // Fragment 4 encoded into 5 bits for 25 unique commands.
  switch ((Bits >> 31) & 31) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // AGHIK, AHIK, ALGHSIK, ALHSIK
    printS16ImmOperand(MI, 2, O);
    return;
    break;
  case 1:
    // AGRK, ALGRK, ALRK, ARK, NGRK, NRK, OGRK, ORK, SGRK, SLGRK, SLRK, SRK, ...
    printOperand(MI, 2, O);
    break;
  case 2:
    // AsmCGIB, AsmCIB, AsmCLGIB, AsmCLIB, CS, CSG, CSY, VLVGB, VLVGF, VLVGG,...
    printBDAddrOperand(MI, 3, O);
    return;
    break;
  case 3:
    // AsmCGIJ, AsmCIJ, AsmCLGIJ, AsmCLIJ
    printPCRelOperand(MI, 3, O);
    return;
    break;
  case 4:
    // AsmCGIT, AsmCGRB, AsmCGRJ, AsmCGRT, AsmCIT, AsmCLFIT, AsmCLGIT, AsmCLG...
    printU4ImmOperand(MI, 2, O);
    break;
  case 5:
    // AsmJEAltCGRB, AsmJEAltCLGRB, AsmJEAltCLRB, AsmJEAltCRB, AsmJECGRB, Asm...
    printBDAddrOperand(MI, 2, O);
    return;
    break;
  case 6:
    // AsmJEAltCGRJ, AsmJEAltCLGRJ, AsmJEAltCLRJ, AsmJEAltCRJ, AsmJECGRJ, Asm...
    printPCRelOperand(MI, 2, O);
    return;
    break;
  case 7:
    // AsmLOC, AsmLOCG, LCBB, VLBB, VSTEB
    printU4ImmOperand(MI, 4, O);
    return;
    break;
  case 8:
    // AsmLOCGHI, AsmLOCGR, AsmLOCHI, AsmLOCR, AsmSTOC, AsmSTOCG, CDLFBR, CDL...
    printU4ImmOperand(MI, 3, O);
    return;
    break;
  case 9:
    // CPSDRdd, CPSDRds, CPSDRsd, CPSDRss
    printOperand(MI, 1, O);
    return;
    break;
  case 10:
    // MADB, MAEB, MSDB, MSEB
    printBDXAddrOperand(MI, 3, O);
    return;
    break;
  case 11:
    // MADBR, MAEBR, MSDBR, MSEBR, VERIMB, VERIMF, VERIMG, VERIMH
    printOperand(MI, 3, O);
    break;
  case 12:
    // RISBG, RISBG32, RISBGN, RISBHG, RISBLG, RNSBG, ROSBG, RXSBG
    printU8ImmOperand(MI, 3, O);
    O << ", ";
    printU8ImmOperand(MI, 4, O);
    O << ", ";
    printU6ImmOperand(MI, 5, O);
    return;
    break;
  case 13:
    // VFTCIDB, WFTCIDB
    printU12ImmOperand(MI, 2, O);
    return;
    break;
  case 14:
    // VLEB
    printU4ImmOperand(MI, 5, O);
    return;
    break;
  case 15:
    // VLEF
    printU2ImmOperand(MI, 5, O);
    return;
    break;
  case 16:
    // VLEG
    printU1ImmOperand(MI, 5, O);
    return;
    break;
  case 17:
    // VLEH
    printU3ImmOperand(MI, 5, O);
    return;
    break;
  case 18:
    // VLEIF
    printU2ImmOperand(MI, 3, O);
    return;
    break;
  case 19:
    // VLEIG
    printU1ImmOperand(MI, 3, O);
    return;
    break;
  case 20:
    // VLEIH
    printU3ImmOperand(MI, 3, O);
    return;
    break;
  case 21:
    // VREPB, VREPF, VREPG, VREPH
    printU16ImmOperand(MI, 2, O);
    return;
    break;
  case 22:
    // VSTEF
    printU2ImmOperand(MI, 4, O);
    return;
    break;
  case 23:
    // VSTEG
    printU1ImmOperand(MI, 4, O);
    return;
    break;
  case 24:
    // VSTEH
    printU3ImmOperand(MI, 4, O);
    return;
    break;
  }


  // Fragment 5 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 36) & 1) {
    // AsmCGRB, AsmCGRJ, AsmCLGRB, AsmCLGRJ, AsmCLRB, AsmCLRJ, AsmCRB, AsmCRJ...
    O << ", ";
  } else {
    // AGRK, ALGRK, ALRK, ARK, AsmCGIT, AsmCGRT, AsmCIT, AsmCLFIT, AsmCLGIT, ...
    return;
  }


  // Fragment 6 encoded into 3 bits for 6 unique commands.
  switch ((Bits >> 37) & 7) {
  default: llvm_unreachable("Invalid command number.");
  case 0:
    // AsmCGRB, AsmCLGRB, AsmCLRB, AsmCRB
    printBDAddrOperand(MI, 3, O);
    return;
    break;
  case 1:
    // AsmCGRJ, AsmCLGRJ, AsmCLRJ, AsmCRJ
    printPCRelOperand(MI, 3, O);
    return;
    break;
  case 2:
    // VACCCQ, VACQ, VFMADB, VFMSDB, VGFMAB, VGFMAF, VGFMAG, VGFMAH, VMAEB, V...
    printOperand(MI, 3, O);
    break;
  case 3:
    // VCDGB, VCDLGB, VCGDB, VCLGDB, VFAEB, VFAEBS, VFAEF, VFAEFS, VFAEH, VFA...
    printU4ImmOperand(MI, 3, O);
    return;
    break;
  case 4:
    // VERIMB, VERIMF, VERIMG, VERIMH
    printU8ImmOperand(MI, 4, O);
    return;
    break;
  case 5:
    // VSLDB
    printU8ImmOperand(MI, 3, O);
    return;
    break;
  }


  // Fragment 7 encoded into 1 bits for 2 unique commands.
  if ((Bits >> 40) & 1) {
    // VSTRCB, VSTRCBS, VSTRCF, VSTRCFS, VSTRCH, VSTRCHS, VSTRCZB, VSTRCZBS, ...
    O << ", ";
    printU4ImmOperand(MI, 4, O);
    return;
  } else {
    // VACCCQ, VACQ, VFMADB, VFMSDB, VGFMAB, VGFMAF, VGFMAG, VGFMAH, VMAEB, V...
    return;
  }

}


/// getRegisterName - This method is automatically generated by tblgen
/// from the register set description.  This returns the assembler name
/// for the specified register.
const char *SystemZInstPrinter::getRegisterName(unsigned RegNo) {
  assert(RegNo && RegNo < 162 && "Invalid register number!");

  static const char AsmStrs[] = {
  /* 0 */ 'f', '1', '0', 0,
  /* 4 */ 'r', '1', '0', 0,
  /* 8 */ 'v', '1', '0', 0,
  /* 12 */ 'v', '2', '0', 0,
  /* 16 */ 'v', '3', '0', 0,
  /* 20 */ 'f', '0', 0,
  /* 23 */ 'r', '0', 0,
  /* 26 */ 'v', '0', 0,
  /* 29 */ 'f', '1', '1', 0,
  /* 33 */ 'r', '1', '1', 0,
  /* 37 */ 'v', '1', '1', 0,
  /* 41 */ 'v', '2', '1', 0,
  /* 45 */ 'v', '3', '1', 0,
  /* 49 */ 'f', '1', 0,
  /* 52 */ 'r', '1', 0,
  /* 55 */ 'v', '1', 0,
  /* 58 */ 'f', '1', '2', 0,
  /* 62 */ 'r', '1', '2', 0,
  /* 66 */ 'v', '1', '2', 0,
  /* 70 */ 'v', '2', '2', 0,
  /* 74 */ 'f', '2', 0,
  /* 77 */ 'r', '2', 0,
  /* 80 */ 'v', '2', 0,
  /* 83 */ 'f', '1', '3', 0,
  /* 87 */ 'r', '1', '3', 0,
  /* 91 */ 'v', '1', '3', 0,
  /* 95 */ 'v', '2', '3', 0,
  /* 99 */ 'f', '3', 0,
  /* 102 */ 'r', '3', 0,
  /* 105 */ 'v', '3', 0,
  /* 108 */ 'f', '1', '4', 0,
  /* 112 */ 'r', '1', '4', 0,
  /* 116 */ 'v', '1', '4', 0,
  /* 120 */ 'v', '2', '4', 0,
  /* 124 */ 'f', '4', 0,
  /* 127 */ 'r', '4', 0,
  /* 130 */ 'v', '4', 0,
  /* 133 */ 'f', '1', '5', 0,
  /* 137 */ 'r', '1', '5', 0,
  /* 141 */ 'v', '1', '5', 0,
  /* 145 */ 'v', '2', '5', 0,
  /* 149 */ 'f', '5', 0,
  /* 152 */ 'r', '5', 0,
  /* 155 */ 'v', '5', 0,
  /* 158 */ 'v', '1', '6', 0,
  /* 162 */ 'v', '2', '6', 0,
  /* 166 */ 'f', '6', 0,
  /* 169 */ 'r', '6', 0,
  /* 172 */ 'v', '6', 0,
  /* 175 */ 'v', '1', '7', 0,
  /* 179 */ 'v', '2', '7', 0,
  /* 183 */ 'f', '7', 0,
  /* 186 */ 'r', '7', 0,
  /* 189 */ 'v', '7', 0,
  /* 192 */ 'v', '1', '8', 0,
  /* 196 */ 'v', '2', '8', 0,
  /* 200 */ 'f', '8', 0,
  /* 203 */ 'r', '8', 0,
  /* 206 */ 'v', '8', 0,
  /* 209 */ 'v', '1', '9', 0,
  /* 213 */ 'v', '2', '9', 0,
  /* 217 */ 'f', '9', 0,
  /* 220 */ 'r', '9', 0,
  /* 223 */ 'v', '9', 0,
  /* 226 */ 'c', 'c', 0,
  };

  static const uint8_t RegAsmOffset[] = {
    226, 26, 55, 80, 105, 130, 155, 172, 189, 206, 223, 8, 37, 66, 
    91, 116, 141, 158, 175, 192, 209, 12, 41, 70, 95, 120, 145, 162, 
    179, 196, 213, 16, 45, 20, 49, 74, 99, 124, 149, 166, 183, 200, 
    217, 0, 29, 58, 83, 108, 133, 158, 175, 192, 209, 12, 41, 70, 
    95, 120, 145, 162, 179, 196, 213, 16, 45, 20, 49, 124, 149, 200, 
    217, 58, 83, 20, 49, 74, 99, 124, 149, 166, 183, 200, 217, 0, 
    29, 58, 83, 108, 133, 158, 175, 192, 209, 12, 41, 70, 95, 120, 
    145, 162, 179, 196, 213, 16, 45, 23, 52, 77, 102, 127, 152, 169, 
    186, 203, 220, 4, 33, 62, 87, 112, 137, 23, 52, 77, 102, 127, 
    152, 169, 186, 203, 220, 4, 33, 62, 87, 112, 137, 23, 52, 77, 
    102, 127, 152, 169, 186, 203, 220, 4, 33, 62, 87, 112, 137, 23, 
    77, 127, 169, 203, 4, 62, 112, 
  };

  assert (*(AsmStrs+RegAsmOffset[RegNo-1]) &&
          "Invalid alt name index for register!");
  return AsmStrs+RegAsmOffset[RegNo-1];
}

#ifdef PRINT_ALIAS_INSTR
#undef PRINT_ALIAS_INSTR

bool SystemZInstPrinter::printAliasInstr(const MCInst *MI, raw_ostream &OS) {
  const char *AsmString;
  switch (MI->getOpcode()) {
  default: return false;
  case SystemZ::VFAEB:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEB VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaeb	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEBS:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEBS VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaebs	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEF:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEF VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaef	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEFS:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEFS VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaefs	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEH:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEH VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaeh	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEHS:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEHS VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaehs	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEZB:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEZB VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaezb	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEZBS:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEZBS VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaezbs	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEZF:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEZF VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaezf	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEZFS:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEZFS VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaezfs	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEZH:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEZH VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaezh	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VFAEZHS:
    if (MI->getNumOperands() == 4 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isImm() &&
        MI->getOperand(3).getImm() == 0) {
      // (VFAEZHS VR128:$V1, VR128:$V2, VR128:$V3, 0)
      AsmString = "vfaezhs	$\x01, $\x02, $\x03";
      break;
    }
    return false;
  case SystemZ::VSTRCB:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCB VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrcb	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCBS:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCBS VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrcbs	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCF:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCF VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrcf	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCFS:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCFS VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrcfs	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCH:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCH VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrch	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCHS:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCHS VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrchs	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCZB:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCZB VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrczb	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCZBS:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCZBS VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrczbs	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCZF:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCZF VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrczf	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCZFS:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCZFS VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrczfs	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCZH:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCZH VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrczh	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  case SystemZ::VSTRCZHS:
    if (MI->getNumOperands() == 5 &&
        MI->getOperand(0).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(0).getReg()) &&
        MI->getOperand(1).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(1).getReg()) &&
        MI->getOperand(2).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(2).getReg()) &&
        MI->getOperand(3).isReg() &&
        MRI.getRegClass(SystemZ::VR128BitRegClassID).contains(MI->getOperand(3).getReg()) &&
        MI->getOperand(4).isImm() &&
        MI->getOperand(4).getImm() == 0) {
      // (VSTRCZHS VR128:$V1, VR128:$V2, VR128:$V3, VR128:$V4, 0)
      AsmString = "vstrczhs	$\x01, $\x02, $\x03, $\x04";
      break;
    }
    return false;
  }

  unsigned I = 0;
  while (AsmString[I] != ' ' && AsmString[I] != '\t' &&
         AsmString[I] != '$' && AsmString[I] != '\0')
    ++I;
  OS << '\t' << StringRef(AsmString, I);
  if (AsmString[I] != '\0') {
    if (AsmString[I] == ' ' || AsmString[I] == '\t')      OS << '\t';
    do {
      if (AsmString[I] == '$') {
        ++I;
        if (AsmString[I] == (char)0xff) {
          ++I;
          int OpIdx = AsmString[I++] - 1;
          int PrintMethodIdx = AsmString[I++] - 1;
          printCustomAliasOperand(MI, OpIdx, PrintMethodIdx, OS);
        } else
          printOperand(MI, unsigned(AsmString[I++]) - 1, OS);
      } else {
        OS << AsmString[I++];
      }
    } while (AsmString[I] != '\0');
  }

  return true;
}

void SystemZInstPrinter::printCustomAliasOperand(
         const MCInst *MI, unsigned OpIdx,
         unsigned PrintMethodIdx,
         raw_ostream &OS) {
  llvm_unreachable("Unknown PrintMethod kind");
}

#endif // PRINT_ALIAS_INSTR
