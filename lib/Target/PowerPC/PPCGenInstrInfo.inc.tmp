/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace PPC {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    CFI_INSTRUCTION	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    STACKMAP	= 17,
    PATCHPOINT	= 18,
    LOAD_STACK_GUARD	= 19,
    STATEPOINT	= 20,
    LOCAL_ESCAPE	= 21,
    FAULTING_LOAD_OP	= 22,
    PATCHABLE_OP	= 23,
    PATCHABLE_FUNCTION_ENTER	= 24,
    PATCHABLE_RET	= 25,
    G_ADD	= 26,
    G_OR	= 27,
    G_BR	= 28,
    ADD4	= 29,
    ADD4TLS	= 30,
    ADD4o	= 31,
    ADD8	= 32,
    ADD8TLS	= 33,
    ADD8TLS_	= 34,
    ADD8o	= 35,
    ADDC	= 36,
    ADDC8	= 37,
    ADDC8o	= 38,
    ADDCo	= 39,
    ADDE	= 40,
    ADDE8	= 41,
    ADDE8o	= 42,
    ADDEo	= 43,
    ADDI	= 44,
    ADDI8	= 45,
    ADDIC	= 46,
    ADDIC8	= 47,
    ADDICo	= 48,
    ADDIS	= 49,
    ADDIS8	= 50,
    ADDISdtprelHA	= 51,
    ADDISdtprelHA32	= 52,
    ADDISgotTprelHA	= 53,
    ADDIStlsgdHA	= 54,
    ADDIStlsldHA	= 55,
    ADDIStocHA	= 56,
    ADDIdtprelL	= 57,
    ADDIdtprelL32	= 58,
    ADDItlsgdL	= 59,
    ADDItlsgdL32	= 60,
    ADDItlsgdLADDR	= 61,
    ADDItlsgdLADDR32	= 62,
    ADDItlsldL	= 63,
    ADDItlsldL32	= 64,
    ADDItlsldLADDR	= 65,
    ADDItlsldLADDR32	= 66,
    ADDItocL	= 67,
    ADDME	= 68,
    ADDME8	= 69,
    ADDME8o	= 70,
    ADDMEo	= 71,
    ADDZE	= 72,
    ADDZE8	= 73,
    ADDZE8o	= 74,
    ADDZEo	= 75,
    ADJCALLSTACKDOWN	= 76,
    ADJCALLSTACKUP	= 77,
    AND	= 78,
    AND8	= 79,
    AND8o	= 80,
    ANDC	= 81,
    ANDC8	= 82,
    ANDC8o	= 83,
    ANDCo	= 84,
    ANDISo	= 85,
    ANDISo8	= 86,
    ANDIo	= 87,
    ANDIo8	= 88,
    ANDIo_1_EQ_BIT	= 89,
    ANDIo_1_EQ_BIT8	= 90,
    ANDIo_1_GT_BIT	= 91,
    ANDIo_1_GT_BIT8	= 92,
    ANDo	= 93,
    ATOMIC_CMP_SWAP_I16	= 94,
    ATOMIC_CMP_SWAP_I32	= 95,
    ATOMIC_CMP_SWAP_I64	= 96,
    ATOMIC_CMP_SWAP_I8	= 97,
    ATOMIC_LOAD_ADD_I16	= 98,
    ATOMIC_LOAD_ADD_I32	= 99,
    ATOMIC_LOAD_ADD_I64	= 100,
    ATOMIC_LOAD_ADD_I8	= 101,
    ATOMIC_LOAD_AND_I16	= 102,
    ATOMIC_LOAD_AND_I32	= 103,
    ATOMIC_LOAD_AND_I64	= 104,
    ATOMIC_LOAD_AND_I8	= 105,
    ATOMIC_LOAD_MAX_I16	= 106,
    ATOMIC_LOAD_MAX_I32	= 107,
    ATOMIC_LOAD_MAX_I64	= 108,
    ATOMIC_LOAD_MAX_I8	= 109,
    ATOMIC_LOAD_MIN_I16	= 110,
    ATOMIC_LOAD_MIN_I32	= 111,
    ATOMIC_LOAD_MIN_I64	= 112,
    ATOMIC_LOAD_MIN_I8	= 113,
    ATOMIC_LOAD_NAND_I16	= 114,
    ATOMIC_LOAD_NAND_I32	= 115,
    ATOMIC_LOAD_NAND_I64	= 116,
    ATOMIC_LOAD_NAND_I8	= 117,
    ATOMIC_LOAD_OR_I16	= 118,
    ATOMIC_LOAD_OR_I32	= 119,
    ATOMIC_LOAD_OR_I64	= 120,
    ATOMIC_LOAD_OR_I8	= 121,
    ATOMIC_LOAD_SUB_I16	= 122,
    ATOMIC_LOAD_SUB_I32	= 123,
    ATOMIC_LOAD_SUB_I64	= 124,
    ATOMIC_LOAD_SUB_I8	= 125,
    ATOMIC_LOAD_UMAX_I16	= 126,
    ATOMIC_LOAD_UMAX_I32	= 127,
    ATOMIC_LOAD_UMAX_I64	= 128,
    ATOMIC_LOAD_UMAX_I8	= 129,
    ATOMIC_LOAD_UMIN_I16	= 130,
    ATOMIC_LOAD_UMIN_I32	= 131,
    ATOMIC_LOAD_UMIN_I64	= 132,
    ATOMIC_LOAD_UMIN_I8	= 133,
    ATOMIC_LOAD_XOR_I16	= 134,
    ATOMIC_LOAD_XOR_I32	= 135,
    ATOMIC_LOAD_XOR_I64	= 136,
    ATOMIC_LOAD_XOR_I8	= 137,
    ATOMIC_SWAP_I16	= 138,
    ATOMIC_SWAP_I32	= 139,
    ATOMIC_SWAP_I64	= 140,
    ATOMIC_SWAP_I8	= 141,
    ATTN	= 142,
    B	= 143,
    BA	= 144,
    BC	= 145,
    BCC	= 146,
    BCCA	= 147,
    BCCCTR	= 148,
    BCCCTR8	= 149,
    BCCCTRL	= 150,
    BCCCTRL8	= 151,
    BCCL	= 152,
    BCCLA	= 153,
    BCCLR	= 154,
    BCCLRL	= 155,
    BCCTR	= 156,
    BCCTR8	= 157,
    BCCTR8n	= 158,
    BCCTRL	= 159,
    BCCTRL8	= 160,
    BCCTRL8n	= 161,
    BCCTRLn	= 162,
    BCCTRn	= 163,
    BCDCFNo	= 164,
    BCDCFSQo	= 165,
    BCDCFZo	= 166,
    BCDCPSGNo	= 167,
    BCDCTNo	= 168,
    BCDCTSQo	= 169,
    BCDCTZo	= 170,
    BCDSETSGNo	= 171,
    BCDSRo	= 172,
    BCDSo	= 173,
    BCDTRUNCo	= 174,
    BCDUSo	= 175,
    BCDUTRUNCo	= 176,
    BCL	= 177,
    BCLR	= 178,
    BCLRL	= 179,
    BCLRLn	= 180,
    BCLRn	= 181,
    BCLalways	= 182,
    BCLn	= 183,
    BCTR	= 184,
    BCTR8	= 185,
    BCTRL	= 186,
    BCTRL8	= 187,
    BCTRL8_LDinto_toc	= 188,
    BCn	= 189,
    BDNZ	= 190,
    BDNZ8	= 191,
    BDNZA	= 192,
    BDNZAm	= 193,
    BDNZAp	= 194,
    BDNZL	= 195,
    BDNZLA	= 196,
    BDNZLAm	= 197,
    BDNZLAp	= 198,
    BDNZLR	= 199,
    BDNZLR8	= 200,
    BDNZLRL	= 201,
    BDNZLRLm	= 202,
    BDNZLRLp	= 203,
    BDNZLRm	= 204,
    BDNZLRp	= 205,
    BDNZLm	= 206,
    BDNZLp	= 207,
    BDNZm	= 208,
    BDNZp	= 209,
    BDZ	= 210,
    BDZ8	= 211,
    BDZA	= 212,
    BDZAm	= 213,
    BDZAp	= 214,
    BDZL	= 215,
    BDZLA	= 216,
    BDZLAm	= 217,
    BDZLAp	= 218,
    BDZLR	= 219,
    BDZLR8	= 220,
    BDZLRL	= 221,
    BDZLRLm	= 222,
    BDZLRLp	= 223,
    BDZLRm	= 224,
    BDZLRp	= 225,
    BDZLm	= 226,
    BDZLp	= 227,
    BDZm	= 228,
    BDZp	= 229,
    BL	= 230,
    BL8	= 231,
    BL8_NOP	= 232,
    BL8_NOP_TLS	= 233,
    BL8_TLS	= 234,
    BL8_TLS_	= 235,
    BLA	= 236,
    BLA8	= 237,
    BLA8_NOP	= 238,
    BLR	= 239,
    BLR8	= 240,
    BLRL	= 241,
    BL_TLS	= 242,
    BPERMD	= 243,
    BRINC	= 244,
    CLRBHRB	= 245,
    CLRLSLDI	= 246,
    CLRLSLDIo	= 247,
    CLRLSLWI	= 248,
    CLRLSLWIo	= 249,
    CLRRDI	= 250,
    CLRRDIo	= 251,
    CLRRWI	= 252,
    CLRRWIo	= 253,
    CMPB	= 254,
    CMPB8	= 255,
    CMPD	= 256,
    CMPDI	= 257,
    CMPEQB	= 258,
    CMPLD	= 259,
    CMPLDI	= 260,
    CMPLW	= 261,
    CMPLWI	= 262,
    CMPRB	= 263,
    CMPRB8	= 264,
    CMPW	= 265,
    CMPWI	= 266,
    CNTLZD	= 267,
    CNTLZDo	= 268,
    CNTLZW	= 269,
    CNTLZW8	= 270,
    CNTLZW8o	= 271,
    CNTLZWo	= 272,
    CNTTZD	= 273,
    CNTTZDo	= 274,
    CNTTZW	= 275,
    CNTTZW8	= 276,
    CNTTZW8o	= 277,
    CNTTZWo	= 278,
    CP_ABORT	= 279,
    CP_COPY	= 280,
    CP_COPY8	= 281,
    CP_COPY_FIRST	= 282,
    CP_COPYx	= 283,
    CP_PASTE	= 284,
    CP_PASTE8	= 285,
    CP_PASTE8o	= 286,
    CP_PASTE_LAST	= 287,
    CP_PASTEo	= 288,
    CP_PASTEx	= 289,
    CR6SET	= 290,
    CR6UNSET	= 291,
    CRAND	= 292,
    CRANDC	= 293,
    CREQV	= 294,
    CRNAND	= 295,
    CRNOR	= 296,
    CROR	= 297,
    CRORC	= 298,
    CRSET	= 299,
    CRUNSET	= 300,
    CRXOR	= 301,
    DCBA	= 302,
    DCBF	= 303,
    DCBI	= 304,
    DCBST	= 305,
    DCBT	= 306,
    DCBTCT	= 307,
    DCBTDS	= 308,
    DCBTST	= 309,
    DCBTSTCT	= 310,
    DCBTSTDS	= 311,
    DCBTSTT	= 312,
    DCBTSTx	= 313,
    DCBTT	= 314,
    DCBTx	= 315,
    DCBZ	= 316,
    DCBZL	= 317,
    DCCCI	= 318,
    DIVD	= 319,
    DIVDE	= 320,
    DIVDEU	= 321,
    DIVDEUo	= 322,
    DIVDEo	= 323,
    DIVDU	= 324,
    DIVDUo	= 325,
    DIVDo	= 326,
    DIVW	= 327,
    DIVWE	= 328,
    DIVWEU	= 329,
    DIVWEUo	= 330,
    DIVWEo	= 331,
    DIVWU	= 332,
    DIVWUo	= 333,
    DIVWo	= 334,
    DSS	= 335,
    DSSALL	= 336,
    DST	= 337,
    DST64	= 338,
    DSTST	= 339,
    DSTST64	= 340,
    DSTSTT	= 341,
    DSTSTT64	= 342,
    DSTT	= 343,
    DSTT64	= 344,
    DYNALLOC	= 345,
    DYNALLOC8	= 346,
    DYNAREAOFFSET	= 347,
    DYNAREAOFFSET8	= 348,
    EH_SjLj_LongJmp32	= 349,
    EH_SjLj_LongJmp64	= 350,
    EH_SjLj_SetJmp32	= 351,
    EH_SjLj_SetJmp64	= 352,
    EH_SjLj_Setup	= 353,
    EQV	= 354,
    EQV8	= 355,
    EQV8o	= 356,
    EQVo	= 357,
    EVABS	= 358,
    EVADDIW	= 359,
    EVADDSMIAAW	= 360,
    EVADDSSIAAW	= 361,
    EVADDUMIAAW	= 362,
    EVADDUSIAAW	= 363,
    EVADDW	= 364,
    EVAND	= 365,
    EVANDC	= 366,
    EVCMPEQ	= 367,
    EVCMPGTS	= 368,
    EVCMPGTU	= 369,
    EVCMPLTS	= 370,
    EVCMPLTU	= 371,
    EVCNTLSW	= 372,
    EVCNTLZW	= 373,
    EVDIVWS	= 374,
    EVDIVWU	= 375,
    EVEQV	= 376,
    EVEXTSB	= 377,
    EVEXTSH	= 378,
    EVLDD	= 379,
    EVLDDX	= 380,
    EVLDH	= 381,
    EVLDHX	= 382,
    EVLDW	= 383,
    EVLDWX	= 384,
    EVLHHESPLAT	= 385,
    EVLHHESPLATX	= 386,
    EVLHHOSSPLAT	= 387,
    EVLHHOSSPLATX	= 388,
    EVLHHOUSPLAT	= 389,
    EVLHHOUSPLATX	= 390,
    EVLWHE	= 391,
    EVLWHEX	= 392,
    EVLWHOS	= 393,
    EVLWHOSX	= 394,
    EVLWHOU	= 395,
    EVLWHOUX	= 396,
    EVLWHSPLAT	= 397,
    EVLWHSPLATX	= 398,
    EVLWWSPLAT	= 399,
    EVLWWSPLATX	= 400,
    EVMERGEHI	= 401,
    EVMERGEHILO	= 402,
    EVMERGELO	= 403,
    EVMERGELOHI	= 404,
    EVMHEGSMFAA	= 405,
    EVMHEGSMFAN	= 406,
    EVMHEGSMIAA	= 407,
    EVMHEGSMIAN	= 408,
    EVMHEGUMIAA	= 409,
    EVMHEGUMIAN	= 410,
    EVMHESMF	= 411,
    EVMHESMFA	= 412,
    EVMHESMFAAW	= 413,
    EVMHESMFANW	= 414,
    EVMHESMI	= 415,
    EVMHESMIA	= 416,
    EVMHESMIAAW	= 417,
    EVMHESMIANW	= 418,
    EVMHESSF	= 419,
    EVMHESSFA	= 420,
    EVMHESSFAAW	= 421,
    EVMHESSFANW	= 422,
    EVMHESSIAAW	= 423,
    EVMHESSIANW	= 424,
    EVMHEUMI	= 425,
    EVMHEUMIA	= 426,
    EVMHEUMIAAW	= 427,
    EVMHEUMIANW	= 428,
    EVMHEUSIAAW	= 429,
    EVMHEUSIANW	= 430,
    EVMHOGSMFAA	= 431,
    EVMHOGSMFAN	= 432,
    EVMHOGSMIAA	= 433,
    EVMHOGSMIAN	= 434,
    EVMHOGUMIAA	= 435,
    EVMHOGUMIAN	= 436,
    EVMHOSMF	= 437,
    EVMHOSMFA	= 438,
    EVMHOSMFAAW	= 439,
    EVMHOSMFANW	= 440,
    EVMHOSMI	= 441,
    EVMHOSMIA	= 442,
    EVMHOSMIAAW	= 443,
    EVMHOSMIANW	= 444,
    EVMHOSSF	= 445,
    EVMHOSSFA	= 446,
    EVMHOSSFAAW	= 447,
    EVMHOSSFANW	= 448,
    EVMHOSSIAAW	= 449,
    EVMHOSSIANW	= 450,
    EVMHOUMI	= 451,
    EVMHOUMIA	= 452,
    EVMHOUMIAAW	= 453,
    EVMHOUMIANW	= 454,
    EVMHOUSIAAW	= 455,
    EVMHOUSIANW	= 456,
    EVMRA	= 457,
    EVMWHSMF	= 458,
    EVMWHSMFA	= 459,
    EVMWHSMI	= 460,
    EVMWHSMIA	= 461,
    EVMWHSSF	= 462,
    EVMWHSSFA	= 463,
    EVMWHUMI	= 464,
    EVMWHUMIA	= 465,
    EVMWLSMIAAW	= 466,
    EVMWLSMIANW	= 467,
    EVMWLSSIAAW	= 468,
    EVMWLSSIANW	= 469,
    EVMWLUMI	= 470,
    EVMWLUMIA	= 471,
    EVMWLUMIAAW	= 472,
    EVMWLUMIANW	= 473,
    EVMWLUSIAAW	= 474,
    EVMWLUSIANW	= 475,
    EVMWSMF	= 476,
    EVMWSMFA	= 477,
    EVMWSMFAA	= 478,
    EVMWSMFAN	= 479,
    EVMWSMI	= 480,
    EVMWSMIA	= 481,
    EVMWSMIAA	= 482,
    EVMWSMIAN	= 483,
    EVMWSSF	= 484,
    EVMWSSFA	= 485,
    EVMWSSFAA	= 486,
    EVMWSSFAN	= 487,
    EVMWUMI	= 488,
    EVMWUMIA	= 489,
    EVMWUMIAA	= 490,
    EVMWUMIAN	= 491,
    EVNAND	= 492,
    EVNEG	= 493,
    EVNOR	= 494,
    EVOR	= 495,
    EVORC	= 496,
    EVRLW	= 497,
    EVRLWI	= 498,
    EVRNDW	= 499,
    EVSLW	= 500,
    EVSLWI	= 501,
    EVSPLATFI	= 502,
    EVSPLATI	= 503,
    EVSRWIS	= 504,
    EVSRWIU	= 505,
    EVSRWS	= 506,
    EVSRWU	= 507,
    EVSTDD	= 508,
    EVSTDDX	= 509,
    EVSTDH	= 510,
    EVSTDHX	= 511,
    EVSTDW	= 512,
    EVSTDWX	= 513,
    EVSTWHE	= 514,
    EVSTWHEX	= 515,
    EVSTWHO	= 516,
    EVSTWHOX	= 517,
    EVSTWWE	= 518,
    EVSTWWEX	= 519,
    EVSTWWO	= 520,
    EVSTWWOX	= 521,
    EVSUBFSMIAAW	= 522,
    EVSUBFSSIAAW	= 523,
    EVSUBFUMIAAW	= 524,
    EVSUBFUSIAAW	= 525,
    EVSUBFW	= 526,
    EVSUBIFW	= 527,
    EVXOR	= 528,
    EXTLDI	= 529,
    EXTLDIo	= 530,
    EXTLWI	= 531,
    EXTLWIo	= 532,
    EXTRDI	= 533,
    EXTRDIo	= 534,
    EXTRWI	= 535,
    EXTRWIo	= 536,
    EXTSB	= 537,
    EXTSB8	= 538,
    EXTSB8_32_64	= 539,
    EXTSB8o	= 540,
    EXTSBo	= 541,
    EXTSH	= 542,
    EXTSH8	= 543,
    EXTSH8_32_64	= 544,
    EXTSH8o	= 545,
    EXTSHo	= 546,
    EXTSW	= 547,
    EXTSW_32_64	= 548,
    EXTSW_32_64o	= 549,
    EXTSWo	= 550,
    EnforceIEIO	= 551,
    FABSD	= 552,
    FABSDo	= 553,
    FABSS	= 554,
    FABSSo	= 555,
    FADD	= 556,
    FADDS	= 557,
    FADDSo	= 558,
    FADDo	= 559,
    FADDrtz	= 560,
    FCFID	= 561,
    FCFIDS	= 562,
    FCFIDSo	= 563,
    FCFIDU	= 564,
    FCFIDUS	= 565,
    FCFIDUSo	= 566,
    FCFIDUo	= 567,
    FCFIDo	= 568,
    FCMPUD	= 569,
    FCMPUS	= 570,
    FCPSGND	= 571,
    FCPSGNDo	= 572,
    FCPSGNS	= 573,
    FCPSGNSo	= 574,
    FCTID	= 575,
    FCTIDUZ	= 576,
    FCTIDUZo	= 577,
    FCTIDZ	= 578,
    FCTIDZo	= 579,
    FCTIDo	= 580,
    FCTIW	= 581,
    FCTIWUZ	= 582,
    FCTIWUZo	= 583,
    FCTIWZ	= 584,
    FCTIWZo	= 585,
    FCTIWo	= 586,
    FDIV	= 587,
    FDIVS	= 588,
    FDIVSo	= 589,
    FDIVo	= 590,
    FMADD	= 591,
    FMADDS	= 592,
    FMADDSo	= 593,
    FMADDo	= 594,
    FMR	= 595,
    FMRo	= 596,
    FMSUB	= 597,
    FMSUBS	= 598,
    FMSUBSo	= 599,
    FMSUBo	= 600,
    FMUL	= 601,
    FMULS	= 602,
    FMULSo	= 603,
    FMULo	= 604,
    FNABSD	= 605,
    FNABSDo	= 606,
    FNABSS	= 607,
    FNABSSo	= 608,
    FNEGD	= 609,
    FNEGDo	= 610,
    FNEGS	= 611,
    FNEGSo	= 612,
    FNMADD	= 613,
    FNMADDS	= 614,
    FNMADDSo	= 615,
    FNMADDo	= 616,
    FNMSUB	= 617,
    FNMSUBS	= 618,
    FNMSUBSo	= 619,
    FNMSUBo	= 620,
    FRE	= 621,
    FRES	= 622,
    FRESo	= 623,
    FREo	= 624,
    FRIMD	= 625,
    FRIMDo	= 626,
    FRIMS	= 627,
    FRIMSo	= 628,
    FRIND	= 629,
    FRINDo	= 630,
    FRINS	= 631,
    FRINSo	= 632,
    FRIPD	= 633,
    FRIPDo	= 634,
    FRIPS	= 635,
    FRIPSo	= 636,
    FRIZD	= 637,
    FRIZDo	= 638,
    FRIZS	= 639,
    FRIZSo	= 640,
    FRSP	= 641,
    FRSPo	= 642,
    FRSQRTE	= 643,
    FRSQRTES	= 644,
    FRSQRTESo	= 645,
    FRSQRTEo	= 646,
    FSELD	= 647,
    FSELDo	= 648,
    FSELS	= 649,
    FSELSo	= 650,
    FSQRT	= 651,
    FSQRTS	= 652,
    FSQRTSo	= 653,
    FSQRTo	= 654,
    FSUB	= 655,
    FSUBS	= 656,
    FSUBSo	= 657,
    FSUBo	= 658,
    GETtlsADDR	= 659,
    GETtlsADDR32	= 660,
    GETtlsldADDR	= 661,
    GETtlsldADDR32	= 662,
    ICBI	= 663,
    ICBT	= 664,
    ICCCI	= 665,
    INSLWI	= 666,
    INSLWIo	= 667,
    INSRDI	= 668,
    INSRDIo	= 669,
    INSRWI	= 670,
    INSRWIo	= 671,
    ISEL	= 672,
    ISEL8	= 673,
    ISYNC	= 674,
    LA	= 675,
    LAx	= 676,
    LBARX	= 677,
    LBARXL	= 678,
    LBZ	= 679,
    LBZ8	= 680,
    LBZCIX	= 681,
    LBZU	= 682,
    LBZU8	= 683,
    LBZUX	= 684,
    LBZUX8	= 685,
    LBZX	= 686,
    LBZX8	= 687,
    LD	= 688,
    LDARX	= 689,
    LDARXL	= 690,
    LDAT	= 691,
    LDBRX	= 692,
    LDCIX	= 693,
    LDMX	= 694,
    LDU	= 695,
    LDUX	= 696,
    LDX	= 697,
    LDgotTprelL	= 698,
    LDgotTprelL32	= 699,
    LDtoc	= 700,
    LDtocBA	= 701,
    LDtocCPT	= 702,
    LDtocJTI	= 703,
    LDtocL	= 704,
    LFD	= 705,
    LFDU	= 706,
    LFDUX	= 707,
    LFDX	= 708,
    LFIWAX	= 709,
    LFIWZX	= 710,
    LFS	= 711,
    LFSU	= 712,
    LFSUX	= 713,
    LFSX	= 714,
    LHA	= 715,
    LHA8	= 716,
    LHARX	= 717,
    LHARXL	= 718,
    LHAU	= 719,
    LHAU8	= 720,
    LHAUX	= 721,
    LHAUX8	= 722,
    LHAX	= 723,
    LHAX8	= 724,
    LHBRX	= 725,
    LHBRX8	= 726,
    LHZ	= 727,
    LHZ8	= 728,
    LHZCIX	= 729,
    LHZU	= 730,
    LHZU8	= 731,
    LHZUX	= 732,
    LHZUX8	= 733,
    LHZX	= 734,
    LHZX8	= 735,
    LI	= 736,
    LI8	= 737,
    LIS	= 738,
    LIS8	= 739,
    LMW	= 740,
    LSWI	= 741,
    LVEBX	= 742,
    LVEHX	= 743,
    LVEWX	= 744,
    LVSL	= 745,
    LVSR	= 746,
    LVX	= 747,
    LVXL	= 748,
    LWA	= 749,
    LWARX	= 750,
    LWARXL	= 751,
    LWAT	= 752,
    LWAUX	= 753,
    LWAX	= 754,
    LWAX_32	= 755,
    LWA_32	= 756,
    LWBRX	= 757,
    LWBRX8	= 758,
    LWZ	= 759,
    LWZ8	= 760,
    LWZCIX	= 761,
    LWZU	= 762,
    LWZU8	= 763,
    LWZUX	= 764,
    LWZUX8	= 765,
    LWZX	= 766,
    LWZX8	= 767,
    LWZtoc	= 768,
    LXSD	= 769,
    LXSDX	= 770,
    LXSIBZX	= 771,
    LXSIHZX	= 772,
    LXSIWAX	= 773,
    LXSIWZX	= 774,
    LXSSP	= 775,
    LXSSPX	= 776,
    LXV	= 777,
    LXVB16X	= 778,
    LXVD2X	= 779,
    LXVDSX	= 780,
    LXVH8X	= 781,
    LXVL	= 782,
    LXVLL	= 783,
    LXVW4X	= 784,
    LXVWSX	= 785,
    LXVX	= 786,
    MBAR	= 787,
    MCRF	= 788,
    MCRFS	= 789,
    MCRXRX	= 790,
    MFBHRBE	= 791,
    MFCR	= 792,
    MFCR8	= 793,
    MFCTR	= 794,
    MFCTR8	= 795,
    MFDCR	= 796,
    MFFS	= 797,
    MFFSo	= 798,
    MFLR	= 799,
    MFLR8	= 800,
    MFMSR	= 801,
    MFOCRF	= 802,
    MFOCRF8	= 803,
    MFSPR	= 804,
    MFSPR8	= 805,
    MFSR	= 806,
    MFSRIN	= 807,
    MFTB	= 808,
    MFTB8	= 809,
    MFVRSAVE	= 810,
    MFVRSAVEv	= 811,
    MFVSCR	= 812,
    MFVSRD	= 813,
    MFVSRLD	= 814,
    MFVSRWZ	= 815,
    MSGSYNC	= 816,
    MSYNC	= 817,
    MTCRF	= 818,
    MTCRF8	= 819,
    MTCTR	= 820,
    MTCTR8	= 821,
    MTCTR8loop	= 822,
    MTCTRloop	= 823,
    MTDCR	= 824,
    MTFSB0	= 825,
    MTFSB1	= 826,
    MTFSF	= 827,
    MTFSFI	= 828,
    MTFSFIo	= 829,
    MTFSFb	= 830,
    MTFSFo	= 831,
    MTLR	= 832,
    MTLR8	= 833,
    MTMSR	= 834,
    MTMSRD	= 835,
    MTOCRF	= 836,
    MTOCRF8	= 837,
    MTSPR	= 838,
    MTSPR8	= 839,
    MTSR	= 840,
    MTSRIN	= 841,
    MTVRSAVE	= 842,
    MTVRSAVEv	= 843,
    MTVSCR	= 844,
    MTVSRD	= 845,
    MTVSRDD	= 846,
    MTVSRWA	= 847,
    MTVSRWS	= 848,
    MTVSRWZ	= 849,
    MULHD	= 850,
    MULHDU	= 851,
    MULHDUo	= 852,
    MULHDo	= 853,
    MULHW	= 854,
    MULHWU	= 855,
    MULHWUo	= 856,
    MULHWo	= 857,
    MULLD	= 858,
    MULLDo	= 859,
    MULLI	= 860,
    MULLI8	= 861,
    MULLW	= 862,
    MULLWo	= 863,
    MoveGOTtoLR	= 864,
    MovePCtoLR	= 865,
    MovePCtoLR8	= 866,
    NAND	= 867,
    NAND8	= 868,
    NAND8o	= 869,
    NANDo	= 870,
    NEG	= 871,
    NEG8	= 872,
    NEG8o	= 873,
    NEGo	= 874,
    NOP	= 875,
    NOP_GT_PWR6	= 876,
    NOP_GT_PWR7	= 877,
    NOR	= 878,
    NOR8	= 879,
    NOR8o	= 880,
    NORo	= 881,
    OR	= 882,
    OR8	= 883,
    OR8o	= 884,
    ORC	= 885,
    ORC8	= 886,
    ORC8o	= 887,
    ORCo	= 888,
    ORI	= 889,
    ORI8	= 890,
    ORIS	= 891,
    ORIS8	= 892,
    ORo	= 893,
    POPCNTD	= 894,
    POPCNTW	= 895,
    PPC32GOT	= 896,
    PPC32PICGOT	= 897,
    QVALIGNI	= 898,
    QVALIGNIb	= 899,
    QVALIGNIs	= 900,
    QVESPLATI	= 901,
    QVESPLATIb	= 902,
    QVESPLATIs	= 903,
    QVFABS	= 904,
    QVFABSs	= 905,
    QVFADD	= 906,
    QVFADDS	= 907,
    QVFADDSs	= 908,
    QVFCFID	= 909,
    QVFCFIDS	= 910,
    QVFCFIDU	= 911,
    QVFCFIDUS	= 912,
    QVFCFIDb	= 913,
    QVFCMPEQ	= 914,
    QVFCMPEQb	= 915,
    QVFCMPEQbs	= 916,
    QVFCMPGT	= 917,
    QVFCMPGTb	= 918,
    QVFCMPGTbs	= 919,
    QVFCMPLT	= 920,
    QVFCMPLTb	= 921,
    QVFCMPLTbs	= 922,
    QVFCPSGN	= 923,
    QVFCPSGNs	= 924,
    QVFCTID	= 925,
    QVFCTIDU	= 926,
    QVFCTIDUZ	= 927,
    QVFCTIDZ	= 928,
    QVFCTIDb	= 929,
    QVFCTIW	= 930,
    QVFCTIWU	= 931,
    QVFCTIWUZ	= 932,
    QVFCTIWZ	= 933,
    QVFLOGICAL	= 934,
    QVFLOGICALb	= 935,
    QVFLOGICALs	= 936,
    QVFMADD	= 937,
    QVFMADDS	= 938,
    QVFMADDSs	= 939,
    QVFMR	= 940,
    QVFMRb	= 941,
    QVFMRs	= 942,
    QVFMSUB	= 943,
    QVFMSUBS	= 944,
    QVFMSUBSs	= 945,
    QVFMUL	= 946,
    QVFMULS	= 947,
    QVFMULSs	= 948,
    QVFNABS	= 949,
    QVFNABSs	= 950,
    QVFNEG	= 951,
    QVFNEGs	= 952,
    QVFNMADD	= 953,
    QVFNMADDS	= 954,
    QVFNMADDSs	= 955,
    QVFNMSUB	= 956,
    QVFNMSUBS	= 957,
    QVFNMSUBSs	= 958,
    QVFPERM	= 959,
    QVFPERMs	= 960,
    QVFRE	= 961,
    QVFRES	= 962,
    QVFRESs	= 963,
    QVFRIM	= 964,
    QVFRIMs	= 965,
    QVFRIN	= 966,
    QVFRINs	= 967,
    QVFRIP	= 968,
    QVFRIPs	= 969,
    QVFRIZ	= 970,
    QVFRIZs	= 971,
    QVFRSP	= 972,
    QVFRSPs	= 973,
    QVFRSQRTE	= 974,
    QVFRSQRTES	= 975,
    QVFRSQRTESs	= 976,
    QVFSEL	= 977,
    QVFSELb	= 978,
    QVFSELbb	= 979,
    QVFSELbs	= 980,
    QVFSUB	= 981,
    QVFSUBS	= 982,
    QVFSUBSs	= 983,
    QVFTSTNAN	= 984,
    QVFTSTNANb	= 985,
    QVFTSTNANbs	= 986,
    QVFXMADD	= 987,
    QVFXMADDS	= 988,
    QVFXMUL	= 989,
    QVFXMULS	= 990,
    QVFXXCPNMADD	= 991,
    QVFXXCPNMADDS	= 992,
    QVFXXMADD	= 993,
    QVFXXMADDS	= 994,
    QVFXXNPMADD	= 995,
    QVFXXNPMADDS	= 996,
    QVGPCI	= 997,
    QVLFCDUX	= 998,
    QVLFCDUXA	= 999,
    QVLFCDX	= 1000,
    QVLFCDXA	= 1001,
    QVLFCSUX	= 1002,
    QVLFCSUXA	= 1003,
    QVLFCSX	= 1004,
    QVLFCSXA	= 1005,
    QVLFCSXs	= 1006,
    QVLFDUX	= 1007,
    QVLFDUXA	= 1008,
    QVLFDX	= 1009,
    QVLFDXA	= 1010,
    QVLFDXb	= 1011,
    QVLFIWAX	= 1012,
    QVLFIWAXA	= 1013,
    QVLFIWZX	= 1014,
    QVLFIWZXA	= 1015,
    QVLFSUX	= 1016,
    QVLFSUXA	= 1017,
    QVLFSX	= 1018,
    QVLFSXA	= 1019,
    QVLFSXb	= 1020,
    QVLFSXs	= 1021,
    QVLPCLDX	= 1022,
    QVLPCLSX	= 1023,
    QVLPCLSXint	= 1024,
    QVLPCRDX	= 1025,
    QVLPCRSX	= 1026,
    QVSTFCDUX	= 1027,
    QVSTFCDUXA	= 1028,
    QVSTFCDUXI	= 1029,
    QVSTFCDUXIA	= 1030,
    QVSTFCDX	= 1031,
    QVSTFCDXA	= 1032,
    QVSTFCDXI	= 1033,
    QVSTFCDXIA	= 1034,
    QVSTFCSUX	= 1035,
    QVSTFCSUXA	= 1036,
    QVSTFCSUXI	= 1037,
    QVSTFCSUXIA	= 1038,
    QVSTFCSX	= 1039,
    QVSTFCSXA	= 1040,
    QVSTFCSXI	= 1041,
    QVSTFCSXIA	= 1042,
    QVSTFCSXs	= 1043,
    QVSTFDUX	= 1044,
    QVSTFDUXA	= 1045,
    QVSTFDUXI	= 1046,
    QVSTFDUXIA	= 1047,
    QVSTFDX	= 1048,
    QVSTFDXA	= 1049,
    QVSTFDXI	= 1050,
    QVSTFDXIA	= 1051,
    QVSTFDXb	= 1052,
    QVSTFIWX	= 1053,
    QVSTFIWXA	= 1054,
    QVSTFSUX	= 1055,
    QVSTFSUXA	= 1056,
    QVSTFSUXI	= 1057,
    QVSTFSUXIA	= 1058,
    QVSTFSUXs	= 1059,
    QVSTFSX	= 1060,
    QVSTFSXA	= 1061,
    QVSTFSXI	= 1062,
    QVSTFSXIA	= 1063,
    QVSTFSXs	= 1064,
    RESTORE_CR	= 1065,
    RESTORE_CRBIT	= 1066,
    RESTORE_VRSAVE	= 1067,
    RFCI	= 1068,
    RFDI	= 1069,
    RFEBB	= 1070,
    RFI	= 1071,
    RFID	= 1072,
    RFMCI	= 1073,
    RLDCL	= 1074,
    RLDCLo	= 1075,
    RLDCR	= 1076,
    RLDCRo	= 1077,
    RLDIC	= 1078,
    RLDICL	= 1079,
    RLDICL_32_64	= 1080,
    RLDICLo	= 1081,
    RLDICR	= 1082,
    RLDICRo	= 1083,
    RLDICo	= 1084,
    RLDIMI	= 1085,
    RLDIMIo	= 1086,
    RLWIMI	= 1087,
    RLWIMI8	= 1088,
    RLWIMI8o	= 1089,
    RLWIMIbm	= 1090,
    RLWIMIo	= 1091,
    RLWIMIobm	= 1092,
    RLWINM	= 1093,
    RLWINM8	= 1094,
    RLWINM8o	= 1095,
    RLWINMbm	= 1096,
    RLWINMo	= 1097,
    RLWINMobm	= 1098,
    RLWNM	= 1099,
    RLWNM8	= 1100,
    RLWNM8o	= 1101,
    RLWNMbm	= 1102,
    RLWNMo	= 1103,
    RLWNMobm	= 1104,
    ROTRDI	= 1105,
    ROTRDIo	= 1106,
    ROTRWI	= 1107,
    ROTRWIo	= 1108,
    ReadTB	= 1109,
    SC	= 1110,
    SELECT_CC_F4	= 1111,
    SELECT_CC_F8	= 1112,
    SELECT_CC_I4	= 1113,
    SELECT_CC_I8	= 1114,
    SELECT_CC_QBRC	= 1115,
    SELECT_CC_QFRC	= 1116,
    SELECT_CC_QSRC	= 1117,
    SELECT_CC_VRRC	= 1118,
    SELECT_CC_VSFRC	= 1119,
    SELECT_CC_VSRC	= 1120,
    SELECT_CC_VSSRC	= 1121,
    SELECT_F4	= 1122,
    SELECT_F8	= 1123,
    SELECT_I4	= 1124,
    SELECT_I8	= 1125,
    SELECT_QBRC	= 1126,
    SELECT_QFRC	= 1127,
    SELECT_QSRC	= 1128,
    SELECT_VRRC	= 1129,
    SELECT_VSFRC	= 1130,
    SELECT_VSRC	= 1131,
    SELECT_VSSRC	= 1132,
    SLBIA	= 1133,
    SLBIE	= 1134,
    SLBIEG	= 1135,
    SLBMFEE	= 1136,
    SLBMTE	= 1137,
    SLBSYNC	= 1138,
    SLD	= 1139,
    SLDI	= 1140,
    SLDIo	= 1141,
    SLDo	= 1142,
    SLW	= 1143,
    SLW8	= 1144,
    SLW8o	= 1145,
    SLWI	= 1146,
    SLWIo	= 1147,
    SLWo	= 1148,
    SPILL_CR	= 1149,
    SPILL_CRBIT	= 1150,
    SPILL_VRSAVE	= 1151,
    SRAD	= 1152,
    SRADI	= 1153,
    SRADIo	= 1154,
    SRADo	= 1155,
    SRAW	= 1156,
    SRAWI	= 1157,
    SRAWIo	= 1158,
    SRAWo	= 1159,
    SRD	= 1160,
    SRDI	= 1161,
    SRDIo	= 1162,
    SRDo	= 1163,
    SRW	= 1164,
    SRW8	= 1165,
    SRW8o	= 1166,
    SRWI	= 1167,
    SRWIo	= 1168,
    SRWo	= 1169,
    STB	= 1170,
    STB8	= 1171,
    STBCIX	= 1172,
    STBCX	= 1173,
    STBU	= 1174,
    STBU8	= 1175,
    STBUX	= 1176,
    STBUX8	= 1177,
    STBX	= 1178,
    STBX8	= 1179,
    STD	= 1180,
    STDAT	= 1181,
    STDBRX	= 1182,
    STDCIX	= 1183,
    STDCX	= 1184,
    STDU	= 1185,
    STDUX	= 1186,
    STDX	= 1187,
    STFD	= 1188,
    STFDU	= 1189,
    STFDUX	= 1190,
    STFDX	= 1191,
    STFIWX	= 1192,
    STFS	= 1193,
    STFSU	= 1194,
    STFSUX	= 1195,
    STFSX	= 1196,
    STH	= 1197,
    STH8	= 1198,
    STHBRX	= 1199,
    STHCIX	= 1200,
    STHCX	= 1201,
    STHU	= 1202,
    STHU8	= 1203,
    STHUX	= 1204,
    STHUX8	= 1205,
    STHX	= 1206,
    STHX8	= 1207,
    STMW	= 1208,
    STOP	= 1209,
    STSWI	= 1210,
    STVEBX	= 1211,
    STVEHX	= 1212,
    STVEWX	= 1213,
    STVX	= 1214,
    STVXL	= 1215,
    STW	= 1216,
    STW8	= 1217,
    STWAT	= 1218,
    STWBRX	= 1219,
    STWCIX	= 1220,
    STWCX	= 1221,
    STWU	= 1222,
    STWU8	= 1223,
    STWUX	= 1224,
    STWUX8	= 1225,
    STWX	= 1226,
    STWX8	= 1227,
    STXSD	= 1228,
    STXSDX	= 1229,
    STXSIBX	= 1230,
    STXSIHX	= 1231,
    STXSIWX	= 1232,
    STXSSP	= 1233,
    STXSSPX	= 1234,
    STXV	= 1235,
    STXVB16X	= 1236,
    STXVD2X	= 1237,
    STXVH8X	= 1238,
    STXVL	= 1239,
    STXVLL	= 1240,
    STXVW4X	= 1241,
    STXVX	= 1242,
    SUBF	= 1243,
    SUBF8	= 1244,
    SUBF8o	= 1245,
    SUBFC	= 1246,
    SUBFC8	= 1247,
    SUBFC8o	= 1248,
    SUBFCo	= 1249,
    SUBFE	= 1250,
    SUBFE8	= 1251,
    SUBFE8o	= 1252,
    SUBFEo	= 1253,
    SUBFIC	= 1254,
    SUBFIC8	= 1255,
    SUBFME	= 1256,
    SUBFME8	= 1257,
    SUBFME8o	= 1258,
    SUBFMEo	= 1259,
    SUBFZE	= 1260,
    SUBFZE8	= 1261,
    SUBFZE8o	= 1262,
    SUBFZEo	= 1263,
    SUBFo	= 1264,
    SUBI	= 1265,
    SUBIC	= 1266,
    SUBICo	= 1267,
    SUBIS	= 1268,
    SYNC	= 1269,
    TABORT	= 1270,
    TABORTDC	= 1271,
    TABORTDCI	= 1272,
    TABORTWC	= 1273,
    TABORTWCI	= 1274,
    TAILB	= 1275,
    TAILB8	= 1276,
    TAILBA	= 1277,
    TAILBA8	= 1278,
    TAILBCTR	= 1279,
    TAILBCTR8	= 1280,
    TBEGIN	= 1281,
    TCHECK	= 1282,
    TCHECK_RET	= 1283,
    TCRETURNai	= 1284,
    TCRETURNai8	= 1285,
    TCRETURNdi	= 1286,
    TCRETURNdi8	= 1287,
    TCRETURNri	= 1288,
    TCRETURNri8	= 1289,
    TD	= 1290,
    TDI	= 1291,
    TEND	= 1292,
    TLBIA	= 1293,
    TLBIE	= 1294,
    TLBIEL	= 1295,
    TLBIVAX	= 1296,
    TLBLD	= 1297,
    TLBLI	= 1298,
    TLBRE	= 1299,
    TLBRE2	= 1300,
    TLBSX	= 1301,
    TLBSX2	= 1302,
    TLBSX2D	= 1303,
    TLBSYNC	= 1304,
    TLBWE	= 1305,
    TLBWE2	= 1306,
    TRAP	= 1307,
    TRECHKPT	= 1308,
    TRECLAIM	= 1309,
    TSR	= 1310,
    TW	= 1311,
    TWI	= 1312,
    UPDATE_VRSAVE	= 1313,
    UpdateGBR	= 1314,
    VADDCUQ	= 1315,
    VADDCUW	= 1316,
    VADDECUQ	= 1317,
    VADDEUQM	= 1318,
    VADDFP	= 1319,
    VADDSBS	= 1320,
    VADDSHS	= 1321,
    VADDSWS	= 1322,
    VADDUBM	= 1323,
    VADDUBS	= 1324,
    VADDUDM	= 1325,
    VADDUHM	= 1326,
    VADDUHS	= 1327,
    VADDUQM	= 1328,
    VADDUWM	= 1329,
    VADDUWS	= 1330,
    VAND	= 1331,
    VANDC	= 1332,
    VAVGSB	= 1333,
    VAVGSH	= 1334,
    VAVGSW	= 1335,
    VAVGUB	= 1336,
    VAVGUH	= 1337,
    VAVGUW	= 1338,
    VBPERMD	= 1339,
    VBPERMQ	= 1340,
    VCFSX	= 1341,
    VCFSX_0	= 1342,
    VCFUX	= 1343,
    VCFUX_0	= 1344,
    VCIPHER	= 1345,
    VCIPHERLAST	= 1346,
    VCLZB	= 1347,
    VCLZD	= 1348,
    VCLZH	= 1349,
    VCLZLSBB	= 1350,
    VCLZW	= 1351,
    VCMPBFP	= 1352,
    VCMPBFPo	= 1353,
    VCMPEQFP	= 1354,
    VCMPEQFPo	= 1355,
    VCMPEQUB	= 1356,
    VCMPEQUBo	= 1357,
    VCMPEQUD	= 1358,
    VCMPEQUDo	= 1359,
    VCMPEQUH	= 1360,
    VCMPEQUHo	= 1361,
    VCMPEQUW	= 1362,
    VCMPEQUWo	= 1363,
    VCMPGEFP	= 1364,
    VCMPGEFPo	= 1365,
    VCMPGTFP	= 1366,
    VCMPGTFPo	= 1367,
    VCMPGTSB	= 1368,
    VCMPGTSBo	= 1369,
    VCMPGTSD	= 1370,
    VCMPGTSDo	= 1371,
    VCMPGTSH	= 1372,
    VCMPGTSHo	= 1373,
    VCMPGTSW	= 1374,
    VCMPGTSWo	= 1375,
    VCMPGTUB	= 1376,
    VCMPGTUBo	= 1377,
    VCMPGTUD	= 1378,
    VCMPGTUDo	= 1379,
    VCMPGTUH	= 1380,
    VCMPGTUHo	= 1381,
    VCMPGTUW	= 1382,
    VCMPGTUWo	= 1383,
    VCMPNEB	= 1384,
    VCMPNEBo	= 1385,
    VCMPNEH	= 1386,
    VCMPNEHo	= 1387,
    VCMPNEW	= 1388,
    VCMPNEWo	= 1389,
    VCMPNEZB	= 1390,
    VCMPNEZBo	= 1391,
    VCMPNEZH	= 1392,
    VCMPNEZHo	= 1393,
    VCMPNEZW	= 1394,
    VCMPNEZWo	= 1395,
    VCTSXS	= 1396,
    VCTSXS_0	= 1397,
    VCTUXS	= 1398,
    VCTUXS_0	= 1399,
    VCTZB	= 1400,
    VCTZD	= 1401,
    VCTZH	= 1402,
    VCTZLSBB	= 1403,
    VCTZW	= 1404,
    VEQV	= 1405,
    VEXPTEFP	= 1406,
    VEXTRACTD	= 1407,
    VEXTRACTUB	= 1408,
    VEXTRACTUH	= 1409,
    VEXTRACTUW	= 1410,
    VEXTSB2D	= 1411,
    VEXTSB2W	= 1412,
    VEXTSH2D	= 1413,
    VEXTSH2W	= 1414,
    VEXTSW2D	= 1415,
    VEXTUBLX	= 1416,
    VEXTUBRX	= 1417,
    VEXTUHLX	= 1418,
    VEXTUHRX	= 1419,
    VEXTUWLX	= 1420,
    VEXTUWRX	= 1421,
    VGBBD	= 1422,
    VINSERTB	= 1423,
    VINSERTD	= 1424,
    VINSERTH	= 1425,
    VINSERTW	= 1426,
    VLOGEFP	= 1427,
    VMADDFP	= 1428,
    VMAXFP	= 1429,
    VMAXSB	= 1430,
    VMAXSD	= 1431,
    VMAXSH	= 1432,
    VMAXSW	= 1433,
    VMAXUB	= 1434,
    VMAXUD	= 1435,
    VMAXUH	= 1436,
    VMAXUW	= 1437,
    VMHADDSHS	= 1438,
    VMHRADDSHS	= 1439,
    VMINFP	= 1440,
    VMINSB	= 1441,
    VMINSD	= 1442,
    VMINSH	= 1443,
    VMINSW	= 1444,
    VMINUB	= 1445,
    VMINUD	= 1446,
    VMINUH	= 1447,
    VMINUW	= 1448,
    VMLADDUHM	= 1449,
    VMRGEW	= 1450,
    VMRGHB	= 1451,
    VMRGHH	= 1452,
    VMRGHW	= 1453,
    VMRGLB	= 1454,
    VMRGLH	= 1455,
    VMRGLW	= 1456,
    VMRGOW	= 1457,
    VMSUMMBM	= 1458,
    VMSUMSHM	= 1459,
    VMSUMSHS	= 1460,
    VMSUMUBM	= 1461,
    VMSUMUHM	= 1462,
    VMSUMUHS	= 1463,
    VMUL10CUQ	= 1464,
    VMUL10ECUQ	= 1465,
    VMUL10EUQ	= 1466,
    VMUL10UQ	= 1467,
    VMULESB	= 1468,
    VMULESH	= 1469,
    VMULESW	= 1470,
    VMULEUB	= 1471,
    VMULEUH	= 1472,
    VMULEUW	= 1473,
    VMULOSB	= 1474,
    VMULOSH	= 1475,
    VMULOSW	= 1476,
    VMULOUB	= 1477,
    VMULOUH	= 1478,
    VMULOUW	= 1479,
    VMULUWM	= 1480,
    VNAND	= 1481,
    VNCIPHER	= 1482,
    VNCIPHERLAST	= 1483,
    VNEGD	= 1484,
    VNEGW	= 1485,
    VNMSUBFP	= 1486,
    VNOR	= 1487,
    VOR	= 1488,
    VORC	= 1489,
    VPERM	= 1490,
    VPERMR	= 1491,
    VPERMXOR	= 1492,
    VPKPX	= 1493,
    VPKSDSS	= 1494,
    VPKSDUS	= 1495,
    VPKSHSS	= 1496,
    VPKSHUS	= 1497,
    VPKSWSS	= 1498,
    VPKSWUS	= 1499,
    VPKUDUM	= 1500,
    VPKUDUS	= 1501,
    VPKUHUM	= 1502,
    VPKUHUS	= 1503,
    VPKUWUM	= 1504,
    VPKUWUS	= 1505,
    VPMSUMB	= 1506,
    VPMSUMD	= 1507,
    VPMSUMH	= 1508,
    VPMSUMW	= 1509,
    VPOPCNTB	= 1510,
    VPOPCNTD	= 1511,
    VPOPCNTH	= 1512,
    VPOPCNTW	= 1513,
    VPRTYBD	= 1514,
    VPRTYBQ	= 1515,
    VPRTYBW	= 1516,
    VREFP	= 1517,
    VRFIM	= 1518,
    VRFIN	= 1519,
    VRFIP	= 1520,
    VRFIZ	= 1521,
    VRLB	= 1522,
    VRLD	= 1523,
    VRLDMI	= 1524,
    VRLDNM	= 1525,
    VRLH	= 1526,
    VRLW	= 1527,
    VRLWMI	= 1528,
    VRLWNM	= 1529,
    VRSQRTEFP	= 1530,
    VSBOX	= 1531,
    VSEL	= 1532,
    VSHASIGMAD	= 1533,
    VSHASIGMAW	= 1534,
    VSL	= 1535,
    VSLB	= 1536,
    VSLD	= 1537,
    VSLDOI	= 1538,
    VSLH	= 1539,
    VSLO	= 1540,
    VSLV	= 1541,
    VSLW	= 1542,
    VSPLTB	= 1543,
    VSPLTH	= 1544,
    VSPLTISB	= 1545,
    VSPLTISH	= 1546,
    VSPLTISW	= 1547,
    VSPLTW	= 1548,
    VSR	= 1549,
    VSRAB	= 1550,
    VSRAD	= 1551,
    VSRAH	= 1552,
    VSRAW	= 1553,
    VSRB	= 1554,
    VSRD	= 1555,
    VSRH	= 1556,
    VSRO	= 1557,
    VSRV	= 1558,
    VSRW	= 1559,
    VSUBCUQ	= 1560,
    VSUBCUW	= 1561,
    VSUBECUQ	= 1562,
    VSUBEUQM	= 1563,
    VSUBFP	= 1564,
    VSUBSBS	= 1565,
    VSUBSHS	= 1566,
    VSUBSWS	= 1567,
    VSUBUBM	= 1568,
    VSUBUBS	= 1569,
    VSUBUDM	= 1570,
    VSUBUHM	= 1571,
    VSUBUHS	= 1572,
    VSUBUQM	= 1573,
    VSUBUWM	= 1574,
    VSUBUWS	= 1575,
    VSUM2SWS	= 1576,
    VSUM4SBS	= 1577,
    VSUM4SHS	= 1578,
    VSUM4UBS	= 1579,
    VSUMSWS	= 1580,
    VUPKHPX	= 1581,
    VUPKHSB	= 1582,
    VUPKHSH	= 1583,
    VUPKHSW	= 1584,
    VUPKLPX	= 1585,
    VUPKLSB	= 1586,
    VUPKLSH	= 1587,
    VUPKLSW	= 1588,
    VXOR	= 1589,
    V_SET0	= 1590,
    V_SET0B	= 1591,
    V_SET0H	= 1592,
    V_SETALLONES	= 1593,
    V_SETALLONESB	= 1594,
    V_SETALLONESH	= 1595,
    WAIT	= 1596,
    WRTEE	= 1597,
    WRTEEI	= 1598,
    XOR	= 1599,
    XOR8	= 1600,
    XOR8o	= 1601,
    XORI	= 1602,
    XORI8	= 1603,
    XORIS	= 1604,
    XORIS8	= 1605,
    XORo	= 1606,
    XSABSDP	= 1607,
    XSABSQP	= 1608,
    XSADDDP	= 1609,
    XSADDQP	= 1610,
    XSADDQPO	= 1611,
    XSADDSP	= 1612,
    XSCMPEQDP	= 1613,
    XSCMPEXPDP	= 1614,
    XSCMPEXPQP	= 1615,
    XSCMPGEDP	= 1616,
    XSCMPGTDP	= 1617,
    XSCMPNEDP	= 1618,
    XSCMPODP	= 1619,
    XSCMPOQP	= 1620,
    XSCMPUDP	= 1621,
    XSCMPUQP	= 1622,
    XSCPSGNDP	= 1623,
    XSCPSGNQP	= 1624,
    XSCVDPHP	= 1625,
    XSCVDPQP	= 1626,
    XSCVDPSP	= 1627,
    XSCVDPSPN	= 1628,
    XSCVDPSXDS	= 1629,
    XSCVDPSXWS	= 1630,
    XSCVDPUXDS	= 1631,
    XSCVDPUXWS	= 1632,
    XSCVHPDP	= 1633,
    XSCVQPDP	= 1634,
    XSCVQPDPO	= 1635,
    XSCVQPSDZ	= 1636,
    XSCVQPSWZ	= 1637,
    XSCVQPUDZ	= 1638,
    XSCVQPUWZ	= 1639,
    XSCVSDQP	= 1640,
    XSCVSPDP	= 1641,
    XSCVSPDPN	= 1642,
    XSCVSXDDP	= 1643,
    XSCVSXDSP	= 1644,
    XSCVUDQP	= 1645,
    XSCVUXDDP	= 1646,
    XSCVUXDSP	= 1647,
    XSDIVDP	= 1648,
    XSDIVQP	= 1649,
    XSDIVQPO	= 1650,
    XSDIVSP	= 1651,
    XSIEXPDP	= 1652,
    XSIEXPQP	= 1653,
    XSMADDADP	= 1654,
    XSMADDASP	= 1655,
    XSMADDMDP	= 1656,
    XSMADDMSP	= 1657,
    XSMADDQP	= 1658,
    XSMADDQPO	= 1659,
    XSMAXCDP	= 1660,
    XSMAXDP	= 1661,
    XSMAXJDP	= 1662,
    XSMINCDP	= 1663,
    XSMINDP	= 1664,
    XSMINJDP	= 1665,
    XSMSUBADP	= 1666,
    XSMSUBASP	= 1667,
    XSMSUBMDP	= 1668,
    XSMSUBMSP	= 1669,
    XSMSUBQP	= 1670,
    XSMSUBQPO	= 1671,
    XSMULDP	= 1672,
    XSMULQP	= 1673,
    XSMULQPO	= 1674,
    XSMULSP	= 1675,
    XSNABSDP	= 1676,
    XSNABSQP	= 1677,
    XSNEGDP	= 1678,
    XSNEGQP	= 1679,
    XSNMADDADP	= 1680,
    XSNMADDASP	= 1681,
    XSNMADDMDP	= 1682,
    XSNMADDMSP	= 1683,
    XSNMADDQP	= 1684,
    XSNMADDQPO	= 1685,
    XSNMSUBADP	= 1686,
    XSNMSUBASP	= 1687,
    XSNMSUBMDP	= 1688,
    XSNMSUBMSP	= 1689,
    XSNMSUBQP	= 1690,
    XSNMSUBQPO	= 1691,
    XSRDPI	= 1692,
    XSRDPIC	= 1693,
    XSRDPIM	= 1694,
    XSRDPIP	= 1695,
    XSRDPIZ	= 1696,
    XSREDP	= 1697,
    XSRESP	= 1698,
    XSRQPI	= 1699,
    XSRQPIX	= 1700,
    XSRQPXP	= 1701,
    XSRSQRTEDP	= 1702,
    XSRSQRTESP	= 1703,
    XSSQRTDP	= 1704,
    XSSQRTQP	= 1705,
    XSSQRTQPO	= 1706,
    XSSQRTSP	= 1707,
    XSSUBDP	= 1708,
    XSSUBQP	= 1709,
    XSSUBQPO	= 1710,
    XSSUBSP	= 1711,
    XSTDIVDP	= 1712,
    XSTSQRTDP	= 1713,
    XSTSTDCDP	= 1714,
    XSTSTDCQP	= 1715,
    XSTSTDCSP	= 1716,
    XSXEXPDP	= 1717,
    XSXEXPQP	= 1718,
    XSXSIGDP	= 1719,
    XSXSIGQP	= 1720,
    XVABSDP	= 1721,
    XVABSSP	= 1722,
    XVADDDP	= 1723,
    XVADDSP	= 1724,
    XVCMPEQDP	= 1725,
    XVCMPEQDPo	= 1726,
    XVCMPEQSP	= 1727,
    XVCMPEQSPo	= 1728,
    XVCMPGEDP	= 1729,
    XVCMPGEDPo	= 1730,
    XVCMPGESP	= 1731,
    XVCMPGESPo	= 1732,
    XVCMPGTDP	= 1733,
    XVCMPGTDPo	= 1734,
    XVCMPGTSP	= 1735,
    XVCMPGTSPo	= 1736,
    XVCMPNEDP	= 1737,
    XVCMPNEDPo	= 1738,
    XVCMPNESP	= 1739,
    XVCMPNESPo	= 1740,
    XVCPSGNDP	= 1741,
    XVCPSGNSP	= 1742,
    XVCVDPSP	= 1743,
    XVCVDPSXDS	= 1744,
    XVCVDPSXWS	= 1745,
    XVCVDPUXDS	= 1746,
    XVCVDPUXWS	= 1747,
    XVCVHPSP	= 1748,
    XVCVSPDP	= 1749,
    XVCVSPHP	= 1750,
    XVCVSPSXDS	= 1751,
    XVCVSPSXWS	= 1752,
    XVCVSPUXDS	= 1753,
    XVCVSPUXWS	= 1754,
    XVCVSXDDP	= 1755,
    XVCVSXDSP	= 1756,
    XVCVSXWDP	= 1757,
    XVCVSXWSP	= 1758,
    XVCVUXDDP	= 1759,
    XVCVUXDSP	= 1760,
    XVCVUXWDP	= 1761,
    XVCVUXWSP	= 1762,
    XVDIVDP	= 1763,
    XVDIVSP	= 1764,
    XVIEXPDP	= 1765,
    XVIEXPSP	= 1766,
    XVMADDADP	= 1767,
    XVMADDASP	= 1768,
    XVMADDMDP	= 1769,
    XVMADDMSP	= 1770,
    XVMAXDP	= 1771,
    XVMAXSP	= 1772,
    XVMINDP	= 1773,
    XVMINSP	= 1774,
    XVMSUBADP	= 1775,
    XVMSUBASP	= 1776,
    XVMSUBMDP	= 1777,
    XVMSUBMSP	= 1778,
    XVMULDP	= 1779,
    XVMULSP	= 1780,
    XVNABSDP	= 1781,
    XVNABSSP	= 1782,
    XVNEGDP	= 1783,
    XVNEGSP	= 1784,
    XVNMADDADP	= 1785,
    XVNMADDASP	= 1786,
    XVNMADDMDP	= 1787,
    XVNMADDMSP	= 1788,
    XVNMSUBADP	= 1789,
    XVNMSUBASP	= 1790,
    XVNMSUBMDP	= 1791,
    XVNMSUBMSP	= 1792,
    XVRDPI	= 1793,
    XVRDPIC	= 1794,
    XVRDPIM	= 1795,
    XVRDPIP	= 1796,
    XVRDPIZ	= 1797,
    XVREDP	= 1798,
    XVRESP	= 1799,
    XVRSPI	= 1800,
    XVRSPIC	= 1801,
    XVRSPIM	= 1802,
    XVRSPIP	= 1803,
    XVRSPIZ	= 1804,
    XVRSQRTEDP	= 1805,
    XVRSQRTESP	= 1806,
    XVSQRTDP	= 1807,
    XVSQRTSP	= 1808,
    XVSUBDP	= 1809,
    XVSUBSP	= 1810,
    XVTDIVDP	= 1811,
    XVTDIVSP	= 1812,
    XVTSQRTDP	= 1813,
    XVTSQRTSP	= 1814,
    XVTSTDCDP	= 1815,
    XVTSTDCSP	= 1816,
    XVXEXPDP	= 1817,
    XVXEXPSP	= 1818,
    XVXSIGDP	= 1819,
    XVXSIGSP	= 1820,
    XXBRD	= 1821,
    XXBRH	= 1822,
    XXBRQ	= 1823,
    XXBRW	= 1824,
    XXEXTRACTUW	= 1825,
    XXINSERTW	= 1826,
    XXLAND	= 1827,
    XXLANDC	= 1828,
    XXLEQV	= 1829,
    XXLNAND	= 1830,
    XXLNOR	= 1831,
    XXLOR	= 1832,
    XXLORC	= 1833,
    XXLORf	= 1834,
    XXLXOR	= 1835,
    XXMRGHW	= 1836,
    XXMRGLW	= 1837,
    XXPERM	= 1838,
    XXPERMDI	= 1839,
    XXPERMR	= 1840,
    XXSEL	= 1841,
    XXSLDWI	= 1842,
    XXSPLTIB	= 1843,
    XXSPLTW	= 1844,
    gBC	= 1845,
    gBCA	= 1846,
    gBCCTR	= 1847,
    gBCCTRL	= 1848,
    gBCL	= 1849,
    gBCLA	= 1850,
    gBCLR	= 1851,
    gBCLRL	= 1852,
    INSTRUCTION_LIST_END = 1853
  };

namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIC_IntSimple	= 1,
    IIC_IntGeneral	= 2,
    IIC_BrB	= 3,
    IIC_VecFP	= 4,
    IIC_IntCompare	= 5,
    IIC_SprABORT	= 6,
    IIC_LdStCOPY	= 7,
    IIC_LdStPASTE	= 8,
    IIC_BrCR	= 9,
    IIC_LdStDCBF	= 10,
    IIC_LdStLoad	= 11,
    IIC_IntDivD	= 12,
    IIC_IntDivW	= 13,
    IIC_FPGeneral	= 14,
    IIC_FPAddSub	= 15,
    IIC_FPCompare	= 16,
    IIC_FPDivD	= 17,
    IIC_FPDivS	= 18,
    IIC_FPFused	= 19,
    IIC_FPSqrtD	= 20,
    IIC_FPSqrtS	= 21,
    IIC_LdStICBI	= 22,
    IIC_IntISEL	= 23,
    IIC_SprISYNC	= 24,
    IIC_LdStLWARX	= 25,
    IIC_LdStLoadUpd	= 26,
    IIC_LdStLoadUpdX	= 27,
    IIC_LdStLD	= 28,
    IIC_LdStLDARX	= 29,
    IIC_LdStLDU	= 30,
    IIC_LdStLDUX	= 31,
    IIC_LdStLFD	= 32,
    IIC_LdStLFDU	= 33,
    IIC_LdStLFDUX	= 34,
    IIC_LdStLHA	= 35,
    IIC_LdStLHAU	= 36,
    IIC_LdStLHAUX	= 37,
    IIC_LdStLMW	= 38,
    IIC_LdStLWA	= 39,
    IIC_BrMCR	= 40,
    IIC_BrMCRX	= 41,
    IIC_SprMFCR	= 42,
    IIC_SprMFSPR	= 43,
    IIC_IntMFFS	= 44,
    IIC_SprMFMSR	= 45,
    IIC_SprMFCRF	= 46,
    IIC_SprMFSR	= 47,
    IIC_SprMFTB	= 48,
    IIC_LdStStore	= 49,
    IIC_VecGeneral	= 50,
    IIC_SprMSGSYNC	= 51,
    IIC_LdStSync	= 52,
    IIC_SprMTSPR	= 53,
    IIC_IntMTFSB0	= 54,
    IIC_SprMTMSR	= 55,
    IIC_SprMTMSRD	= 56,
    IIC_SprMTSR	= 57,
    IIC_IntMulHW	= 58,
    IIC_IntMulHWU	= 59,
    IIC_IntMulHD	= 60,
    IIC_IntMulLI	= 61,
    IIC_VecPerm	= 62,
    IIC_LdStSTFD	= 63,
    IIC_LdStSTFDU	= 64,
    IIC_SprRFI	= 65,
    IIC_IntRFID	= 66,
    IIC_IntRotateD	= 67,
    IIC_IntRotateDI	= 68,
    IIC_IntRotate	= 69,
    IIC_SprSLBIA	= 70,
    IIC_SprSLBIE	= 71,
    IIC_SprSLBIEG	= 72,
    IIC_SprSLBMFEE	= 73,
    IIC_SprSLBMTE	= 74,
    IIC_SprSLBSYNC	= 75,
    IIC_IntShift	= 76,
    IIC_LdStSTWCX	= 77,
    IIC_LdStStoreUpd	= 78,
    IIC_LdStSTD	= 79,
    IIC_LdStSTDCX	= 80,
    IIC_LdStSTDU	= 81,
    IIC_LdStSTDUX	= 82,
    IIC_SprSTOP	= 83,
    IIC_IntTrapD	= 84,
    IIC_SprTLBIA	= 85,
    IIC_SprTLBIE	= 86,
    IIC_SprTLBIEL	= 87,
    IIC_SprTLBSYNC	= 88,
    IIC_IntTrapW	= 89,
    IIC_VecFPCompare	= 90,
    SCHED_LIST_END = 91
  };
} // end Sched namespace
} // end PPC namespace
} // end llvm namespace
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { PPC::CR0, 0 };
static const MCPhysReg ImplicitList2[] = { PPC::CARRY, 0 };
static const MCPhysReg ImplicitList3[] = { PPC::CARRY, PPC::CR0, 0 };
static const MCPhysReg ImplicitList4[] = { PPC::X0, PPC::X3, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList5[] = { PPC::R0, PPC::R3, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList6[] = { PPC::R1, 0 };
static const MCPhysReg ImplicitList7[] = { PPC::CTR, 0 };
static const MCPhysReg ImplicitList8[] = { PPC::CTR8, 0 };
static const MCPhysReg ImplicitList9[] = { PPC::CTR, PPC::RM, 0 };
static const MCPhysReg ImplicitList10[] = { PPC::LR, 0 };
static const MCPhysReg ImplicitList11[] = { PPC::CTR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList12[] = { PPC::LR8, 0 };
static const MCPhysReg ImplicitList13[] = { PPC::RM, 0 };
static const MCPhysReg ImplicitList14[] = { PPC::LR, PPC::RM, 0 };
static const MCPhysReg ImplicitList15[] = { PPC::CR6, 0 };
static const MCPhysReg ImplicitList16[] = { PPC::LR8, PPC::X2, 0 };
static const MCPhysReg ImplicitList17[] = { PPC::CTR, PPC::LR, PPC::RM, 0 };
static const MCPhysReg ImplicitList18[] = { PPC::CTR8, PPC::LR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList19[] = { PPC::LR8, PPC::RM, 0 };
static const MCPhysReg ImplicitList20[] = { PPC::CR1EQ, 0 };
static const MCPhysReg ImplicitList21[] = { PPC::X1, 0 };
static const MCPhysReg ImplicitList22[] = { PPC::CR1, 0 };
static const MCPhysReg ImplicitList23[] = { PPC::X0, PPC::X4, PPC::X5, PPC::X6, PPC::X7, PPC::X8, PPC::X9, PPC::X10, PPC::X11, PPC::X12, PPC::LR8, PPC::CTR8, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList24[] = { PPC::R0, PPC::R4, PPC::R5, PPC::R6, PPC::R7, PPC::R8, PPC::R9, PPC::R10, PPC::R11, PPC::R12, PPC::LR, PPC::CTR, PPC::CR0, PPC::CR1, PPC::CR5, PPC::CR6, PPC::CR7, 0 };
static const MCPhysReg ImplicitList25[] = { PPC::LR, PPC::CTR, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo75[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo76[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo84[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo88[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((1 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { PPC::VRSAVERCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRC_NOR0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RC_NOX0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QBRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::QSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo184[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo185[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo188[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo190[] = { { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { PPC::F4RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { PPC::CRRC0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { PPC::CTRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { PPC::CTRRC8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::G8RCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { PPC::CRRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { PPC::VSFRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { PPC::VSRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { PPC::CRBITRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };

extern const MCInstrDesc PPCInsts[] = {
  { 0,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #2 = CFI_INSTRUCTION
  { 3,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo5, -1 ,nullptr },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo6, -1 ,nullptr },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo4, -1 ,nullptr },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #11 = DBG_VALUE
  { 12,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, nullptr, OperandInfo7, -1 ,nullptr },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #16 = LIFETIME_END
  { 17,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo8, -1 ,nullptr },  // Inst #17 = STACKMAP
  { 18,	6,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo9, -1 ,nullptr },  // Inst #18 = PATCHPOINT
  { 19,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #19 = LOAD_STACK_GUARD
  { 20,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #20 = STATEPOINT
  { 21,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, nullptr, OperandInfo11, -1 ,nullptr },  // Inst #21 = LOCAL_ESCAPE
  { 22,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #22 = FAULTING_LOAD_OP
  { 23,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #23 = PATCHABLE_OP
  { 24,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #24 = PATCHABLE_FUNCTION_ENTER
  { 25,	1,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #25 = PATCHABLE_RET
  { 26,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #26 = G_ADD
  { 27,	3,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo12, -1 ,nullptr },  // Inst #27 = G_OR
  { 28,	1,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #28 = G_BR
  { 29,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #29 = ADD4
  { 30,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #30 = ADD4TLS
  { 31,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #31 = ADD4o
  { 32,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #32 = ADD8
  { 33,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #33 = ADD8TLS
  { 34,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #34 = ADD8TLS_
  { 35,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #35 = ADD8o
  { 36,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList2, OperandInfo13, -1 ,nullptr },  // Inst #36 = ADDC
  { 37,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList2, OperandInfo15, -1 ,nullptr },  // Inst #37 = ADDC8
  { 38,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList3, OperandInfo15, -1 ,nullptr },  // Inst #38 = ADDC8o
  { 39,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList3, OperandInfo13, -1 ,nullptr },  // Inst #39 = ADDCo
  { 40,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo13, -1 ,nullptr },  // Inst #40 = ADDE
  { 41,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo15, -1 ,nullptr },  // Inst #41 = ADDE8
  { 42,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo15, -1 ,nullptr },  // Inst #42 = ADDE8o
  { 43,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo13, -1 ,nullptr },  // Inst #43 = ADDEo
  { 44,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #44 = ADDI
  { 45,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #45 = ADDI8
  { 46,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo14, -1 ,nullptr },  // Inst #46 = ADDIC
  { 47,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo17, -1 ,nullptr },  // Inst #47 = ADDIC8
  { 48,	3,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, ImplicitList3, OperandInfo14, -1 ,nullptr },  // Inst #48 = ADDICo
  { 49,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #49 = ADDIS
  { 50,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #50 = ADDIS8
  { 51,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #51 = ADDISdtprelHA
  { 52,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #52 = ADDISdtprelHA32
  { 53,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #53 = ADDISgotTprelHA
  { 54,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #54 = ADDIStlsgdHA
  { 55,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #55 = ADDIStlsldHA
  { 56,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #56 = ADDIStocHA
  { 57,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #57 = ADDIdtprelL
  { 58,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #58 = ADDIdtprelL32
  { 59,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #59 = ADDItlsgdL
  { 60,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #60 = ADDItlsgdL32
  { 61,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList4, OperandInfo19, -1 ,nullptr },  // Inst #61 = ADDItlsgdLADDR
  { 62,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList5, OperandInfo20, -1 ,nullptr },  // Inst #62 = ADDItlsgdLADDR32
  { 63,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #63 = ADDItlsldL
  { 64,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #64 = ADDItlsldL32
  { 65,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList4, OperandInfo19, -1 ,nullptr },  // Inst #65 = ADDItlsldLADDR
  { 66,	4,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList5, OperandInfo20, -1 ,nullptr },  // Inst #66 = ADDItlsldLADDR32
  { 67,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo16, -1 ,nullptr },  // Inst #67 = ADDItocL
  { 68,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #68 = ADDME
  { 69,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo22, -1 ,nullptr },  // Inst #69 = ADDME8
  { 70,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo22, -1 ,nullptr },  // Inst #70 = ADDME8o
  { 71,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #71 = ADDMEo
  { 72,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #72 = ADDZE
  { 73,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo22, -1 ,nullptr },  // Inst #73 = ADDZE8
  { 74,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo22, -1 ,nullptr },  // Inst #74 = ADDZE8o
  { 75,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #75 = ADDZEo
  { 76,	1,	0,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo2, -1 ,nullptr },  // Inst #76 = ADJCALLSTACKDOWN
  { 77,	2,	0,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo7, -1 ,nullptr },  // Inst #77 = ADJCALLSTACKUP
  { 78,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #78 = AND
  { 79,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #79 = AND8
  { 80,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #80 = AND8o
  { 81,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #81 = ANDC
  { 82,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #82 = ANDC8
  { 83,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #83 = ANDC8o
  { 84,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #84 = ANDCo
  { 85,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #85 = ANDISo
  { 86,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo17, -1 ,nullptr },  // Inst #86 = ANDISo8
  { 87,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #87 = ANDIo
  { 88,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo17, -1 ,nullptr },  // Inst #88 = ANDIo8
  { 89,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #89 = ANDIo_1_EQ_BIT
  { 90,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #90 = ANDIo_1_EQ_BIT8
  { 91,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo23, -1 ,nullptr },  // Inst #91 = ANDIo_1_GT_BIT
  { 92,	2,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, nullptr, OperandInfo24, -1 ,nullptr },  // Inst #92 = ANDIo_1_GT_BIT8
  { 93,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #93 = ANDo
  { 94,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo25, -1 ,nullptr },  // Inst #94 = ATOMIC_CMP_SWAP_I16
  { 95,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo25, -1 ,nullptr },  // Inst #95 = ATOMIC_CMP_SWAP_I32
  { 96,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo26, -1 ,nullptr },  // Inst #96 = ATOMIC_CMP_SWAP_I64
  { 97,	5,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo25, -1 ,nullptr },  // Inst #97 = ATOMIC_CMP_SWAP_I8
  { 98,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #98 = ATOMIC_LOAD_ADD_I16
  { 99,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #99 = ATOMIC_LOAD_ADD_I32
  { 100,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #100 = ATOMIC_LOAD_ADD_I64
  { 101,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #101 = ATOMIC_LOAD_ADD_I8
  { 102,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #102 = ATOMIC_LOAD_AND_I16
  { 103,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #103 = ATOMIC_LOAD_AND_I32
  { 104,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #104 = ATOMIC_LOAD_AND_I64
  { 105,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #105 = ATOMIC_LOAD_AND_I8
  { 106,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #106 = ATOMIC_LOAD_MAX_I16
  { 107,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #107 = ATOMIC_LOAD_MAX_I32
  { 108,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #108 = ATOMIC_LOAD_MAX_I64
  { 109,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #109 = ATOMIC_LOAD_MAX_I8
  { 110,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #110 = ATOMIC_LOAD_MIN_I16
  { 111,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #111 = ATOMIC_LOAD_MIN_I32
  { 112,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #112 = ATOMIC_LOAD_MIN_I64
  { 113,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #113 = ATOMIC_LOAD_MIN_I8
  { 114,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #114 = ATOMIC_LOAD_NAND_I16
  { 115,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #115 = ATOMIC_LOAD_NAND_I32
  { 116,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #116 = ATOMIC_LOAD_NAND_I64
  { 117,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #117 = ATOMIC_LOAD_NAND_I8
  { 118,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #118 = ATOMIC_LOAD_OR_I16
  { 119,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #119 = ATOMIC_LOAD_OR_I32
  { 120,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #120 = ATOMIC_LOAD_OR_I64
  { 121,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #121 = ATOMIC_LOAD_OR_I8
  { 122,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #122 = ATOMIC_LOAD_SUB_I16
  { 123,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #123 = ATOMIC_LOAD_SUB_I32
  { 124,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #124 = ATOMIC_LOAD_SUB_I64
  { 125,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #125 = ATOMIC_LOAD_SUB_I8
  { 126,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #126 = ATOMIC_LOAD_UMAX_I16
  { 127,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #127 = ATOMIC_LOAD_UMAX_I32
  { 128,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #128 = ATOMIC_LOAD_UMAX_I64
  { 129,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #129 = ATOMIC_LOAD_UMAX_I8
  { 130,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #130 = ATOMIC_LOAD_UMIN_I16
  { 131,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #131 = ATOMIC_LOAD_UMIN_I32
  { 132,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #132 = ATOMIC_LOAD_UMIN_I64
  { 133,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #133 = ATOMIC_LOAD_UMIN_I8
  { 134,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #134 = ATOMIC_LOAD_XOR_I16
  { 135,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #135 = ATOMIC_LOAD_XOR_I32
  { 136,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #136 = ATOMIC_LOAD_XOR_I64
  { 137,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #137 = ATOMIC_LOAD_XOR_I8
  { 138,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #138 = ATOMIC_SWAP_I16
  { 139,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #139 = ATOMIC_SWAP_I32
  { 140,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo28, -1 ,nullptr },  // Inst #140 = ATOMIC_SWAP_I64
  { 141,	4,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, ImplicitList1, OperandInfo27, -1 ,nullptr },  // Inst #141 = ATOMIC_SWAP_I8
  { 142,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #142 = ATTN
  { 143,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #143 = B
  { 144,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #144 = BA
  { 145,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #145 = BC
  { 146,	3,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #146 = BCC
  { 147,	3,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo30, -1 ,nullptr },  // Inst #147 = BCCA
  { 148,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #148 = BCCCTR
  { 149,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #149 = BCCCTR8
  { 150,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo31, -1 ,nullptr },  // Inst #150 = BCCCTRL
  { 151,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo31, -1 ,nullptr },  // Inst #151 = BCCCTRL8
  { 152,	3,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo30, -1 ,nullptr },  // Inst #152 = BCCL
  { 153,	3,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo30, -1 ,nullptr },  // Inst #153 = BCCLA
  { 154,	2,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, nullptr, OperandInfo31, -1 ,nullptr },  // Inst #154 = BCCLR
  { 155,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo31, -1 ,nullptr },  // Inst #155 = BCCLRL
  { 156,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #156 = BCCTR
  { 157,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #157 = BCCTR8
  { 158,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #158 = BCCTR8n
  { 159,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo32, -1 ,nullptr },  // Inst #159 = BCCTRL
  { 160,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo32, -1 ,nullptr },  // Inst #160 = BCCTRL8
  { 161,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, ImplicitList12, OperandInfo32, -1 ,nullptr },  // Inst #161 = BCCTRL8n
  { 162,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList10, OperandInfo32, -1 ,nullptr },  // Inst #162 = BCCTRLn
  { 163,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #163 = BCCTRn
  { 164,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo33, -1 ,nullptr },  // Inst #164 = BCDCFNo
  { 165,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo33, -1 ,nullptr },  // Inst #165 = BCDCFSQo
  { 166,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo33, -1 ,nullptr },  // Inst #166 = BCDCFZo
  { 167,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #167 = BCDCPSGNo
  { 168,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo35, -1 ,nullptr },  // Inst #168 = BCDCTNo
  { 169,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo35, -1 ,nullptr },  // Inst #169 = BCDCTSQo
  { 170,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo33, -1 ,nullptr },  // Inst #170 = BCDCTZo
  { 171,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo33, -1 ,nullptr },  // Inst #171 = BCDSETSGNo
  { 172,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo36, -1 ,nullptr },  // Inst #172 = BCDSRo
  { 173,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo36, -1 ,nullptr },  // Inst #173 = BCDSo
  { 174,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo36, -1 ,nullptr },  // Inst #174 = BCDTRUNCo
  { 175,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #175 = BCDUSo
  { 176,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #176 = BCDUTRUNCo
  { 177,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo29, -1 ,nullptr },  // Inst #177 = BCL
  { 178,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #178 = BCLR
  { 179,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo32, -1 ,nullptr },  // Inst #179 = BCLRL
  { 180,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, OperandInfo32, -1 ,nullptr },  // Inst #180 = BCLRLn
  { 181,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #181 = BCLRn
  { 182,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo2, -1 ,nullptr },  // Inst #182 = BCLalways
  { 183,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo29, -1 ,nullptr },  // Inst #183 = BCLn
  { 184,	0,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, nullptr, nullptr, -1 ,nullptr },  // Inst #184 = BCTR
  { 185,	0,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, nullptr, nullptr, -1 ,nullptr },  // Inst #185 = BCTR8
  { 186,	0,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList9, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #186 = BCTRL
  { 187,	0,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList11, ImplicitList12, nullptr, -1 ,nullptr },  // Inst #187 = BCTRL8
  { 188,	2,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList11, ImplicitList16, OperandInfo37, -1 ,nullptr },  // Inst #188 = BCTRL8_LDinto_toc
  { 189,	2,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x38ULL, nullptr, nullptr, OperandInfo29, -1 ,nullptr },  // Inst #189 = BCn
  { 190,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #190 = BDNZ
  { 191,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, ImplicitList8, OperandInfo2, -1 ,nullptr },  // Inst #191 = BDNZ8
  { 192,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #192 = BDNZA
  { 193,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #193 = BDNZAm
  { 194,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #194 = BDNZAp
  { 195,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #195 = BDNZL
  { 196,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #196 = BDNZLA
  { 197,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #197 = BDNZLAm
  { 198,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #198 = BDNZLAp
  { 199,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #199 = BDNZLR
  { 200,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList8, nullptr, -1 ,nullptr },  // Inst #200 = BDNZLR8
  { 201,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #201 = BDNZLRL
  { 202,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #202 = BDNZLRLm
  { 203,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #203 = BDNZLRLp
  { 204,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #204 = BDNZLRm
  { 205,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #205 = BDNZLRp
  { 206,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #206 = BDNZLm
  { 207,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #207 = BDNZLp
  { 208,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #208 = BDNZm
  { 209,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #209 = BDNZp
  { 210,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #210 = BDZ
  { 211,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList8, ImplicitList8, OperandInfo2, -1 ,nullptr },  // Inst #211 = BDZ8
  { 212,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #212 = BDZA
  { 213,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #213 = BDZAm
  { 214,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #214 = BDZAp
  { 215,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #215 = BDZL
  { 216,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #216 = BDZLA
  { 217,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #217 = BDZLAm
  { 218,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #218 = BDZLAp
  { 219,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #219 = BDZLR
  { 220,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList18, ImplicitList8, nullptr, -1 ,nullptr },  // Inst #220 = BDZLR8
  { 221,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #221 = BDZLRL
  { 222,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #222 = BDZLRLm
  { 223,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #223 = BDZLRLp
  { 224,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #224 = BDZLRm
  { 225,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, nullptr, -1 ,nullptr },  // Inst #225 = BDZLRp
  { 226,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #226 = BDZLm
  { 227,	1,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #227 = BDZLp
  { 228,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #228 = BDZm
  { 229,	1,	0,	4,	3,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList7, ImplicitList7, OperandInfo2, -1 ,nullptr },  // Inst #229 = BDZp
  { 230,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo2, -1 ,nullptr },  // Inst #230 = BL
  { 231,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #231 = BL8
  { 232,	1,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #232 = BL8_NOP
  { 233,	2,	0,	8,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #233 = BL8_NOP_TLS
  { 234,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #234 = BL8_TLS
  { 235,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo7, -1 ,nullptr },  // Inst #235 = BL8_TLS_
  { 236,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo2, -1 ,nullptr },  // Inst #236 = BLA
  { 237,	1,	0,	4,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #237 = BLA8
  { 238,	1,	0,	8,	3,	0|(1ULL<<MCID::Call), 0x38ULL, ImplicitList13, ImplicitList12, OperandInfo2, -1 ,nullptr },  // Inst #238 = BLA8_NOP
  { 239,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList14, nullptr, nullptr, -1 ,nullptr },  // Inst #239 = BLR
  { 240,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x38ULL, ImplicitList19, nullptr, nullptr, -1 ,nullptr },  // Inst #240 = BLR8
  { 241,	0,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList14, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #241 = BLRL
  { 242,	2,	0,	4,	3,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, ImplicitList10, OperandInfo7, -1 ,nullptr },  // Inst #242 = BL_TLS
  { 243,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #243 = BPERMD
  { 244,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #244 = BRINC
  { 245,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #245 = CLRBHRB
  { 246,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #246 = CLRLSLDI
  { 247,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #247 = CLRLSLDIo
  { 248,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #248 = CLRLSLWI
  { 249,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #249 = CLRLSLWIo
  { 250,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #250 = CLRRDI
  { 251,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #251 = CLRRDIo
  { 252,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #252 = CLRRWI
  { 253,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #253 = CLRRWIo
  { 254,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #254 = CMPB
  { 255,	3,	1,	4,	2,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #255 = CMPB8
  { 256,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #256 = CMPD
  { 257,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #257 = CMPDI
  { 258,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo42, -1 ,nullptr },  // Inst #258 = CMPEQB
  { 259,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo40, -1 ,nullptr },  // Inst #259 = CMPLD
  { 260,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo41, -1 ,nullptr },  // Inst #260 = CMPLDI
  { 261,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #261 = CMPLW
  { 262,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #262 = CMPLWI
  { 263,	4,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #263 = CMPRB
  { 264,	4,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo45, -1 ,nullptr },  // Inst #264 = CMPRB8
  { 265,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #265 = CMPW
  { 266,	3,	1,	4,	5,	0|(1ULL<<MCID::Compare), 0x8ULL, nullptr, nullptr, OperandInfo44, -1 ,nullptr },  // Inst #266 = CMPWI
  { 267,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #267 = CNTLZD
  { 268,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #268 = CNTLZDo
  { 269,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #269 = CNTLZW
  { 270,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #270 = CNTLZW8
  { 271,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #271 = CNTLZW8o
  { 272,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #272 = CNTLZWo
  { 273,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #273 = CNTTZD
  { 274,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #274 = CNTTZDo
  { 275,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #275 = CNTTZW
  { 276,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #276 = CNTTZW8
  { 277,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #277 = CNTTZW8o
  { 278,	2,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #278 = CNTTZWo
  { 279,	0,	0,	4,	6,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #279 = CP_ABORT
  { 280,	3,	0,	4,	7,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #280 = CP_COPY
  { 281,	3,	0,	4,	7,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #281 = CP_COPY8
  { 282,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #282 = CP_COPY_FIRST
  { 283,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #283 = CP_COPYx
  { 284,	3,	0,	4,	8,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #284 = CP_PASTE
  { 285,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #285 = CP_PASTE8
  { 286,	3,	0,	4,	8,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #286 = CP_PASTE8o
  { 287,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #287 = CP_PASTE_LAST
  { 288,	3,	0,	4,	8,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList1, OperandInfo14, -1 ,nullptr },  // Inst #288 = CP_PASTEo
  { 289,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #289 = CP_PASTEx
  { 290,	0,	0,	4,	9,	0, 0x0ULL, nullptr, ImplicitList20, nullptr, -1 ,nullptr },  // Inst #290 = CR6SET
  { 291,	0,	0,	4,	9,	0, 0x0ULL, nullptr, ImplicitList20, nullptr, -1 ,nullptr },  // Inst #291 = CR6UNSET
  { 292,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #292 = CRAND
  { 293,	3,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #293 = CRANDC
  { 294,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #294 = CREQV
  { 295,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #295 = CRNAND
  { 296,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #296 = CRNOR
  { 297,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #297 = CROR
  { 298,	3,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #298 = CRORC
  { 299,	1,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #299 = CRSET
  { 300,	1,	1,	4,	9,	0, 0x0ULL, nullptr, nullptr, OperandInfo32, -1 ,nullptr },  // Inst #300 = CRUNSET
  { 301,	3,	1,	4,	9,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo46, -1 ,nullptr },  // Inst #301 = CRXOR
  { 302,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #302 = DCBA
  { 303,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #303 = DCBF
  { 304,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #304 = DCBI
  { 305,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #305 = DCBST
  { 306,	3,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #306 = DCBT
  { 307,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #307 = DCBTCT
  { 308,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #308 = DCBTDS
  { 309,	3,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #309 = DCBTST
  { 310,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #310 = DCBTSTCT
  { 311,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo49, -1 ,nullptr },  // Inst #311 = DCBTSTDS
  { 312,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #312 = DCBTSTT
  { 313,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #313 = DCBTSTx
  { 314,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #314 = DCBTT
  { 315,	2,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #315 = DCBTx
  { 316,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #316 = DCBZ
  { 317,	2,	0,	4,	10,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #317 = DCBZL
  { 318,	2,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #318 = DCCCI
  { 319,	3,	1,	4,	12,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #319 = DIVD
  { 320,	3,	1,	4,	12,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #320 = DIVDE
  { 321,	3,	1,	4,	12,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #321 = DIVDEU
  { 322,	3,	1,	4,	12,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #322 = DIVDEUo
  { 323,	3,	1,	4,	12,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #323 = DIVDEo
  { 324,	3,	1,	4,	12,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #324 = DIVDU
  { 325,	3,	1,	4,	12,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #325 = DIVDUo
  { 326,	3,	1,	4,	12,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #326 = DIVDo
  { 327,	3,	1,	4,	13,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #327 = DIVW
  { 328,	3,	1,	4,	13,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #328 = DIVWE
  { 329,	3,	1,	4,	13,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #329 = DIVWEU
  { 330,	3,	1,	4,	13,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #330 = DIVWEUo
  { 331,	3,	1,	4,	13,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #331 = DIVWEo
  { 332,	3,	1,	4,	13,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #332 = DIVWU
  { 333,	3,	1,	4,	13,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #333 = DIVWUo
  { 334,	3,	1,	4,	13,	0, 0xdULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #334 = DIVWo
  { 335,	1,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, PPC::DeprecatedDST ,nullptr },  // Inst #335 = DSS
  { 336,	0,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, PPC::DeprecatedDST ,nullptr },  // Inst #336 = DSSALL
  { 337,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, PPC::DeprecatedDST ,nullptr },  // Inst #337 = DST
  { 338,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, PPC::DeprecatedDST ,nullptr },  // Inst #338 = DST64
  { 339,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, PPC::DeprecatedDST ,nullptr },  // Inst #339 = DSTST
  { 340,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, PPC::DeprecatedDST ,nullptr },  // Inst #340 = DSTST64
  { 341,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, PPC::DeprecatedDST ,nullptr },  // Inst #341 = DSTSTT
  { 342,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, PPC::DeprecatedDST ,nullptr },  // Inst #342 = DSTSTT64
  { 343,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, PPC::DeprecatedDST ,nullptr },  // Inst #343 = DSTT
  { 344,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo51, PPC::DeprecatedDST ,nullptr },  // Inst #344 = DSTT64
  { 345,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList6, ImplicitList6, OperandInfo52, -1 ,nullptr },  // Inst #345 = DYNALLOC
  { 346,	4,	1,	4,	0,	0, 0x0ULL, ImplicitList21, ImplicitList21, OperandInfo53, -1 ,nullptr },  // Inst #346 = DYNALLOC8
  { 347,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #347 = DYNAREAOFFSET
  { 348,	3,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo54, -1 ,nullptr },  // Inst #348 = DYNAREAOFFSET8
  { 349,	1,	0,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #349 = EH_SjLj_LongJmp32
  { 350,	1,	0,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo10, -1 ,nullptr },  // Inst #350 = EH_SjLj_LongJmp64
  { 351,	2,	1,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList7, OperandInfo55, -1 ,nullptr },  // Inst #351 = EH_SjLj_SetJmp32
  { 352,	2,	1,	4,	0,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList8, OperandInfo55, -1 ,nullptr },  // Inst #352 = EH_SjLj_SetJmp64
  { 353,	1,	0,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #353 = EH_SjLj_Setup
  { 354,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #354 = EQV
  { 355,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #355 = EQV8
  { 356,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #356 = EQV8o
  { 357,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #357 = EQVo
  { 358,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #358 = EVABS
  { 359,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #359 = EVADDIW
  { 360,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #360 = EVADDSMIAAW
  { 361,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #361 = EVADDSSIAAW
  { 362,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #362 = EVADDUMIAAW
  { 363,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #363 = EVADDUSIAAW
  { 364,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #364 = EVADDW
  { 365,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #365 = EVAND
  { 366,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #366 = EVANDC
  { 367,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #367 = EVCMPEQ
  { 368,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #368 = EVCMPGTS
  { 369,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #369 = EVCMPGTU
  { 370,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #370 = EVCMPLTS
  { 371,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo43, -1 ,nullptr },  // Inst #371 = EVCMPLTU
  { 372,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #372 = EVCNTLSW
  { 373,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #373 = EVCNTLZW
  { 374,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #374 = EVDIVWS
  { 375,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #375 = EVDIVWU
  { 376,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #376 = EVEQV
  { 377,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #377 = EVEXTSB
  { 378,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #378 = EVEXTSH
  { 379,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #379 = EVLDD
  { 380,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #380 = EVLDDX
  { 381,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #381 = EVLDH
  { 382,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #382 = EVLDHX
  { 383,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #383 = EVLDW
  { 384,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #384 = EVLDWX
  { 385,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #385 = EVLHHESPLAT
  { 386,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #386 = EVLHHESPLATX
  { 387,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #387 = EVLHHOSSPLAT
  { 388,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #388 = EVLHHOSSPLATX
  { 389,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #389 = EVLHHOUSPLAT
  { 390,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #390 = EVLHHOUSPLATX
  { 391,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #391 = EVLWHE
  { 392,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #392 = EVLWHEX
  { 393,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #393 = EVLWHOS
  { 394,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #394 = EVLWHOSX
  { 395,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #395 = EVLWHOU
  { 396,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #396 = EVLWHOUX
  { 397,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #397 = EVLWHSPLAT
  { 398,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #398 = EVLWHSPLATX
  { 399,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #399 = EVLWWSPLAT
  { 400,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #400 = EVLWWSPLATX
  { 401,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #401 = EVMERGEHI
  { 402,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #402 = EVMERGEHILO
  { 403,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #403 = EVMERGELO
  { 404,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #404 = EVMERGELOHI
  { 405,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #405 = EVMHEGSMFAA
  { 406,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #406 = EVMHEGSMFAN
  { 407,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #407 = EVMHEGSMIAA
  { 408,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #408 = EVMHEGSMIAN
  { 409,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #409 = EVMHEGUMIAA
  { 410,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #410 = EVMHEGUMIAN
  { 411,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #411 = EVMHESMF
  { 412,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #412 = EVMHESMFA
  { 413,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #413 = EVMHESMFAAW
  { 414,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #414 = EVMHESMFANW
  { 415,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #415 = EVMHESMI
  { 416,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #416 = EVMHESMIA
  { 417,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #417 = EVMHESMIAAW
  { 418,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #418 = EVMHESMIANW
  { 419,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #419 = EVMHESSF
  { 420,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #420 = EVMHESSFA
  { 421,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #421 = EVMHESSFAAW
  { 422,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #422 = EVMHESSFANW
  { 423,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #423 = EVMHESSIAAW
  { 424,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #424 = EVMHESSIANW
  { 425,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #425 = EVMHEUMI
  { 426,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #426 = EVMHEUMIA
  { 427,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #427 = EVMHEUMIAAW
  { 428,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #428 = EVMHEUMIANW
  { 429,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #429 = EVMHEUSIAAW
  { 430,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #430 = EVMHEUSIANW
  { 431,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #431 = EVMHOGSMFAA
  { 432,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #432 = EVMHOGSMFAN
  { 433,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #433 = EVMHOGSMIAA
  { 434,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #434 = EVMHOGSMIAN
  { 435,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #435 = EVMHOGUMIAA
  { 436,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #436 = EVMHOGUMIAN
  { 437,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #437 = EVMHOSMF
  { 438,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #438 = EVMHOSMFA
  { 439,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #439 = EVMHOSMFAAW
  { 440,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #440 = EVMHOSMFANW
  { 441,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #441 = EVMHOSMI
  { 442,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #442 = EVMHOSMIA
  { 443,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #443 = EVMHOSMIAAW
  { 444,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #444 = EVMHOSMIANW
  { 445,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #445 = EVMHOSSF
  { 446,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #446 = EVMHOSSFA
  { 447,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #447 = EVMHOSSFAAW
  { 448,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #448 = EVMHOSSFANW
  { 449,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #449 = EVMHOSSIAAW
  { 450,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #450 = EVMHOSSIANW
  { 451,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #451 = EVMHOUMI
  { 452,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #452 = EVMHOUMIA
  { 453,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #453 = EVMHOUMIAAW
  { 454,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #454 = EVMHOUMIANW
  { 455,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #455 = EVMHOUSIAAW
  { 456,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #456 = EVMHOUSIANW
  { 457,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #457 = EVMRA
  { 458,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #458 = EVMWHSMF
  { 459,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #459 = EVMWHSMFA
  { 460,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #460 = EVMWHSMI
  { 461,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #461 = EVMWHSMIA
  { 462,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #462 = EVMWHSSF
  { 463,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #463 = EVMWHSSFA
  { 464,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #464 = EVMWHUMI
  { 465,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #465 = EVMWHUMIA
  { 466,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #466 = EVMWLSMIAAW
  { 467,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #467 = EVMWLSMIANW
  { 468,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #468 = EVMWLSSIAAW
  { 469,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #469 = EVMWLSSIANW
  { 470,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #470 = EVMWLUMI
  { 471,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #471 = EVMWLUMIA
  { 472,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #472 = EVMWLUMIAAW
  { 473,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #473 = EVMWLUMIANW
  { 474,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #474 = EVMWLUSIAAW
  { 475,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #475 = EVMWLUSIANW
  { 476,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #476 = EVMWSMF
  { 477,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #477 = EVMWSMFA
  { 478,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #478 = EVMWSMFAA
  { 479,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #479 = EVMWSMFAN
  { 480,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #480 = EVMWSMI
  { 481,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #481 = EVMWSMIA
  { 482,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #482 = EVMWSMIAA
  { 483,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #483 = EVMWSMIAN
  { 484,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #484 = EVMWSSF
  { 485,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #485 = EVMWSSFA
  { 486,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #486 = EVMWSSFAA
  { 487,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #487 = EVMWSSFAN
  { 488,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #488 = EVMWUMI
  { 489,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #489 = EVMWUMIA
  { 490,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #490 = EVMWUMIAA
  { 491,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #491 = EVMWUMIAN
  { 492,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #492 = EVNAND
  { 493,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #493 = EVNEG
  { 494,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #494 = EVNOR
  { 495,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #495 = EVOR
  { 496,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #496 = EVORC
  { 497,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #497 = EVRLW
  { 498,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #498 = EVRLWI
  { 499,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #499 = EVRNDW
  { 500,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #500 = EVSLW
  { 501,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #501 = EVSLWI
  { 502,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #502 = EVSPLATFI
  { 503,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #503 = EVSPLATI
  { 504,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #504 = EVSRWIS
  { 505,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #505 = EVSRWIU
  { 506,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #506 = EVSRWS
  { 507,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #507 = EVSRWU
  { 508,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #508 = EVSTDD
  { 509,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #509 = EVSTDDX
  { 510,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #510 = EVSTDH
  { 511,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #511 = EVSTDHX
  { 512,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #512 = EVSTDW
  { 513,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #513 = EVSTDWX
  { 514,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #514 = EVSTWHE
  { 515,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #515 = EVSTWHEX
  { 516,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #516 = EVSTWHO
  { 517,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #517 = EVSTWHOX
  { 518,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #518 = EVSTWWE
  { 519,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #519 = EVSTWWEX
  { 520,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #520 = EVSTWWO
  { 521,	3,	0,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #521 = EVSTWWOX
  { 522,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #522 = EVSUBFSMIAAW
  { 523,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #523 = EVSUBFSSIAAW
  { 524,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #524 = EVSUBFUMIAAW
  { 525,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #525 = EVSUBFUSIAAW
  { 526,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #526 = EVSUBFW
  { 527,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #527 = EVSUBIFW
  { 528,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #528 = EVXOR
  { 529,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #529 = EXTLDI
  { 530,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #530 = EXTLDIo
  { 531,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #531 = EXTLWI
  { 532,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #532 = EXTLWIo
  { 533,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #533 = EXTRDI
  { 534,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #534 = EXTRDIo
  { 535,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #535 = EXTRWI
  { 536,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #536 = EXTRWIo
  { 537,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #537 = EXTSB
  { 538,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #538 = EXTSB8
  { 539,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #539 = EXTSB8_32_64
  { 540,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #540 = EXTSB8o
  { 541,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #541 = EXTSBo
  { 542,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #542 = EXTSH
  { 543,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #543 = EXTSH8
  { 544,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #544 = EXTSH8_32_64
  { 545,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #545 = EXTSH8o
  { 546,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #546 = EXTSHo
  { 547,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #547 = EXTSW
  { 548,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo59, -1 ,nullptr },  // Inst #548 = EXTSW_32_64
  { 549,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo59, -1 ,nullptr },  // Inst #549 = EXTSW_32_64o
  { 550,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #550 = EXTSWo
  { 551,	0,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #551 = EnforceIEIO
  { 552,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #552 = FABSD
  { 553,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #553 = FABSDo
  { 554,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #554 = FABSS
  { 555,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo61, -1 ,nullptr },  // Inst #555 = FABSSo
  { 556,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #556 = FADD
  { 557,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #557 = FADDS
  { 558,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo63, -1 ,nullptr },  // Inst #558 = FADDSo
  { 559,	3,	1,	4,	15,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo62, -1 ,nullptr },  // Inst #559 = FADDo
  { 560,	3,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #560 = FADDrtz
  { 561,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #561 = FCFID
  { 562,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #562 = FCFIDS
  { 563,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo64, -1 ,nullptr },  // Inst #563 = FCFIDSo
  { 564,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #564 = FCFIDU
  { 565,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #565 = FCFIDUS
  { 566,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo64, -1 ,nullptr },  // Inst #566 = FCFIDUSo
  { 567,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #567 = FCFIDUo
  { 568,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #568 = FCFIDo
  { 569,	3,	1,	4,	16,	0|(1ULL<<MCID::Compare), 0x18ULL, nullptr, nullptr, OperandInfo65, -1 ,nullptr },  // Inst #569 = FCMPUD
  { 570,	3,	1,	4,	16,	0|(1ULL<<MCID::Compare), 0x18ULL, nullptr, nullptr, OperandInfo66, -1 ,nullptr },  // Inst #570 = FCMPUS
  { 571,	3,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #571 = FCPSGND
  { 572,	3,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo62, -1 ,nullptr },  // Inst #572 = FCPSGNDo
  { 573,	3,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #573 = FCPSGNS
  { 574,	3,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo63, -1 ,nullptr },  // Inst #574 = FCPSGNSo
  { 575,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #575 = FCTID
  { 576,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #576 = FCTIDUZ
  { 577,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #577 = FCTIDUZo
  { 578,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #578 = FCTIDZ
  { 579,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #579 = FCTIDZo
  { 580,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #580 = FCTIDo
  { 581,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #581 = FCTIW
  { 582,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #582 = FCTIWUZ
  { 583,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #583 = FCTIWUZo
  { 584,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #584 = FCTIWZ
  { 585,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #585 = FCTIWZo
  { 586,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #586 = FCTIWo
  { 587,	3,	1,	4,	17,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #587 = FDIV
  { 588,	3,	1,	4,	18,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #588 = FDIVS
  { 589,	3,	1,	4,	18,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo63, -1 ,nullptr },  // Inst #589 = FDIVSo
  { 590,	3,	1,	4,	17,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo62, -1 ,nullptr },  // Inst #590 = FDIVo
  { 591,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #591 = FMADD
  { 592,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #592 = FMADDS
  { 593,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo68, -1 ,nullptr },  // Inst #593 = FMADDSo
  { 594,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo67, -1 ,nullptr },  // Inst #594 = FMADDo
  { 595,	2,	1,	4,	14,	0, 0x0ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #595 = FMR
  { 596,	2,	1,	4,	14,	0, 0x0ULL, nullptr, ImplicitList22, OperandInfo61, -1 ,nullptr },  // Inst #596 = FMRo
  { 597,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #597 = FMSUB
  { 598,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #598 = FMSUBS
  { 599,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo68, -1 ,nullptr },  // Inst #599 = FMSUBSo
  { 600,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo67, -1 ,nullptr },  // Inst #600 = FMSUBo
  { 601,	3,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #601 = FMUL
  { 602,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #602 = FMULS
  { 603,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo63, -1 ,nullptr },  // Inst #603 = FMULSo
  { 604,	3,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo62, -1 ,nullptr },  // Inst #604 = FMULo
  { 605,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #605 = FNABSD
  { 606,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #606 = FNABSDo
  { 607,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #607 = FNABSS
  { 608,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo61, -1 ,nullptr },  // Inst #608 = FNABSSo
  { 609,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #609 = FNEGD
  { 610,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #610 = FNEGDo
  { 611,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #611 = FNEGS
  { 612,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo61, -1 ,nullptr },  // Inst #612 = FNEGSo
  { 613,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #613 = FNMADD
  { 614,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #614 = FNMADDS
  { 615,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo68, -1 ,nullptr },  // Inst #615 = FNMADDSo
  { 616,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo67, -1 ,nullptr },  // Inst #616 = FNMADDo
  { 617,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #617 = FNMSUB
  { 618,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, nullptr, OperandInfo68, -1 ,nullptr },  // Inst #618 = FNMSUBS
  { 619,	4,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo68, -1 ,nullptr },  // Inst #619 = FNMSUBSo
  { 620,	4,	1,	4,	19,	0|(1ULL<<MCID::Commutable), 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo67, -1 ,nullptr },  // Inst #620 = FNMSUBo
  { 621,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #621 = FRE
  { 622,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #622 = FRES
  { 623,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo61, -1 ,nullptr },  // Inst #623 = FRESo
  { 624,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #624 = FREo
  { 625,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #625 = FRIMD
  { 626,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #626 = FRIMDo
  { 627,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #627 = FRIMS
  { 628,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo61, -1 ,nullptr },  // Inst #628 = FRIMSo
  { 629,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #629 = FRIND
  { 630,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #630 = FRINDo
  { 631,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #631 = FRINS
  { 632,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo61, -1 ,nullptr },  // Inst #632 = FRINSo
  { 633,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #633 = FRIPD
  { 634,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #634 = FRIPDo
  { 635,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #635 = FRIPS
  { 636,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo61, -1 ,nullptr },  // Inst #636 = FRIPSo
  { 637,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #637 = FRIZD
  { 638,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #638 = FRIZDo
  { 639,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #639 = FRIZS
  { 640,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo61, -1 ,nullptr },  // Inst #640 = FRIZSo
  { 641,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo64, -1 ,nullptr },  // Inst #641 = FRSP
  { 642,	2,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo64, -1 ,nullptr },  // Inst #642 = FRSPo
  { 643,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #643 = FRSQRTE
  { 644,	2,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #644 = FRSQRTES
  { 645,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo61, -1 ,nullptr },  // Inst #645 = FRSQRTESo
  { 646,	2,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #646 = FRSQRTEo
  { 647,	4,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo67, -1 ,nullptr },  // Inst #647 = FSELD
  { 648,	4,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo67, -1 ,nullptr },  // Inst #648 = FSELDo
  { 649,	4,	1,	4,	14,	0, 0x18ULL, nullptr, nullptr, OperandInfo69, -1 ,nullptr },  // Inst #649 = FSELS
  { 650,	4,	1,	4,	14,	0, 0x18ULL, nullptr, ImplicitList22, OperandInfo69, -1 ,nullptr },  // Inst #650 = FSELSo
  { 651,	2,	1,	4,	20,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo60, -1 ,nullptr },  // Inst #651 = FSQRT
  { 652,	2,	1,	4,	21,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo61, -1 ,nullptr },  // Inst #652 = FSQRTS
  { 653,	2,	1,	4,	21,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo61, -1 ,nullptr },  // Inst #653 = FSQRTSo
  { 654,	2,	1,	4,	20,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo60, -1 ,nullptr },  // Inst #654 = FSQRTo
  { 655,	3,	1,	4,	15,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo62, -1 ,nullptr },  // Inst #655 = FSUB
  { 656,	3,	1,	4,	14,	0, 0x18ULL, ImplicitList13, nullptr, OperandInfo63, -1 ,nullptr },  // Inst #656 = FSUBS
  { 657,	3,	1,	4,	14,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo63, -1 ,nullptr },  // Inst #657 = FSUBSo
  { 658,	3,	1,	4,	15,	0, 0x18ULL, ImplicitList13, ImplicitList22, OperandInfo62, -1 ,nullptr },  // Inst #658 = FSUBo
  { 659,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList23, OperandInfo17, -1 ,nullptr },  // Inst #659 = GETtlsADDR
  { 660,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList24, OperandInfo14, -1 ,nullptr },  // Inst #660 = GETtlsADDR32
  { 661,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList23, OperandInfo17, -1 ,nullptr },  // Inst #661 = GETtlsldADDR
  { 662,	3,	1,	4,	0,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, ImplicitList24, OperandInfo14, -1 ,nullptr },  // Inst #662 = GETtlsldADDR32
  { 663,	2,	0,	4,	22,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo47, -1 ,nullptr },  // Inst #663 = ICBI
  { 664,	3,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo48, -1 ,nullptr },  // Inst #664 = ICBT
  { 665,	2,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #665 = ICCCI
  { 666,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #666 = INSLWI
  { 667,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #667 = INSLWIo
  { 668,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #668 = INSRDI
  { 669,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #669 = INSRDIo
  { 670,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #670 = INSRWI
  { 671,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo39, -1 ,nullptr },  // Inst #671 = INSRWIo
  { 672,	4,	1,	4,	23,	0|(1ULL<<MCID::Select), 0x8ULL, nullptr, nullptr, OperandInfo70, -1 ,nullptr },  // Inst #672 = ISEL
  { 673,	4,	1,	4,	23,	0|(1ULL<<MCID::Select), 0x8ULL, nullptr, nullptr, OperandInfo71, -1 ,nullptr },  // Inst #673 = ISEL8
  { 674,	0,	0,	4,	24,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #674 = ISYNC
  { 675,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo18, -1 ,nullptr },  // Inst #675 = LA
  { 676,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #676 = LAx
  { 677,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #677 = LBARX
  { 678,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #678 = LBARXL
  { 679,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #679 = LBZ
  { 680,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #680 = LBZ8
  { 681,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #681 = LBZCIX
  { 682,	4,	2,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #682 = LBZU
  { 683,	4,	2,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #683 = LBZU8
  { 684,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #684 = LBZUX
  { 685,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #685 = LBZUX8
  { 686,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #686 = LBZX
  { 687,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #687 = LBZX8
  { 688,	3,	1,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #688 = LD
  { 689,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #689 = LDARX
  { 690,	3,	1,	4,	29,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #690 = LDARXL
  { 691,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #691 = LDAT
  { 692,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #692 = LDBRX
  { 693,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #693 = LDCIX
  { 694,	3,	1,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #694 = LDMX
  { 695,	4,	2,	4,	30,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #695 = LDU
  { 696,	4,	2,	4,	31,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #696 = LDUX
  { 697,	3,	1,	4,	28,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #697 = LDX
  { 698,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #698 = LDgotTprelL
  { 699,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo80, -1 ,nullptr },  // Inst #699 = LDgotTprelL32
  { 700,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #700 = LDtoc
  { 701,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #701 = LDtocBA
  { 702,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #702 = LDtocCPT
  { 703,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo81, -1 ,nullptr },  // Inst #703 = LDtocJTI
  { 704,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo79, -1 ,nullptr },  // Inst #704 = LDtocL
  { 705,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #705 = LFD
  { 706,	4,	2,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo83, -1 ,nullptr },  // Inst #706 = LFDU
  { 707,	4,	2,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo84, -1 ,nullptr },  // Inst #707 = LFDUX
  { 708,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #708 = LFDX
  { 709,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #709 = LFIWAX
  { 710,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #710 = LFIWZX
  { 711,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #711 = LFS
  { 712,	4,	2,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo87, -1 ,nullptr },  // Inst #712 = LFSU
  { 713,	4,	2,	4,	34,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo88, -1 ,nullptr },  // Inst #713 = LFSUX
  { 714,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #714 = LFSX
  { 715,	3,	1,	4,	35,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #715 = LHA
  { 716,	3,	1,	4,	35,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #716 = LHA8
  { 717,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #717 = LHARX
  { 718,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #718 = LHARXL
  { 719,	4,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #719 = LHAU
  { 720,	4,	2,	4,	36,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #720 = LHAU8
  { 721,	4,	2,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #721 = LHAUX
  { 722,	4,	2,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #722 = LHAUX8
  { 723,	3,	1,	4,	35,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #723 = LHAX
  { 724,	3,	1,	4,	35,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #724 = LHAX8
  { 725,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #725 = LHBRX
  { 726,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #726 = LHBRX8
  { 727,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #727 = LHZ
  { 728,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #728 = LHZ8
  { 729,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #729 = LHZCIX
  { 730,	4,	2,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #730 = LHZU
  { 731,	4,	2,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #731 = LHZU8
  { 732,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #732 = LHZUX
  { 733,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #733 = LHZUX8
  { 734,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #734 = LHZX
  { 735,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #735 = LHZX8
  { 736,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #736 = LI
  { 737,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #737 = LI8
  { 738,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #738 = LIS
  { 739,	2,	1,	4,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x8ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #739 = LIS8
  { 740,	3,	1,	4,	38,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #740 = LMW
  { 741,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #741 = LSWI
  { 742,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #742 = LVEBX
  { 743,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #743 = LVEHX
  { 744,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #744 = LVEWX
  { 745,	3,	1,	4,	11,	0, 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #745 = LVSL
  { 746,	3,	1,	4,	11,	0, 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #746 = LVSR
  { 747,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #747 = LVX
  { 748,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #748 = LVXL
  { 749,	3,	1,	4,	39,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #749 = LWA
  { 750,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #750 = LWARX
  { 751,	3,	1,	4,	25,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #751 = LWARXL
  { 752,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #752 = LWAT
  { 753,	4,	2,	4,	37,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #753 = LWAUX
  { 754,	3,	1,	4,	35,	0|(1ULL<<MCID::MayLoad), 0x14ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #754 = LWAX
  { 755,	3,	1,	4,	35,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x14ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #755 = LWAX_32
  { 756,	3,	1,	4,	39,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x14ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #756 = LWA_32
  { 757,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #757 = LWBRX
  { 758,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #758 = LWBRX8
  { 759,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #759 = LWZ
  { 760,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #760 = LWZ8
  { 761,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #761 = LWZCIX
  { 762,	4,	2,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo74, -1 ,nullptr },  // Inst #762 = LWZU
  { 763,	4,	2,	4,	26,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo75, -1 ,nullptr },  // Inst #763 = LWZU8
  { 764,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo76, -1 ,nullptr },  // Inst #764 = LWZUX
  { 765,	4,	2,	4,	27,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo77, -1 ,nullptr },  // Inst #765 = LWZUX8
  { 766,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #766 = LWZX
  { 767,	3,	1,	4,	11,	0|(1ULL<<MCID::MayLoad), 0x10ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #767 = LWZX8
  { 768,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo58, -1 ,nullptr },  // Inst #768 = LWZtoc
  { 769,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #769 = LXSD
  { 770,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #770 = LXSDX
  { 771,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #771 = LXSIBZX
  { 772,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #772 = LXSIHZX
  { 773,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #773 = LXSIWAX
  { 774,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #774 = LXSIWZX
  { 775,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #775 = LXSSP
  { 776,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #776 = LXSSPX
  { 777,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #777 = LXV
  { 778,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #778 = LXVB16X
  { 779,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #779 = LXVD2X
  { 780,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #780 = LXVDSX
  { 781,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #781 = LXVH8X
  { 782,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #782 = LXVL
  { 783,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #783 = LXVLL
  { 784,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #784 = LXVW4X
  { 785,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #785 = LXVWSX
  { 786,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #786 = LXVX
  { 787,	1,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #787 = MBAR
  { 788,	2,	1,	4,	40,	0, 0x21ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #788 = MCRF
  { 789,	2,	1,	4,	40,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo98, -1 ,nullptr },  // Inst #789 = MCRFS
  { 790,	1,	1,	4,	41,	0, 0x0ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #790 = MCRXRX
  { 791,	3,	1,	4,	3,	0, 0x1ULL, nullptr, nullptr, OperandInfo100, -1 ,nullptr },  // Inst #791 = MFBHRBE
  { 792,	1,	1,	4,	42,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #792 = MFCR
  { 793,	1,	1,	4,	42,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #793 = MFCR8
  { 794,	1,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList7, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #794 = MFCTR
  { 795,	1,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList8, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #795 = MFCTR8
  { 796,	2,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #796 = MFDCR
  { 797,	1,	1,	4,	44,	0, 0x1aULL, ImplicitList13, nullptr, OperandInfo103, -1 ,nullptr },  // Inst #797 = MFFS
  { 798,	1,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList13, ImplicitList22, OperandInfo103, -1 ,nullptr },  // Inst #798 = MFFSo
  { 799,	1,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList10, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #799 = MFLR
  { 800,	1,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, ImplicitList12, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #800 = MFLR8
  { 801,	1,	1,	4,	45,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #801 = MFMSR
  { 802,	2,	1,	4,	46,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #802 = MFOCRF
  { 803,	2,	1,	4,	46,	0|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo91, -1 ,nullptr },  // Inst #803 = MFOCRF8
  { 804,	2,	1,	4,	43,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #804 = MFSPR
  { 805,	2,	1,	4,	43,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo104, -1 ,nullptr },  // Inst #805 = MFSPR8
  { 806,	2,	1,	4,	47,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #806 = MFSR
  { 807,	2,	1,	4,	47,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #807 = MFSRIN
  { 808,	2,	1,	4,	48,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #808 = MFTB
  { 809,	1,	1,	4,	48,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo102, -1 ,nullptr },  // Inst #809 = MFTB8
  { 810,	1,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #810 = MFVRSAVE
  { 811,	2,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, nullptr, OperandInfo105, -1 ,nullptr },  // Inst #811 = MFVRSAVEv
  { 812,	1,	1,	4,	49,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #812 = MFVSCR
  { 813,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #813 = MFVSRD
  { 814,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo108, -1 ,nullptr },  // Inst #814 = MFVSRLD
  { 815,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo109, -1 ,nullptr },  // Inst #815 = MFVSRWZ
  { 816,	0,	0,	4,	51,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #816 = MSGSYNC
  { 817,	0,	0,	4,	52,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #817 = MSYNC
  { 818,	2,	0,	4,	41,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #818 = MTCRF
  { 819,	2,	0,	4,	41,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x20ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #819 = MTCRF8
  { 820,	1,	0,	4,	53,	0, 0x9ULL, nullptr, ImplicitList7, OperandInfo101, -1 ,nullptr },  // Inst #820 = MTCTR
  { 821,	1,	0,	4,	53,	0, 0x9ULL, nullptr, ImplicitList8, OperandInfo102, -1 ,nullptr },  // Inst #821 = MTCTR8
  { 822,	1,	0,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList8, OperandInfo102, -1 ,nullptr },  // Inst #822 = MTCTR8loop
  { 823,	1,	0,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList7, OperandInfo101, -1 ,nullptr },  // Inst #823 = MTCTRloop
  { 824,	2,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #824 = MTDCR
  { 825,	1,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo2, -1 ,nullptr },  // Inst #825 = MTFSB0
  { 826,	1,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo2, -1 ,nullptr },  // Inst #826 = MTFSB1
  { 827,	4,	0,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #827 = MTFSF
  { 828,	3,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #828 = MTFSFI
  { 829,	3,	1,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo113, -1 ,nullptr },  // Inst #829 = MTFSFIo
  { 830,	2,	0,	4,	54,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1aULL, ImplicitList13, ImplicitList13, OperandInfo114, -1 ,nullptr },  // Inst #830 = MTFSFb
  { 831,	4,	0,	4,	44,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo112, -1 ,nullptr },  // Inst #831 = MTFSFo
  { 832,	1,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList10, OperandInfo101, -1 ,nullptr },  // Inst #832 = MTLR
  { 833,	1,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x9ULL, nullptr, ImplicitList12, OperandInfo102, -1 ,nullptr },  // Inst #833 = MTLR8
  { 834,	2,	0,	4,	55,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #834 = MTMSR
  { 835,	2,	0,	4,	56,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo57, -1 ,nullptr },  // Inst #835 = MTMSRD
  { 836,	2,	1,	4,	41,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo115, -1 ,nullptr },  // Inst #836 = MTOCRF
  { 837,	2,	1,	4,	41,	0|(1ULL<<MCID::ExtraDefRegAllocReq), 0x21ULL, nullptr, nullptr, OperandInfo116, -1 ,nullptr },  // Inst #837 = MTOCRF8
  { 838,	2,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo110, -1 ,nullptr },  // Inst #838 = MTSPR
  { 839,	2,	0,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo111, -1 ,nullptr },  // Inst #839 = MTSPR8
  { 840,	2,	0,	4,	57,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo90, -1 ,nullptr },  // Inst #840 = MTSR
  { 841,	2,	0,	4,	57,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #841 = MTSRIN
  { 842,	1,	0,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #842 = MTVRSAVE
  { 843,	2,	1,	4,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0xaULL, nullptr, nullptr, OperandInfo117, -1 ,nullptr },  // Inst #843 = MTVRSAVEv
  { 844,	1,	0,	4,	11,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #844 = MTVSCR
  { 845,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo118, -1 ,nullptr },  // Inst #845 = MTVSRD
  { 846,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #846 = MTVSRDD
  { 847,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #847 = MTVSRWA
  { 848,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo121, -1 ,nullptr },  // Inst #848 = MTVSRWS
  { 849,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo120, -1 ,nullptr },  // Inst #849 = MTVSRWZ
  { 850,	3,	1,	4,	58,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #850 = MULHD
  { 851,	3,	1,	4,	59,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #851 = MULHDU
  { 852,	3,	1,	4,	59,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #852 = MULHDUo
  { 853,	3,	1,	4,	58,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #853 = MULHDo
  { 854,	3,	1,	4,	58,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #854 = MULHW
  { 855,	3,	1,	4,	59,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #855 = MULHWU
  { 856,	3,	1,	4,	59,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #856 = MULHWUo
  { 857,	3,	1,	4,	58,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #857 = MULHWo
  { 858,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #858 = MULLD
  { 859,	3,	1,	4,	60,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #859 = MULLDo
  { 860,	3,	1,	4,	61,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #860 = MULLI
  { 861,	3,	1,	4,	61,	0, 0x8ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #861 = MULLI8
  { 862,	3,	1,	4,	58,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #862 = MULLW
  { 863,	3,	1,	4,	58,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #863 = MULLWo
  { 864,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #864 = MoveGOTtoLR
  { 865,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList10, nullptr, -1 ,nullptr },  // Inst #865 = MovePCtoLR
  { 866,	0,	0,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, ImplicitList12, nullptr, -1 ,nullptr },  // Inst #866 = MovePCtoLR8
  { 867,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #867 = NAND
  { 868,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #868 = NAND8
  { 869,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #869 = NAND8o
  { 870,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #870 = NANDo
  { 871,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #871 = NEG
  { 872,	2,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #872 = NEG8
  { 873,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo22, -1 ,nullptr },  // Inst #873 = NEG8o
  { 874,	2,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo21, -1 ,nullptr },  // Inst #874 = NEGo
  { 875,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #875 = NOP
  { 876,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #876 = NOP_GT_PWR6
  { 877,	0,	0,	4,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x8ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #877 = NOP_GT_PWR7
  { 878,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #878 = NOR
  { 879,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #879 = NOR8
  { 880,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #880 = NOR8o
  { 881,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #881 = NORo
  { 882,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #882 = OR
  { 883,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #883 = OR8
  { 884,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #884 = OR8o
  { 885,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #885 = ORC
  { 886,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #886 = ORC8
  { 887,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #887 = ORC8o
  { 888,	3,	1,	4,	1,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #888 = ORCo
  { 889,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #889 = ORI
  { 890,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #890 = ORI8
  { 891,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #891 = ORIS
  { 892,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #892 = ORIS8
  { 893,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #893 = ORo
  { 894,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo22, -1 ,nullptr },  // Inst #894 = POPCNTD
  { 895,	2,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #895 = POPCNTW
  { 896,	1,	1,	4,	0,	0, 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #896 = PPC32GOT
  { 897,	2,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #897 = PPC32PICGOT
  { 898,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #898 = QVALIGNI
  { 899,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #899 = QVALIGNIb
  { 900,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo124, -1 ,nullptr },  // Inst #900 = QVALIGNIs
  { 901,	3,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo125, -1 ,nullptr },  // Inst #901 = QVESPLATI
  { 902,	3,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo126, -1 ,nullptr },  // Inst #902 = QVESPLATIb
  { 903,	3,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo127, -1 ,nullptr },  // Inst #903 = QVESPLATIs
  { 904,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #904 = QVFABS
  { 905,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #905 = QVFABSs
  { 906,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #906 = QVFADD
  { 907,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #907 = QVFADDS
  { 908,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #908 = QVFADDSs
  { 909,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #909 = QVFCFID
  { 910,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #910 = QVFCFIDS
  { 911,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #911 = QVFCFIDU
  { 912,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #912 = QVFCFIDUS
  { 913,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #913 = QVFCFIDb
  { 914,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #914 = QVFCMPEQ
  { 915,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #915 = QVFCMPEQb
  { 916,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #916 = QVFCMPEQbs
  { 917,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #917 = QVFCMPGT
  { 918,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #918 = QVFCMPGTb
  { 919,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #919 = QVFCMPGTbs
  { 920,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #920 = QVFCMPLT
  { 921,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #921 = QVFCMPLTb
  { 922,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #922 = QVFCMPLTbs
  { 923,	3,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #923 = QVFCPSGN
  { 924,	3,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #924 = QVFCPSGNs
  { 925,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #925 = QVFCTID
  { 926,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #926 = QVFCTIDU
  { 927,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #927 = QVFCTIDUZ
  { 928,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #928 = QVFCTIDZ
  { 929,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #929 = QVFCTIDb
  { 930,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #930 = QVFCTIW
  { 931,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #931 = QVFCTIWU
  { 932,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #932 = QVFCTIWUZ
  { 933,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #933 = QVFCTIWZ
  { 934,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo122, -1 ,nullptr },  // Inst #934 = QVFLOGICAL
  { 935,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #935 = QVFLOGICALb
  { 936,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo123, -1 ,nullptr },  // Inst #936 = QVFLOGICALs
  { 937,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #937 = QVFMADD
  { 938,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #938 = QVFMADDS
  { 939,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #939 = QVFMADDSs
  { 940,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #940 = QVFMR
  { 941,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo132, -1 ,nullptr },  // Inst #941 = QVFMRb
  { 942,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #942 = QVFMRs
  { 943,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #943 = QVFMSUB
  { 944,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #944 = QVFMSUBS
  { 945,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #945 = QVFMSUBSs
  { 946,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #946 = QVFMUL
  { 947,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #947 = QVFMULS
  { 948,	3,	1,	4,	14,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #948 = QVFMULSs
  { 949,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #949 = QVFNABS
  { 950,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #950 = QVFNABSs
  { 951,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #951 = QVFNEG
  { 952,	2,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #952 = QVFNEGs
  { 953,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #953 = QVFNMADD
  { 954,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #954 = QVFNMADDS
  { 955,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #955 = QVFNMADDSs
  { 956,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #956 = QVFNMSUB
  { 957,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #957 = QVFNMSUBS
  { 958,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo136, -1 ,nullptr },  // Inst #958 = QVFNMSUBSs
  { 959,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #959 = QVFPERM
  { 960,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo137, -1 ,nullptr },  // Inst #960 = QVFPERMs
  { 961,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #961 = QVFRE
  { 962,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #962 = QVFRES
  { 963,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #963 = QVFRESs
  { 964,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #964 = QVFRIM
  { 965,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #965 = QVFRIMs
  { 966,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #966 = QVFRIN
  { 967,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #967 = QVFRINs
  { 968,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #968 = QVFRIP
  { 969,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #969 = QVFRIPs
  { 970,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #970 = QVFRIZ
  { 971,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #971 = QVFRIZs
  { 972,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #972 = QVFRSP
  { 973,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo138, -1 ,nullptr },  // Inst #973 = QVFRSPs
  { 974,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #974 = QVFRSQRTE
  { 975,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo128, -1 ,nullptr },  // Inst #975 = QVFRSQRTES
  { 976,	2,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo129, -1 ,nullptr },  // Inst #976 = QVFRSQRTESs
  { 977,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #977 = QVFSEL
  { 978,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo139, -1 ,nullptr },  // Inst #978 = QVFSELb
  { 979,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo140, -1 ,nullptr },  // Inst #979 = QVFSELbb
  { 980,	4,	1,	4,	62,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo141, -1 ,nullptr },  // Inst #980 = QVFSELbs
  { 981,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #981 = QVFSUB
  { 982,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #982 = QVFSUBS
  { 983,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo131, -1 ,nullptr },  // Inst #983 = QVFSUBSs
  { 984,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #984 = QVFTSTNAN
  { 985,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo133, -1 ,nullptr },  // Inst #985 = QVFTSTNANb
  { 986,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo134, -1 ,nullptr },  // Inst #986 = QVFTSTNANbs
  { 987,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #987 = QVFXMADD
  { 988,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #988 = QVFXMADDS
  { 989,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #989 = QVFXMUL
  { 990,	3,	1,	4,	14,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo130, -1 ,nullptr },  // Inst #990 = QVFXMULS
  { 991,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #991 = QVFXXCPNMADD
  { 992,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #992 = QVFXXCPNMADDS
  { 993,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #993 = QVFXXMADD
  { 994,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #994 = QVFXXMADDS
  { 995,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #995 = QVFXXNPMADD
  { 996,	4,	1,	4,	19,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo135, -1 ,nullptr },  // Inst #996 = QVFXXNPMADDS
  { 997,	2,	1,	4,	62,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, ImplicitList13, nullptr, OperandInfo142, -1 ,nullptr },  // Inst #997 = QVGPCI
  { 998,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #998 = QVLFCDUX
  { 999,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #999 = QVLFCDUXA
  { 1000,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1000 = QVLFCDX
  { 1001,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1001 = QVLFCDXA
  { 1002,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1002 = QVLFCSUX
  { 1003,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1003 = QVLFCSUXA
  { 1004,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1004 = QVLFCSX
  { 1005,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1005 = QVLFCSXA
  { 1006,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo144, -1 ,nullptr },  // Inst #1006 = QVLFCSXs
  { 1007,	4,	2,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo145, -1 ,nullptr },  // Inst #1007 = QVLFDUX
  { 1008,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1008 = QVLFDUXA
  { 1009,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1009 = QVLFDX
  { 1010,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1010 = QVLFDXA
  { 1011,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1011 = QVLFDXb
  { 1012,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1012 = QVLFIWAX
  { 1013,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1013 = QVLFIWAXA
  { 1014,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1014 = QVLFIWZX
  { 1015,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1015 = QVLFIWZXA
  { 1016,	4,	2,	4,	33,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo147, -1 ,nullptr },  // Inst #1016 = QVLFSUX
  { 1017,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1017 = QVLFSUXA
  { 1018,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1018 = QVLFSX
  { 1019,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1019 = QVLFSXA
  { 1020,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1020 = QVLFSXb
  { 1021,	3,	1,	4,	32,	0|(1ULL<<MCID::MayLoad), 0x0ULL, ImplicitList13, nullptr, OperandInfo144, -1 ,nullptr },  // Inst #1021 = QVLFSXs
  { 1022,	3,	1,	4,	32,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1022 = QVLPCLDX
  { 1023,	3,	1,	4,	32,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1023 = QVLPCLSX
  { 1024,	2,	1,	4,	32,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo148, -1 ,nullptr },  // Inst #1024 = QVLPCLSXint
  { 1025,	3,	1,	4,	32,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1025 = QVLPCRDX
  { 1026,	3,	1,	4,	32,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1026 = QVLPCRSX
  { 1027,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1027 = QVSTFCDUX
  { 1028,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1028 = QVSTFCDUXA
  { 1029,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1029 = QVSTFCDUXI
  { 1030,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1030 = QVSTFCDUXIA
  { 1031,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1031 = QVSTFCDX
  { 1032,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1032 = QVSTFCDXA
  { 1033,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1033 = QVSTFCDXI
  { 1034,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1034 = QVSTFCDXIA
  { 1035,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1035 = QVSTFCSUX
  { 1036,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1036 = QVSTFCSUXA
  { 1037,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1037 = QVSTFCSUXI
  { 1038,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1038 = QVSTFCSUXIA
  { 1039,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1039 = QVSTFCSX
  { 1040,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1040 = QVSTFCSXA
  { 1041,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1041 = QVSTFCSXI
  { 1042,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1042 = QVSTFCSXIA
  { 1043,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo144, -1 ,nullptr },  // Inst #1043 = QVSTFCSXs
  { 1044,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1044 = QVSTFDUX
  { 1045,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1045 = QVSTFDUXA
  { 1046,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1046 = QVSTFDUXI
  { 1047,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1047 = QVSTFDUXIA
  { 1048,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1048 = QVSTFDX
  { 1049,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1049 = QVSTFDXA
  { 1050,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1050 = QVSTFDXI
  { 1051,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1051 = QVSTFDXIA
  { 1052,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo146, -1 ,nullptr },  // Inst #1052 = QVSTFDXb
  { 1053,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1053 = QVSTFIWX
  { 1054,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1054 = QVSTFIWXA
  { 1055,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo150, -1 ,nullptr },  // Inst #1055 = QVSTFSUX
  { 1056,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1056 = QVSTFSUXA
  { 1057,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1057 = QVSTFSUXI
  { 1058,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1058 = QVSTFSUXIA
  { 1059,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo149, -1 ,nullptr },  // Inst #1059 = QVSTFSUXs
  { 1060,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1060 = QVSTFSX
  { 1061,	3,	0,	4,	63,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1061 = QVSTFSXA
  { 1062,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1062 = QVSTFSXI
  { 1063,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo143, -1 ,nullptr },  // Inst #1063 = QVSTFSXIA
  { 1064,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo144, -1 ,nullptr },  // Inst #1064 = QVSTFSXs
  { 1065,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #1065 = RESTORE_CR
  { 1066,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #1066 = RESTORE_CRBIT
  { 1067,	3,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #1067 = RESTORE_VRSAVE
  { 1068,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1068 = RFCI
  { 1069,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1069 = RFDI
  { 1070,	1,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1070 = RFEBB
  { 1071,	0,	0,	4,	65,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1071 = RFI
  { 1072,	0,	0,	4,	66,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1072 = RFID
  { 1073,	0,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1073 = RFMCI
  { 1074,	4,	1,	4,	67,	0, 0x8ULL, nullptr, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1074 = RLDCL
  { 1075,	4,	1,	4,	67,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo154, -1 ,nullptr },  // Inst #1075 = RLDCLo
  { 1076,	4,	1,	4,	67,	0, 0x8ULL, nullptr, nullptr, OperandInfo154, -1 ,nullptr },  // Inst #1076 = RLDCR
  { 1077,	4,	1,	4,	67,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo154, -1 ,nullptr },  // Inst #1077 = RLDCRo
  { 1078,	4,	1,	4,	68,	0, 0x8ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1078 = RLDIC
  { 1079,	4,	1,	4,	68,	0, 0x8ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1079 = RLDICL
  { 1080,	4,	1,	4,	68,	0, 0x8ULL, nullptr, nullptr, OperandInfo155, -1 ,nullptr },  // Inst #1080 = RLDICL_32_64
  { 1081,	4,	1,	4,	68,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo38, -1 ,nullptr },  // Inst #1081 = RLDICLo
  { 1082,	4,	1,	4,	68,	0, 0x8ULL, nullptr, nullptr, OperandInfo38, -1 ,nullptr },  // Inst #1082 = RLDICR
  { 1083,	4,	1,	4,	68,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo38, -1 ,nullptr },  // Inst #1083 = RLDICRo
  { 1084,	4,	1,	4,	68,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo38, -1 ,nullptr },  // Inst #1084 = RLDICo
  { 1085,	5,	1,	4,	68,	0, 0x8ULL, nullptr, nullptr, OperandInfo156, -1 ,nullptr },  // Inst #1085 = RLDIMI
  { 1086,	5,	1,	4,	68,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo156, -1 ,nullptr },  // Inst #1086 = RLDIMIo
  { 1087,	6,	1,	4,	69,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, nullptr, OperandInfo157, -1 ,nullptr },  // Inst #1087 = RLWIMI
  { 1088,	6,	1,	4,	69,	0, 0xcULL, nullptr, nullptr, OperandInfo158, -1 ,nullptr },  // Inst #1088 = RLWIMI8
  { 1089,	6,	1,	4,	69,	0, 0xcULL, nullptr, ImplicitList1, OperandInfo158, -1 ,nullptr },  // Inst #1089 = RLWIMI8o
  { 1090,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1090 = RLWIMIbm
  { 1091,	6,	1,	4,	69,	0|(1ULL<<MCID::Commutable), 0xcULL, nullptr, ImplicitList1, OperandInfo157, -1 ,nullptr },  // Inst #1091 = RLWIMIo
  { 1092,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1092 = RLWIMIobm
  { 1093,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo160, -1 ,nullptr },  // Inst #1093 = RLWINM
  { 1094,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo161, -1 ,nullptr },  // Inst #1094 = RLWINM8
  { 1095,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo161, -1 ,nullptr },  // Inst #1095 = RLWINM8o
  { 1096,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1096 = RLWINMbm
  { 1097,	5,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList1, OperandInfo160, -1 ,nullptr },  // Inst #1097 = RLWINMo
  { 1098,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1098 = RLWINMobm
  { 1099,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo162, -1 ,nullptr },  // Inst #1099 = RLWNM
  { 1100,	5,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo163, -1 ,nullptr },  // Inst #1100 = RLWNM8
  { 1101,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo163, -1 ,nullptr },  // Inst #1101 = RLWNM8o
  { 1102,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1102 = RLWNMbm
  { 1103,	5,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo162, -1 ,nullptr },  // Inst #1103 = RLWNMo
  { 1104,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo159, -1 ,nullptr },  // Inst #1104 = RLWNMobm
  { 1105,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #1105 = ROTRDI
  { 1106,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #1106 = ROTRDIo
  { 1107,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1107 = ROTRWI
  { 1108,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1108 = ROTRWIo
  { 1109,	2,	2,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1109 = ReadTB
  { 1110,	1,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1110 = SC
  { 1111,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #1111 = SELECT_CC_F4
  { 1112,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1112 = SELECT_CC_F8
  { 1113,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo166, -1 ,nullptr },  // Inst #1113 = SELECT_CC_I4
  { 1114,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo167, -1 ,nullptr },  // Inst #1114 = SELECT_CC_I8
  { 1115,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo168, -1 ,nullptr },  // Inst #1115 = SELECT_CC_QBRC
  { 1116,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo169, -1 ,nullptr },  // Inst #1116 = SELECT_CC_QFRC
  { 1117,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo170, -1 ,nullptr },  // Inst #1117 = SELECT_CC_QSRC
  { 1118,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo171, -1 ,nullptr },  // Inst #1118 = SELECT_CC_VRRC
  { 1119,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo165, -1 ,nullptr },  // Inst #1119 = SELECT_CC_VSFRC
  { 1120,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo172, -1 ,nullptr },  // Inst #1120 = SELECT_CC_VSRC
  { 1121,	5,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, nullptr, OperandInfo164, -1 ,nullptr },  // Inst #1121 = SELECT_CC_VSSRC
  { 1122,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo173, -1 ,nullptr },  // Inst #1122 = SELECT_F4
  { 1123,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo174, -1 ,nullptr },  // Inst #1123 = SELECT_F8
  { 1124,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo175, -1 ,nullptr },  // Inst #1124 = SELECT_I4
  { 1125,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo176, -1 ,nullptr },  // Inst #1125 = SELECT_I8
  { 1126,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo177, -1 ,nullptr },  // Inst #1126 = SELECT_QBRC
  { 1127,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo178, -1 ,nullptr },  // Inst #1127 = SELECT_QFRC
  { 1128,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList13, nullptr, OperandInfo179, -1 ,nullptr },  // Inst #1128 = SELECT_QSRC
  { 1129,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo180, -1 ,nullptr },  // Inst #1129 = SELECT_VRRC
  { 1130,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo174, -1 ,nullptr },  // Inst #1130 = SELECT_VSFRC
  { 1131,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo181, -1 ,nullptr },  // Inst #1131 = SELECT_VSRC
  { 1132,	4,	1,	4,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x2ULL, nullptr, nullptr, OperandInfo173, -1 ,nullptr },  // Inst #1132 = SELECT_VSSRC
  { 1133,	0,	0,	4,	70,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1133 = SLBIA
  { 1134,	1,	0,	4,	71,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #1134 = SLBIE
  { 1135,	2,	0,	4,	72,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1135 = SLBIEG
  { 1136,	2,	1,	4,	73,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1136 = SLBMFEE
  { 1137,	2,	0,	4,	74,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1137 = SLBMTE
  { 1138,	0,	0,	4,	75,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1138 = SLBSYNC
  { 1139,	3,	1,	4,	67,	0, 0x8ULL, nullptr, nullptr, OperandInfo182, -1 ,nullptr },  // Inst #1139 = SLD
  { 1140,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #1140 = SLDI
  { 1141,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #1141 = SLDIo
  { 1142,	3,	1,	4,	67,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo182, -1 ,nullptr },  // Inst #1142 = SLDo
  { 1143,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1143 = SLW
  { 1144,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #1144 = SLW8
  { 1145,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #1145 = SLW8o
  { 1146,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1146 = SLWI
  { 1147,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1147 = SLWIo
  { 1148,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #1148 = SLWo
  { 1149,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo151, -1 ,nullptr },  // Inst #1149 = SPILL_CR
  { 1150,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo152, -1 ,nullptr },  // Inst #1150 = SPILL_CRBIT
  { 1151,	3,	0,	4,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo153, -1 ,nullptr },  // Inst #1151 = SPILL_VRSAVE
  { 1152,	3,	1,	4,	67,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo182, -1 ,nullptr },  // Inst #1152 = SRAD
  { 1153,	3,	1,	4,	68,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo17, -1 ,nullptr },  // Inst #1153 = SRADI
  { 1154,	3,	1,	4,	68,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo17, -1 ,nullptr },  // Inst #1154 = SRADIo
  { 1155,	3,	1,	4,	67,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo182, -1 ,nullptr },  // Inst #1155 = SRADo
  { 1156,	3,	1,	4,	76,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo13, -1 ,nullptr },  // Inst #1156 = SRAW
  { 1157,	3,	1,	4,	76,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo14, -1 ,nullptr },  // Inst #1157 = SRAWI
  { 1158,	3,	1,	4,	76,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo14, -1 ,nullptr },  // Inst #1158 = SRAWIo
  { 1159,	3,	1,	4,	76,	0, 0x8ULL, nullptr, ImplicitList3, OperandInfo13, -1 ,nullptr },  // Inst #1159 = SRAWo
  { 1160,	3,	1,	4,	67,	0, 0x8ULL, nullptr, nullptr, OperandInfo182, -1 ,nullptr },  // Inst #1160 = SRD
  { 1161,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #1161 = SRDI
  { 1162,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #1162 = SRDIo
  { 1163,	3,	1,	4,	67,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo182, -1 ,nullptr },  // Inst #1163 = SRDo
  { 1164,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1164 = SRW
  { 1165,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #1165 = SRW8
  { 1166,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #1166 = SRW8o
  { 1167,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1167 = SRWI
  { 1168,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1168 = SRWIo
  { 1169,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #1169 = SRWo
  { 1170,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #1170 = STB
  { 1171,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #1171 = STB8
  { 1172,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1172 = STBCIX
  { 1173,	3,	0,	4,	77,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo72, -1 ,nullptr },  // Inst #1173 = STBCX
  { 1174,	4,	1,	4,	78,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo183, -1 ,nullptr },  // Inst #1174 = STBU
  { 1175,	4,	1,	4,	78,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #1175 = STBU8
  { 1176,	4,	1,	4,	78,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #1176 = STBUX
  { 1177,	4,	1,	4,	78,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo186, -1 ,nullptr },  // Inst #1177 = STBUX8
  { 1178,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #1178 = STBX
  { 1179,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #1179 = STBX8
  { 1180,	3,	0,	4,	79,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #1180 = STD
  { 1181,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #1181 = STDAT
  { 1182,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #1182 = STDBRX
  { 1183,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1183 = STDCIX
  { 1184,	3,	0,	4,	80,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo78, -1 ,nullptr },  // Inst #1184 = STDCX
  { 1185,	4,	1,	4,	81,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #1185 = STDU
  { 1186,	4,	1,	4,	82,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo186, -1 ,nullptr },  // Inst #1186 = STDUX
  { 1187,	3,	0,	4,	79,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #1187 = STDX
  { 1188,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo82, -1 ,nullptr },  // Inst #1188 = STFD
  { 1189,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo187, -1 ,nullptr },  // Inst #1189 = STFDU
  { 1190,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo188, -1 ,nullptr },  // Inst #1190 = STFDUX
  { 1191,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #1191 = STFDX
  { 1192,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo85, -1 ,nullptr },  // Inst #1192 = STFIWX
  { 1193,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo86, -1 ,nullptr },  // Inst #1193 = STFS
  { 1194,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo189, -1 ,nullptr },  // Inst #1194 = STFSU
  { 1195,	4,	1,	4,	64,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo190, -1 ,nullptr },  // Inst #1195 = STFSUX
  { 1196,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo89, -1 ,nullptr },  // Inst #1196 = STFSX
  { 1197,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #1197 = STH
  { 1198,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #1198 = STH8
  { 1199,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #1199 = STHBRX
  { 1200,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1200 = STHCIX
  { 1201,	3,	0,	4,	77,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo72, -1 ,nullptr },  // Inst #1201 = STHCX
  { 1202,	4,	1,	4,	78,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo183, -1 ,nullptr },  // Inst #1202 = STHU
  { 1203,	4,	1,	4,	78,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #1203 = STHU8
  { 1204,	4,	1,	4,	78,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #1204 = STHUX
  { 1205,	4,	1,	4,	78,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo186, -1 ,nullptr },  // Inst #1205 = STHUX8
  { 1206,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #1206 = STHX
  { 1207,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #1207 = STHX8
  { 1208,	3,	0,	4,	38,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #1208 = STMW
  { 1209,	0,	0,	4,	83,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1209 = STOP
  { 1210,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1210 = STSWI
  { 1211,	3,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #1211 = STVEBX
  { 1212,	3,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #1212 = STVEHX
  { 1213,	3,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #1213 = STVEWX
  { 1214,	3,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #1214 = STVX
  { 1215,	3,	0,	4,	49,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo92, -1 ,nullptr },  // Inst #1215 = STVXL
  { 1216,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo56, -1 ,nullptr },  // Inst #1216 = STW
  { 1217,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo73, -1 ,nullptr },  // Inst #1217 = STW8
  { 1218,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1218 = STWAT
  { 1219,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #1219 = STWBRX
  { 1220,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1220 = STWCIX
  { 1221,	3,	0,	4,	77,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, ImplicitList1, OperandInfo72, -1 ,nullptr },  // Inst #1221 = STWCX
  { 1222,	4,	1,	4,	78,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo183, -1 ,nullptr },  // Inst #1222 = STWU
  { 1223,	4,	1,	4,	78,	0|(1ULL<<MCID::MayStore), 0x10ULL, nullptr, nullptr, OperandInfo184, -1 ,nullptr },  // Inst #1223 = STWU8
  { 1224,	4,	1,	4,	78,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo185, -1 ,nullptr },  // Inst #1224 = STWUX
  { 1225,	4,	1,	4,	78,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo186, -1 ,nullptr },  // Inst #1225 = STWUX8
  { 1226,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo72, -1 ,nullptr },  // Inst #1226 = STWX
  { 1227,	3,	0,	4,	49,	0|(1ULL<<MCID::MayStore), 0x14ULL, nullptr, nullptr, OperandInfo78, -1 ,nullptr },  // Inst #1227 = STWX8
  { 1228,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #1228 = STXSD
  { 1229,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #1229 = STXSDX
  { 1230,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #1230 = STXSIBX
  { 1231,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #1231 = STXSIHX
  { 1232,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo94, -1 ,nullptr },  // Inst #1232 = STXSIWX
  { 1233,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo93, -1 ,nullptr },  // Inst #1233 = STXSSP
  { 1234,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, nullptr, OperandInfo95, -1 ,nullptr },  // Inst #1234 = STXSSPX
  { 1235,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo96, -1 ,nullptr },  // Inst #1235 = STXV
  { 1236,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #1236 = STXVB16X
  { 1237,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #1237 = STXVD2X
  { 1238,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #1238 = STXVH8X
  { 1239,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #1239 = STXVL
  { 1240,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #1240 = STXVLL
  { 1241,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore), 0x0ULL, ImplicitList13, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #1241 = STXVW4X
  { 1242,	3,	0,	4,	63,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo97, -1 ,nullptr },  // Inst #1242 = STXVX
  { 1243,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1243 = SUBF
  { 1244,	3,	1,	4,	2,	0, 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #1244 = SUBF8
  { 1245,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #1245 = SUBF8o
  { 1246,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo13, -1 ,nullptr },  // Inst #1246 = SUBFC
  { 1247,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList2, OperandInfo15, -1 ,nullptr },  // Inst #1247 = SUBFC8
  { 1248,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList3, OperandInfo15, -1 ,nullptr },  // Inst #1248 = SUBFC8o
  { 1249,	3,	1,	4,	2,	0, 0xcULL, nullptr, ImplicitList3, OperandInfo13, -1 ,nullptr },  // Inst #1249 = SUBFCo
  { 1250,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo13, -1 ,nullptr },  // Inst #1250 = SUBFE
  { 1251,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo15, -1 ,nullptr },  // Inst #1251 = SUBFE8
  { 1252,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo15, -1 ,nullptr },  // Inst #1252 = SUBFE8o
  { 1253,	3,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo13, -1 ,nullptr },  // Inst #1253 = SUBFEo
  { 1254,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo14, -1 ,nullptr },  // Inst #1254 = SUBFIC
  { 1255,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList2, OperandInfo17, -1 ,nullptr },  // Inst #1255 = SUBFIC8
  { 1256,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #1256 = SUBFME
  { 1257,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo22, -1 ,nullptr },  // Inst #1257 = SUBFME8
  { 1258,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo22, -1 ,nullptr },  // Inst #1258 = SUBFME8o
  { 1259,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #1259 = SUBFMEo
  { 1260,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo21, -1 ,nullptr },  // Inst #1260 = SUBFZE
  { 1261,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList2, OperandInfo22, -1 ,nullptr },  // Inst #1261 = SUBFZE8
  { 1262,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo22, -1 ,nullptr },  // Inst #1262 = SUBFZE8o
  { 1263,	2,	1,	4,	2,	0, 0x8ULL, ImplicitList2, ImplicitList3, OperandInfo21, -1 ,nullptr },  // Inst #1263 = SUBFZEo
  { 1264,	3,	1,	4,	2,	0, 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #1264 = SUBFo
  { 1265,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1265 = SUBI
  { 1266,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1266 = SUBIC
  { 1267,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1267 = SUBICo
  { 1268,	3,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1268 = SUBIS
  { 1269,	1,	0,	4,	52,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1269 = SYNC
  { 1270,	2,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo191, -1 ,nullptr },  // Inst #1270 = TABORT
  { 1271,	4,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1271 = TABORTDC
  { 1272,	4,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1272 = TABORTDCI
  { 1273,	4,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo192, -1 ,nullptr },  // Inst #1273 = TABORTWC
  { 1274,	4,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo193, -1 ,nullptr },  // Inst #1274 = TABORTWCI
  { 1275,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1275 = TAILB
  { 1276,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1276 = TAILB8
  { 1277,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1277 = TAILBA
  { 1278,	1,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList13, nullptr, OperandInfo2, -1 ,nullptr },  // Inst #1278 = TAILBA8
  { 1279,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, nullptr, nullptr, -1 ,nullptr },  // Inst #1279 = TAILBCTR
  { 1280,	0,	0,	4,	3,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList11, nullptr, nullptr, -1 ,nullptr },  // Inst #1280 = TAILBCTR8
  { 1281,	2,	1,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1281 = TBEGIN
  { 1282,	1,	0,	4,	53,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #1282 = TCHECK
  { 1283,	1,	1,	4,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #1283 = TCHECK_RET
  { 1284,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1284 = TCRETURNai
  { 1285,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1285 = TCRETURNai8
  { 1286,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1286 = TCRETURNdi
  { 1287,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo195, -1 ,nullptr },  // Inst #1287 = TCRETURNdi8
  { 1288,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo196, -1 ,nullptr },  // Inst #1288 = TCRETURNri
  { 1289,	2,	0,	4,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator), 0x0ULL, ImplicitList13, nullptr, OperandInfo197, -1 ,nullptr },  // Inst #1289 = TCRETURNri8
  { 1290,	3,	0,	4,	84,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo198, -1 ,nullptr },  // Inst #1290 = TD
  { 1291,	3,	0,	4,	84,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo199, -1 ,nullptr },  // Inst #1291 = TDI
  { 1292,	2,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1292 = TEND
  { 1293,	0,	0,	4,	85,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1293 = TLBIA
  { 1294,	2,	0,	4,	86,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1294 = TLBIE
  { 1295,	1,	0,	4,	87,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #1295 = TLBIEL
  { 1296,	2,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1296 = TLBIVAX
  { 1297,	1,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #1297 = TLBLD
  { 1298,	1,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #1298 = TLBLI
  { 1299,	0,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1299 = TLBRE
  { 1300,	3,	1,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1300 = TLBRE2
  { 1301,	2,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1301 = TLBSX
  { 1302,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1302 = TLBSX2
  { 1303,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1303 = TLBSX2D
  { 1304,	0,	0,	4,	88,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1304 = TLBSYNC
  { 1305,	0,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1305 = TLBWE
  { 1306,	3,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo200, -1 ,nullptr },  // Inst #1306 = TLBWE2
  { 1307,	0,	0,	4,	11,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, nullptr, -1 ,nullptr },  // Inst #1307 = TRAP
  { 1308,	1,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo99, -1 ,nullptr },  // Inst #1308 = TRECHKPT
  { 1309,	2,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo201, -1 ,nullptr },  // Inst #1309 = TRECLAIM
  { 1310,	2,	1,	4,	53,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo194, -1 ,nullptr },  // Inst #1310 = TSR
  { 1311,	3,	0,	4,	89,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo50, -1 ,nullptr },  // Inst #1311 = TW
  { 1312,	3,	0,	4,	89,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo202, -1 ,nullptr },  // Inst #1312 = TWI
  { 1313,	2,	1,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo21, -1 ,nullptr },  // Inst #1313 = UPDATE_VRSAVE
  { 1314,	3,	2,	4,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1314 = UpdateGBR
  { 1315,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1315 = VADDCUQ
  { 1316,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1316 = VADDCUW
  { 1317,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1317 = VADDECUQ
  { 1318,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1318 = VADDEUQM
  { 1319,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1319 = VADDFP
  { 1320,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1320 = VADDSBS
  { 1321,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1321 = VADDSHS
  { 1322,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1322 = VADDSWS
  { 1323,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1323 = VADDUBM
  { 1324,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1324 = VADDUBS
  { 1325,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1325 = VADDUDM
  { 1326,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1326 = VADDUHM
  { 1327,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1327 = VADDUHS
  { 1328,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1328 = VADDUQM
  { 1329,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1329 = VADDUWM
  { 1330,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1330 = VADDUWS
  { 1331,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1331 = VAND
  { 1332,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1332 = VANDC
  { 1333,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1333 = VAVGSB
  { 1334,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1334 = VAVGSH
  { 1335,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1335 = VAVGSW
  { 1336,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1336 = VAVGUB
  { 1337,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1337 = VAVGUH
  { 1338,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1338 = VAVGUW
  { 1339,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1339 = VBPERMD
  { 1340,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1340 = VBPERMQ
  { 1341,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1341 = VCFSX
  { 1342,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1342 = VCFSX_0
  { 1343,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1343 = VCFUX
  { 1344,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1344 = VCFUX_0
  { 1345,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1345 = VCIPHER
  { 1346,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1346 = VCIPHERLAST
  { 1347,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1347 = VCLZB
  { 1348,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1348 = VCLZD
  { 1349,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1349 = VCLZH
  { 1350,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1350 = VCLZLSBB
  { 1351,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1351 = VCLZW
  { 1352,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1352 = VCMPBFP
  { 1353,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1353 = VCMPBFPo
  { 1354,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1354 = VCMPEQFP
  { 1355,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1355 = VCMPEQFPo
  { 1356,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1356 = VCMPEQUB
  { 1357,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1357 = VCMPEQUBo
  { 1358,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1358 = VCMPEQUD
  { 1359,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1359 = VCMPEQUDo
  { 1360,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1360 = VCMPEQUH
  { 1361,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1361 = VCMPEQUHo
  { 1362,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1362 = VCMPEQUW
  { 1363,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1363 = VCMPEQUWo
  { 1364,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1364 = VCMPGEFP
  { 1365,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1365 = VCMPGEFPo
  { 1366,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1366 = VCMPGTFP
  { 1367,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1367 = VCMPGTFPo
  { 1368,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1368 = VCMPGTSB
  { 1369,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1369 = VCMPGTSBo
  { 1370,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1370 = VCMPGTSD
  { 1371,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1371 = VCMPGTSDo
  { 1372,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1372 = VCMPGTSH
  { 1373,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1373 = VCMPGTSHo
  { 1374,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1374 = VCMPGTSW
  { 1375,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1375 = VCMPGTSWo
  { 1376,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1376 = VCMPGTUB
  { 1377,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1377 = VCMPGTUBo
  { 1378,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1378 = VCMPGTUD
  { 1379,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1379 = VCMPGTUDo
  { 1380,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1380 = VCMPGTUH
  { 1381,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1381 = VCMPGTUHo
  { 1382,	3,	1,	4,	90,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1382 = VCMPGTUW
  { 1383,	3,	1,	4,	90,	0, 0x28ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1383 = VCMPGTUWo
  { 1384,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1384 = VCMPNEB
  { 1385,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1385 = VCMPNEBo
  { 1386,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1386 = VCMPNEH
  { 1387,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1387 = VCMPNEHo
  { 1388,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1388 = VCMPNEW
  { 1389,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1389 = VCMPNEWo
  { 1390,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1390 = VCMPNEZB
  { 1391,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1391 = VCMPNEZBo
  { 1392,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1392 = VCMPNEZH
  { 1393,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1393 = VCMPNEZHo
  { 1394,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1394 = VCMPNEZW
  { 1395,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo34, -1 ,nullptr },  // Inst #1395 = VCMPNEZWo
  { 1396,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1396 = VCTSXS
  { 1397,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1397 = VCTSXS_0
  { 1398,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1398 = VCTUXS
  { 1399,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1399 = VCTUXS_0
  { 1400,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1400 = VCTZB
  { 1401,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1401 = VCTZD
  { 1402,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1402 = VCTZH
  { 1403,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo205, -1 ,nullptr },  // Inst #1403 = VCTZLSBB
  { 1404,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1404 = VCTZW
  { 1405,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1405 = VEQV
  { 1406,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1406 = VEXPTEFP
  { 1407,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1407 = VEXTRACTD
  { 1408,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1408 = VEXTRACTUB
  { 1409,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1409 = VEXTRACTUH
  { 1410,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1410 = VEXTRACTUW
  { 1411,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1411 = VEXTSB2D
  { 1412,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1412 = VEXTSB2W
  { 1413,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1413 = VEXTSH2D
  { 1414,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1414 = VEXTSH2W
  { 1415,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1415 = VEXTSW2D
  { 1416,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1416 = VEXTUBLX
  { 1417,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1417 = VEXTUBRX
  { 1418,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1418 = VEXTUHLX
  { 1419,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1419 = VEXTUHRX
  { 1420,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1420 = VEXTUWLX
  { 1421,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo206, -1 ,nullptr },  // Inst #1421 = VEXTUWRX
  { 1422,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1422 = VGBBD
  { 1423,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1423 = VINSERTB
  { 1424,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1424 = VINSERTD
  { 1425,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1425 = VINSERTH
  { 1426,	3,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1426 = VINSERTW
  { 1427,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1427 = VLOGEFP
  { 1428,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1428 = VMADDFP
  { 1429,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1429 = VMAXFP
  { 1430,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1430 = VMAXSB
  { 1431,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1431 = VMAXSD
  { 1432,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1432 = VMAXSH
  { 1433,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1433 = VMAXSW
  { 1434,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1434 = VMAXUB
  { 1435,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1435 = VMAXUD
  { 1436,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1436 = VMAXUH
  { 1437,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1437 = VMAXUW
  { 1438,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1438 = VMHADDSHS
  { 1439,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1439 = VMHRADDSHS
  { 1440,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1440 = VMINFP
  { 1441,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1441 = VMINSB
  { 1442,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1442 = VMINSD
  { 1443,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1443 = VMINSH
  { 1444,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1444 = VMINSW
  { 1445,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1445 = VMINUB
  { 1446,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1446 = VMINUD
  { 1447,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1447 = VMINUH
  { 1448,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1448 = VMINUW
  { 1449,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1449 = VMLADDUHM
  { 1450,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1450 = VMRGEW
  { 1451,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1451 = VMRGHB
  { 1452,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1452 = VMRGHH
  { 1453,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1453 = VMRGHW
  { 1454,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1454 = VMRGLB
  { 1455,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1455 = VMRGLH
  { 1456,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1456 = VMRGLW
  { 1457,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1457 = VMRGOW
  { 1458,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1458 = VMSUMMBM
  { 1459,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1459 = VMSUMSHM
  { 1460,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1460 = VMSUMSHS
  { 1461,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1461 = VMSUMUBM
  { 1462,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1462 = VMSUMUHM
  { 1463,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1463 = VMSUMUHS
  { 1464,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1464 = VMUL10CUQ
  { 1465,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1465 = VMUL10ECUQ
  { 1466,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1466 = VMUL10EUQ
  { 1467,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1467 = VMUL10UQ
  { 1468,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1468 = VMULESB
  { 1469,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1469 = VMULESH
  { 1470,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1470 = VMULESW
  { 1471,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1471 = VMULEUB
  { 1472,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1472 = VMULEUH
  { 1473,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1473 = VMULEUW
  { 1474,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1474 = VMULOSB
  { 1475,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1475 = VMULOSH
  { 1476,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1476 = VMULOSW
  { 1477,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1477 = VMULOUB
  { 1478,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1478 = VMULOUH
  { 1479,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1479 = VMULOUW
  { 1480,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1480 = VMULUWM
  { 1481,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1481 = VNAND
  { 1482,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1482 = VNCIPHER
  { 1483,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1483 = VNCIPHERLAST
  { 1484,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1484 = VNEGD
  { 1485,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1485 = VNEGW
  { 1486,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1486 = VNMSUBFP
  { 1487,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1487 = VNOR
  { 1488,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1488 = VOR
  { 1489,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1489 = VORC
  { 1490,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1490 = VPERM
  { 1491,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1491 = VPERMR
  { 1492,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1492 = VPERMXOR
  { 1493,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1493 = VPKPX
  { 1494,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1494 = VPKSDSS
  { 1495,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1495 = VPKSDUS
  { 1496,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1496 = VPKSHSS
  { 1497,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1497 = VPKSHUS
  { 1498,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1498 = VPKSWSS
  { 1499,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1499 = VPKSWUS
  { 1500,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1500 = VPKUDUM
  { 1501,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1501 = VPKUDUS
  { 1502,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1502 = VPKUHUM
  { 1503,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1503 = VPKUHUS
  { 1504,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1504 = VPKUWUM
  { 1505,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1505 = VPKUWUS
  { 1506,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1506 = VPMSUMB
  { 1507,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1507 = VPMSUMD
  { 1508,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1508 = VPMSUMH
  { 1509,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1509 = VPMSUMW
  { 1510,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1510 = VPOPCNTB
  { 1511,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1511 = VPOPCNTD
  { 1512,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1512 = VPOPCNTH
  { 1513,	2,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1513 = VPOPCNTW
  { 1514,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1514 = VPRTYBD
  { 1515,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1515 = VPRTYBQ
  { 1516,	2,	1,	4,	50,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1516 = VPRTYBW
  { 1517,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1517 = VREFP
  { 1518,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1518 = VRFIM
  { 1519,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1519 = VRFIN
  { 1520,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1520 = VRFIP
  { 1521,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1521 = VRFIZ
  { 1522,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1522 = VRLB
  { 1523,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1523 = VRLD
  { 1524,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1524 = VRLDMI
  { 1525,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1525 = VRLDNM
  { 1526,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1526 = VRLH
  { 1527,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1527 = VRLW
  { 1528,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1528 = VRLWMI
  { 1529,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1529 = VRLWNM
  { 1530,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1530 = VRSQRTEFP
  { 1531,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1531 = VSBOX
  { 1532,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1532 = VSEL
  { 1533,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1533 = VSHASIGMAD
  { 1534,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo207, -1 ,nullptr },  // Inst #1534 = VSHASIGMAW
  { 1535,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1535 = VSL
  { 1536,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1536 = VSLB
  { 1537,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1537 = VSLD
  { 1538,	4,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo36, -1 ,nullptr },  // Inst #1538 = VSLDOI
  { 1539,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1539 = VSLH
  { 1540,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1540 = VSLO
  { 1541,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1541 = VSLV
  { 1542,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1542 = VSLW
  { 1543,	3,	1,	4,	62,	0, 0x28ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1543 = VSPLTB
  { 1544,	3,	1,	4,	62,	0, 0x28ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1544 = VSPLTH
  { 1545,	2,	1,	4,	62,	0, 0x28ULL, nullptr, nullptr, OperandInfo208, -1 ,nullptr },  // Inst #1545 = VSPLTISB
  { 1546,	2,	1,	4,	62,	0, 0x28ULL, nullptr, nullptr, OperandInfo208, -1 ,nullptr },  // Inst #1546 = VSPLTISH
  { 1547,	2,	1,	4,	62,	0, 0x28ULL, nullptr, nullptr, OperandInfo208, -1 ,nullptr },  // Inst #1547 = VSPLTISW
  { 1548,	3,	1,	4,	62,	0, 0x28ULL, nullptr, nullptr, OperandInfo204, -1 ,nullptr },  // Inst #1548 = VSPLTW
  { 1549,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1549 = VSR
  { 1550,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1550 = VSRAB
  { 1551,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1551 = VSRAD
  { 1552,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1552 = VSRAH
  { 1553,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1553 = VSRAW
  { 1554,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1554 = VSRB
  { 1555,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1555 = VSRD
  { 1556,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1556 = VSRH
  { 1557,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1557 = VSRO
  { 1558,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1558 = VSRV
  { 1559,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1559 = VSRW
  { 1560,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1560 = VSUBCUQ
  { 1561,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1561 = VSUBCUW
  { 1562,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1562 = VSUBECUQ
  { 1563,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo203, -1 ,nullptr },  // Inst #1563 = VSUBEUQM
  { 1564,	3,	1,	4,	50,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1564 = VSUBFP
  { 1565,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1565 = VSUBSBS
  { 1566,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1566 = VSUBSHS
  { 1567,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1567 = VSUBSWS
  { 1568,	3,	1,	4,	50,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1568 = VSUBUBM
  { 1569,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1569 = VSUBUBS
  { 1570,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1570 = VSUBUDM
  { 1571,	3,	1,	4,	50,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1571 = VSUBUHM
  { 1572,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1572 = VSUBUHS
  { 1573,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1573 = VSUBUQM
  { 1574,	3,	1,	4,	50,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1574 = VSUBUWM
  { 1575,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1575 = VSUBUWS
  { 1576,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1576 = VSUM2SWS
  { 1577,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1577 = VSUM4SBS
  { 1578,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1578 = VSUM4SHS
  { 1579,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1579 = VSUM4UBS
  { 1580,	3,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1580 = VSUMSWS
  { 1581,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1581 = VUPKHPX
  { 1582,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1582 = VUPKHSB
  { 1583,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1583 = VUPKHSH
  { 1584,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1584 = VUPKHSW
  { 1585,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1585 = VUPKLPX
  { 1586,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1586 = VUPKLSB
  { 1587,	2,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1587 = VUPKLSH
  { 1588,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1588 = VUPKLSW
  { 1589,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x28ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1589 = VXOR
  { 1590,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #1590 = V_SET0
  { 1591,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #1591 = V_SET0B
  { 1592,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #1592 = V_SET0H
  { 1593,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #1593 = V_SETALLONES
  { 1594,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #1594 = V_SETALLONESB
  { 1595,	1,	1,	4,	4,	0, 0x28ULL, nullptr, nullptr, OperandInfo106, -1 ,nullptr },  // Inst #1595 = V_SETALLONESH
  { 1596,	1,	0,	4,	11,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1596 = WAIT
  { 1597,	1,	0,	4,	55,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo101, -1 ,nullptr },  // Inst #1597 = WRTEE
  { 1598,	1,	0,	4,	55,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo3, -1 ,nullptr },  // Inst #1598 = WRTEEI
  { 1599,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo13, -1 ,nullptr },  // Inst #1599 = XOR
  { 1600,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, nullptr, OperandInfo15, -1 ,nullptr },  // Inst #1600 = XOR8
  { 1601,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo15, -1 ,nullptr },  // Inst #1601 = XOR8o
  { 1602,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1602 = XORI
  { 1603,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #1603 = XORI8
  { 1604,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo14, -1 ,nullptr },  // Inst #1604 = XORIS
  { 1605,	3,	1,	4,	1,	0, 0x8ULL, nullptr, nullptr, OperandInfo17, -1 ,nullptr },  // Inst #1605 = XORIS8
  { 1606,	3,	1,	4,	1,	0|(1ULL<<MCID::Commutable), 0x8ULL, nullptr, ImplicitList1, OperandInfo13, -1 ,nullptr },  // Inst #1606 = XORo
  { 1607,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1607 = XSABSDP
  { 1608,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1608 = XSABSQP
  { 1609,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1609 = XSADDDP
  { 1610,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1610 = XSADDQP
  { 1611,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1611 = XSADDQPO
  { 1612,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #1612 = XSADDSP
  { 1613,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1613 = XSCMPEQDP
  { 1614,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1614 = XSCMPEXPDP
  { 1615,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1615 = XSCMPEXPQP
  { 1616,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1616 = XSCMPGEDP
  { 1617,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1617 = XSCMPGTDP
  { 1618,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1618 = XSCMPNEDP
  { 1619,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1619 = XSCMPODP
  { 1620,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1620 = XSCMPOQP
  { 1621,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1621 = XSCMPUDP
  { 1622,	3,	1,	4,	16,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo214, -1 ,nullptr },  // Inst #1622 = XSCMPUQP
  { 1623,	3,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1623 = XSCPSGNDP
  { 1624,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1624 = XSCPSGNQP
  { 1625,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1625 = XSCVDPHP
  { 1626,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1626 = XSCVDPQP
  { 1627,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1627 = XSCVDPSP
  { 1628,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo216, -1 ,nullptr },  // Inst #1628 = XSCVDPSPN
  { 1629,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1629 = XSCVDPSXDS
  { 1630,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1630 = XSCVDPSXWS
  { 1631,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1631 = XSCVDPUXDS
  { 1632,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1632 = XSCVDPUXWS
  { 1633,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1633 = XSCVHPDP
  { 1634,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1634 = XSCVQPDP
  { 1635,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1635 = XSCVQPDPO
  { 1636,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1636 = XSCVQPSDZ
  { 1637,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1637 = XSCVQPSWZ
  { 1638,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1638 = XSCVQPUDZ
  { 1639,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1639 = XSCVQPUWZ
  { 1640,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1640 = XSCVSDQP
  { 1641,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1641 = XSCVSPDP
  { 1642,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo217, -1 ,nullptr },  // Inst #1642 = XSCVSPDPN
  { 1643,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1643 = XSCVSXDDP
  { 1644,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo218, -1 ,nullptr },  // Inst #1644 = XSCVSXDSP
  { 1645,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo215, -1 ,nullptr },  // Inst #1645 = XSCVUDQP
  { 1646,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1646 = XSCVUXDDP
  { 1647,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo218, -1 ,nullptr },  // Inst #1647 = XSCVUXDSP
  { 1648,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1648 = XSDIVDP
  { 1649,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1649 = XSDIVQP
  { 1650,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1650 = XSDIVQPO
  { 1651,	3,	1,	4,	18,	0, 0x0ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #1651 = XSDIVSP
  { 1652,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo119, -1 ,nullptr },  // Inst #1652 = XSIEXPDP
  { 1653,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo219, -1 ,nullptr },  // Inst #1653 = XSIEXPQP
  { 1654,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1654 = XSMADDADP
  { 1655,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1655 = XSMADDASP
  { 1656,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1656 = XSMADDMDP
  { 1657,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1657 = XSMADDMSP
  { 1658,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1658 = XSMADDQP
  { 1659,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1659 = XSMADDQPO
  { 1660,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1660 = XSMAXCDP
  { 1661,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1661 = XSMAXDP
  { 1662,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1662 = XSMAXJDP
  { 1663,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1663 = XSMINCDP
  { 1664,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1664 = XSMINDP
  { 1665,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo212, -1 ,nullptr },  // Inst #1665 = XSMINJDP
  { 1666,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1666 = XSMSUBADP
  { 1667,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1667 = XSMSUBASP
  { 1668,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1668 = XSMSUBMDP
  { 1669,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1669 = XSMSUBMSP
  { 1670,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1670 = XSMSUBQP
  { 1671,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1671 = XSMSUBQPO
  { 1672,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1672 = XSMULDP
  { 1673,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1673 = XSMULQP
  { 1674,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1674 = XSMULQPO
  { 1675,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #1675 = XSMULSP
  { 1676,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1676 = XSNABSDP
  { 1677,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1677 = XSNABSQP
  { 1678,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1678 = XSNEGDP
  { 1679,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1679 = XSNEGQP
  { 1680,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1680 = XSNMADDADP
  { 1681,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1681 = XSNMADDASP
  { 1682,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1682 = XSNMADDMDP
  { 1683,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1683 = XSNMADDMSP
  { 1684,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1684 = XSNMADDQP
  { 1685,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1685 = XSNMADDQPO
  { 1686,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1686 = XSNMSUBADP
  { 1687,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1687 = XSNMSUBASP
  { 1688,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo220, -1 ,nullptr },  // Inst #1688 = XSNMSUBMDP
  { 1689,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo221, -1 ,nullptr },  // Inst #1689 = XSNMSUBMSP
  { 1690,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1690 = XSNMSUBQP
  { 1691,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1691 = XSNMSUBQPO
  { 1692,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1692 = XSRDPI
  { 1693,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1693 = XSRDPIC
  { 1694,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1694 = XSRDPIM
  { 1695,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1695 = XSRDPIP
  { 1696,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1696 = XSRDPIZ
  { 1697,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1697 = XSREDP
  { 1698,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1698 = XSRESP
  { 1699,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1699 = XSRQPI
  { 1700,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1700 = XSRQPIX
  { 1701,	4,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo223, -1 ,nullptr },  // Inst #1701 = XSRQPXP
  { 1702,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1702 = XSRSQRTEDP
  { 1703,	2,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1703 = XSRSQRTESP
  { 1704,	2,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo209, -1 ,nullptr },  // Inst #1704 = XSSQRTDP
  { 1705,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1705 = XSSQRTQP
  { 1706,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1706 = XSSQRTQPO
  { 1707,	2,	1,	4,	21,	0, 0x0ULL, nullptr, nullptr, OperandInfo222, -1 ,nullptr },  // Inst #1707 = XSSQRTSP
  { 1708,	3,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1708 = XSSUBDP
  { 1709,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1709 = XSSUBQP
  { 1710,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo34, -1 ,nullptr },  // Inst #1710 = XSSUBQPO
  { 1711,	3,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo211, -1 ,nullptr },  // Inst #1711 = XSSUBSP
  { 1712,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo213, -1 ,nullptr },  // Inst #1712 = XSTDIVDP
  { 1713,	2,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo224, -1 ,nullptr },  // Inst #1713 = XSTSQRTDP
  { 1714,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1714 = XSTSTDCDP
  { 1715,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo226, -1 ,nullptr },  // Inst #1715 = XSTSTDCQP
  { 1716,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo225, -1 ,nullptr },  // Inst #1716 = XSTSTDCSP
  { 1717,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #1717 = XSXEXPDP
  { 1718,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1718 = XSXEXPQP
  { 1719,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo107, -1 ,nullptr },  // Inst #1719 = XSXSIGDP
  { 1720,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo35, -1 ,nullptr },  // Inst #1720 = XSXSIGQP
  { 1721,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1721 = XVABSDP
  { 1722,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1722 = XVABSSP
  { 1723,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1723 = XVADDDP
  { 1724,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1724 = XVADDSP
  { 1725,	3,	1,	4,	90,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1725 = XVCMPEQDP
  { 1726,	3,	1,	4,	90,	0, 0x0ULL, ImplicitList13, ImplicitList15, OperandInfo228, -1 ,nullptr },  // Inst #1726 = XVCMPEQDPo
  { 1727,	3,	1,	4,	90,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1727 = XVCMPEQSP
  { 1728,	3,	1,	4,	90,	0, 0x0ULL, ImplicitList13, ImplicitList15, OperandInfo228, -1 ,nullptr },  // Inst #1728 = XVCMPEQSPo
  { 1729,	3,	1,	4,	90,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1729 = XVCMPGEDP
  { 1730,	3,	1,	4,	90,	0, 0x0ULL, ImplicitList13, ImplicitList15, OperandInfo228, -1 ,nullptr },  // Inst #1730 = XVCMPGEDPo
  { 1731,	3,	1,	4,	90,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1731 = XVCMPGESP
  { 1732,	3,	1,	4,	90,	0, 0x0ULL, ImplicitList13, ImplicitList15, OperandInfo228, -1 ,nullptr },  // Inst #1732 = XVCMPGESPo
  { 1733,	3,	1,	4,	90,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1733 = XVCMPGTDP
  { 1734,	3,	1,	4,	90,	0, 0x0ULL, ImplicitList13, ImplicitList15, OperandInfo228, -1 ,nullptr },  // Inst #1734 = XVCMPGTDPo
  { 1735,	3,	1,	4,	90,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1735 = XVCMPGTSP
  { 1736,	3,	1,	4,	90,	0, 0x0ULL, ImplicitList13, ImplicitList15, OperandInfo228, -1 ,nullptr },  // Inst #1736 = XVCMPGTSPo
  { 1737,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1737 = XVCMPNEDP
  { 1738,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo228, -1 ,nullptr },  // Inst #1738 = XVCMPNEDPo
  { 1739,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1739 = XVCMPNESP
  { 1740,	3,	1,	4,	90,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, ImplicitList15, OperandInfo228, -1 ,nullptr },  // Inst #1740 = XVCMPNESPo
  { 1741,	3,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1741 = XVCPSGNDP
  { 1742,	3,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1742 = XVCPSGNSP
  { 1743,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1743 = XVCVDPSP
  { 1744,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1744 = XVCVDPSXDS
  { 1745,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1745 = XVCVDPSXWS
  { 1746,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1746 = XVCVDPUXDS
  { 1747,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1747 = XVCVDPUXWS
  { 1748,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1748 = XVCVHPSP
  { 1749,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1749 = XVCVSPDP
  { 1750,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1750 = XVCVSPHP
  { 1751,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1751 = XVCVSPSXDS
  { 1752,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1752 = XVCVSPSXWS
  { 1753,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1753 = XVCVSPUXDS
  { 1754,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1754 = XVCVSPUXWS
  { 1755,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1755 = XVCVSXDDP
  { 1756,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1756 = XVCVSXDSP
  { 1757,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1757 = XVCVSXWDP
  { 1758,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1758 = XVCVSXWSP
  { 1759,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1759 = XVCVUXDDP
  { 1760,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1760 = XVCVUXDSP
  { 1761,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1761 = XVCVUXWDP
  { 1762,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1762 = XVCVUXWSP
  { 1763,	3,	1,	4,	17,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1763 = XVDIVDP
  { 1764,	3,	1,	4,	18,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1764 = XVDIVSP
  { 1765,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1765 = XVIEXPDP
  { 1766,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1766 = XVIEXPSP
  { 1767,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1767 = XVMADDADP
  { 1768,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1768 = XVMADDASP
  { 1769,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1769 = XVMADDMDP
  { 1770,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1770 = XVMADDMSP
  { 1771,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1771 = XVMAXDP
  { 1772,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1772 = XVMAXSP
  { 1773,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1773 = XVMINDP
  { 1774,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1774 = XVMINSP
  { 1775,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1775 = XVMSUBADP
  { 1776,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1776 = XVMSUBASP
  { 1777,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1777 = XVMSUBMDP
  { 1778,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1778 = XVMSUBMSP
  { 1779,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1779 = XVMULDP
  { 1780,	3,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1780 = XVMULSP
  { 1781,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1781 = XVNABSDP
  { 1782,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1782 = XVNABSSP
  { 1783,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1783 = XVNEGDP
  { 1784,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1784 = XVNEGSP
  { 1785,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1785 = XVNMADDADP
  { 1786,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1786 = XVNMADDASP
  { 1787,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1787 = XVNMADDMDP
  { 1788,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1788 = XVNMADDMSP
  { 1789,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1789 = XVNMSUBADP
  { 1790,	4,	1,	4,	4,	0|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1790 = XVNMSUBASP
  { 1791,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1791 = XVNMSUBMDP
  { 1792,	4,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo229, -1 ,nullptr },  // Inst #1792 = XVNMSUBMSP
  { 1793,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1793 = XVRDPI
  { 1794,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1794 = XVRDPIC
  { 1795,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1795 = XVRDPIM
  { 1796,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1796 = XVRDPIP
  { 1797,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1797 = XVRDPIZ
  { 1798,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1798 = XVREDP
  { 1799,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1799 = XVRESP
  { 1800,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1800 = XVRSPI
  { 1801,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1801 = XVRSPIC
  { 1802,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1802 = XVRSPIM
  { 1803,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1803 = XVRSPIP
  { 1804,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1804 = XVRSPIZ
  { 1805,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1805 = XVRSQRTEDP
  { 1806,	2,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1806 = XVRSQRTESP
  { 1807,	2,	1,	4,	20,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1807 = XVSQRTDP
  { 1808,	2,	1,	4,	21,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1808 = XVSQRTSP
  { 1809,	3,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1809 = XVSUBDP
  { 1810,	3,	1,	4,	4,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1810 = XVSUBSP
  { 1811,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo230, -1 ,nullptr },  // Inst #1811 = XVTDIVDP
  { 1812,	3,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo230, -1 ,nullptr },  // Inst #1812 = XVTDIVSP
  { 1813,	2,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1813 = XVTSQRTDP
  { 1814,	2,	1,	4,	16,	0, 0x0ULL, ImplicitList13, nullptr, OperandInfo231, -1 ,nullptr },  // Inst #1814 = XVTSQRTSP
  { 1815,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1815 = XVTSTDCDP
  { 1816,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo232, -1 ,nullptr },  // Inst #1816 = XVTSTDCSP
  { 1817,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1817 = XVXEXPDP
  { 1818,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1818 = XVXEXPSP
  { 1819,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1819 = XVXSIGDP
  { 1820,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1820 = XVXSIGSP
  { 1821,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1821 = XXBRD
  { 1822,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1822 = XXBRH
  { 1823,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1823 = XXBRQ
  { 1824,	2,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo227, -1 ,nullptr },  // Inst #1824 = XXBRW
  { 1825,	3,	1,	4,	4,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo233, -1 ,nullptr },  // Inst #1825 = XXEXTRACTUW
  { 1826,	4,	1,	4,	4,	0, 0x0ULL, nullptr, nullptr, OperandInfo234, -1 ,nullptr },  // Inst #1826 = XXINSERTW
  { 1827,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1827 = XXLAND
  { 1828,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1828 = XXLANDC
  { 1829,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1829 = XXLEQV
  { 1830,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1830 = XXLNAND
  { 1831,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1831 = XXLNOR
  { 1832,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1832 = XXLOR
  { 1833,	3,	1,	4,	50,	0, 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1833 = XXLORC
  { 1834,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo210, -1 ,nullptr },  // Inst #1834 = XXLORf
  { 1835,	3,	1,	4,	50,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1835 = XXLXOR
  { 1836,	3,	1,	4,	62,	0, 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1836 = XXMRGHW
  { 1837,	3,	1,	4,	62,	0, 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1837 = XXMRGLW
  { 1838,	3,	1,	4,	62,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1838 = XXPERM
  { 1839,	4,	1,	4,	62,	0, 0x0ULL, nullptr, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1839 = XXPERMDI
  { 1840,	3,	1,	4,	62,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo228, -1 ,nullptr },  // Inst #1840 = XXPERMR
  { 1841,	4,	1,	4,	62,	0, 0x0ULL, nullptr, nullptr, OperandInfo236, -1 ,nullptr },  // Inst #1841 = XXSEL
  { 1842,	4,	1,	4,	62,	0, 0x0ULL, nullptr, nullptr, OperandInfo235, -1 ,nullptr },  // Inst #1842 = XXSLDWI
  { 1843,	2,	1,	4,	62,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr, OperandInfo237, -1 ,nullptr },  // Inst #1843 = XXSPLTIB
  { 1844,	3,	1,	4,	62,	0, 0x0ULL, nullptr, nullptr, OperandInfo238, -1 ,nullptr },  // Inst #1844 = XXSPLTW
  { 1845,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo239, -1 ,nullptr },  // Inst #1845 = gBC
  { 1846,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList7, OperandInfo239, -1 ,nullptr },  // Inst #1846 = gBCA
  { 1847,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, OperandInfo240, -1 ,nullptr },  // Inst #1847 = gBCCTR
  { 1848,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList25, OperandInfo240, -1 ,nullptr },  // Inst #1848 = gBCCTRL
  { 1849,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList25, OperandInfo239, -1 ,nullptr },  // Inst #1849 = gBCL
  { 1850,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList9, ImplicitList25, OperandInfo239, -1 ,nullptr },  // Inst #1850 = gBCLA
  { 1851,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList7, OperandInfo240, -1 ,nullptr },  // Inst #1851 = gBCLR
  { 1852,	3,	0,	4,	3,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x38ULL, ImplicitList17, ImplicitList25, OperandInfo240, -1 ,nullptr },  // Inst #1852 = gBCLRL
};

extern const char PPCInstrNameData[] = {
  /* 0 */ 'M', 'T', 'F', 'S', 'B', '0', 0,
  /* 7 */ 'V', '_', 'S', 'E', 'T', '0', 0,
  /* 14 */ 'V', 'C', 'T', 'S', 'X', 'S', '_', '0', 0,
  /* 23 */ 'V', 'C', 'T', 'U', 'X', 'S', '_', '0', 0,
  /* 32 */ 'V', 'C', 'F', 'S', 'X', '_', '0', 0,
  /* 40 */ 'V', 'C', 'F', 'U', 'X', '_', '0', 0,
  /* 48 */ 'M', 'T', 'F', 'S', 'B', '1', 0,
  /* 55 */ 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', '3', '2', 0,
  /* 71 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '3', '2', 0,
  /* 91 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '3', '2', 0,
  /* 111 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 132 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '3', '2', 0,
  /* 152 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 173 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '3', '2', 0,
  /* 193 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 209 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '3', '2', 0,
  /* 229 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 249 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '3', '2', 0,
  /* 268 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 289 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '3', '2', 0,
  /* 309 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', '3', '2', 0,
  /* 322 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', '3', '2', 0,
  /* 335 */ 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 349 */ 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', '3', '2', 0,
  /* 363 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 380 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 397 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 412 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', '3', '2', 0,
  /* 425 */ 'L', 'W', 'A', '_', '3', '2', 0,
  /* 432 */ 'L', 'W', 'A', 'X', '_', '3', '2', 0,
  /* 440 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '3', '2', 0,
  /* 458 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '3', '2', 0,
  /* 475 */ 'T', 'L', 'B', 'R', 'E', '2', 0,
  /* 482 */ 'T', 'L', 'B', 'W', 'E', '2', 0,
  /* 489 */ 'T', 'L', 'B', 'S', 'X', '2', 0,
  /* 496 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '6', '4', 0,
  /* 516 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '6', '4', 0,
  /* 536 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 557 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '6', '4', 0,
  /* 577 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 598 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '6', '4', 0,
  /* 618 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 634 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '6', '4', 0,
  /* 654 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 674 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '6', '4', 0,
  /* 693 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 714 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '6', '4', 0,
  /* 734 */ 'D', 'S', 'T', '6', '4', 0,
  /* 740 */ 'D', 'S', 'T', 'S', 'T', '6', '4', 0,
  /* 748 */ 'D', 'S', 'T', 'T', '6', '4', 0,
  /* 755 */ 'D', 'S', 'T', 'S', 'T', 'T', '6', '4', 0,
  /* 764 */ 'E', 'X', 'T', 'S', 'B', '8', '_', '3', '2', '_', '6', '4', 0,
  /* 777 */ 'E', 'X', 'T', 'S', 'H', '8', '_', '3', '2', '_', '6', '4', 0,
  /* 790 */ 'R', 'L', 'D', 'I', 'C', 'L', '_', '3', '2', '_', '6', '4', 0,
  /* 803 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', '_', '6', '4', 0,
  /* 815 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '6', '4', 0,
  /* 833 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '6', '4', 0,
  /* 850 */ 'A', 'D', 'D', '4', 0,
  /* 855 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '4', 0,
  /* 868 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '4', 0,
  /* 878 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '4', 0,
  /* 891 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '4', 0,
  /* 901 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '1', '6', 0,
  /* 921 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '1', '6', 0,
  /* 941 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 962 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '1', '6', 0,
  /* 982 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 1003 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '1', '6', 0,
  /* 1023 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1039 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '1', '6', 0,
  /* 1059 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1079 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '1', '6', 0,
  /* 1098 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 1119 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '1', '6', 0,
  /* 1139 */ 'N', 'O', 'P', '_', 'G', 'T', '_', 'P', 'W', 'R', '6', 0,
  /* 1151 */ 'N', 'O', 'P', '_', 'G', 'T', '_', 'P', 'W', 'R', '7', 0,
  /* 1163 */ 'T', 'A', 'I', 'L', 'B', 'A', '8', 0,
  /* 1171 */ 'L', 'H', 'A', '8', 0,
  /* 1176 */ 'B', 'L', 'A', '8', 0,
  /* 1181 */ 'T', 'A', 'I', 'L', 'B', '8', 0,
  /* 1188 */ 'C', 'M', 'P', 'B', '8', 0,
  /* 1194 */ 'C', 'M', 'P', 'R', 'B', '8', 0,
  /* 1201 */ 'E', 'X', 'T', 'S', 'B', '8', 0,
  /* 1208 */ 'M', 'F', 'T', 'B', '8', 0,
  /* 1214 */ 'S', 'T', 'B', '8', 0,
  /* 1219 */ 'A', 'D', 'D', 'C', '8', 0,
  /* 1225 */ 'A', 'N', 'D', 'C', '8', 0,
  /* 1231 */ 'S', 'U', 'B', 'F', 'C', '8', 0,
  /* 1238 */ 'A', 'D', 'D', 'I', 'C', '8', 0,
  /* 1245 */ 'S', 'U', 'B', 'F', 'I', 'C', '8', 0,
  /* 1253 */ 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', '8', 0,
  /* 1263 */ 'O', 'R', 'C', '8', 0,
  /* 1268 */ 'A', 'D', 'D', '8', 0,
  /* 1273 */ 'N', 'A', 'N', 'D', '8', 0,
  /* 1279 */ 'A', 'D', 'D', 'E', '8', 0,
  /* 1285 */ 'S', 'U', 'B', 'F', 'E', '8', 0,
  /* 1292 */ 'A', 'D', 'D', 'M', 'E', '8', 0,
  /* 1299 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 0,
  /* 1307 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '8', 0,
  /* 1317 */ 'A', 'D', 'D', 'Z', 'E', '8', 0,
  /* 1324 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 0,
  /* 1332 */ 'S', 'U', 'B', 'F', '8', 0,
  /* 1338 */ 'M', 'F', 'O', 'C', 'R', 'F', '8', 0,
  /* 1346 */ 'M', 'T', 'O', 'C', 'R', 'F', '8', 0,
  /* 1354 */ 'M', 'T', 'C', 'R', 'F', '8', 0,
  /* 1361 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'F', '8', 0,
  /* 1374 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'F', '8', 0,
  /* 1384 */ 'N', 'E', 'G', '8', 0,
  /* 1389 */ 'E', 'X', 'T', 'S', 'H', '8', 0,
  /* 1396 */ 'S', 'T', 'H', '8', 0,
  /* 1401 */ 'A', 'D', 'D', 'I', '8', 0,
  /* 1407 */ 'M', 'U', 'L', 'L', 'I', '8', 0,
  /* 1414 */ 'R', 'L', 'W', 'I', 'M', 'I', '8', 0,
  /* 1422 */ 'X', 'O', 'R', 'I', '8', 0,
  /* 1428 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'S', 'U', 'B', '_', 'I', '8', 0,
  /* 1447 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'I', '8', 0,
  /* 1460 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'D', 'D', '_', 'I', '8', 0,
  /* 1479 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'N', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 1499 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'A', 'N', 'D', '_', 'I', '8', 0,
  /* 1518 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 1538 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'I', 'N', '_', 'I', '8', 0,
  /* 1557 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 1572 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'C', 'M', 'P', '_', 'S', 'W', 'A', 'P', '_', 'I', '8', 0,
  /* 1591 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'X', 'O', 'R', '_', 'I', '8', 0,
  /* 1610 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'O', 'R', '_', 'I', '8', 0,
  /* 1628 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'I', '8', 0,
  /* 1638 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'U', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 1658 */ 'A', 'T', 'O', 'M', 'I', 'C', '_', 'L', 'O', 'A', 'D', '_', 'M', 'A', 'X', '_', 'I', '8', 0,
  /* 1677 */ 'B', 'L', '8', 0,
  /* 1681 */ 'I', 'S', 'E', 'L', '8', 0,
  /* 1687 */ 'B', 'C', 'T', 'R', 'L', '8', 0,
  /* 1694 */ 'B', 'C', 'C', 'T', 'R', 'L', '8', 0,
  /* 1702 */ 'B', 'C', 'C', 'C', 'T', 'R', 'L', '8', 0,
  /* 1711 */ 'R', 'L', 'W', 'I', 'N', 'M', '8', 0,
  /* 1719 */ 'R', 'L', 'W', 'N', 'M', '8', 0,
  /* 1726 */ 'M', 'F', 'C', 'R', '8', 0,
  /* 1732 */ 'B', 'L', 'R', '8', 0,
  /* 1737 */ 'M', 'F', 'L', 'R', '8', 0,
  /* 1743 */ 'M', 'T', 'L', 'R', '8', 0,
  /* 1749 */ 'B', 'D', 'Z', 'L', 'R', '8', 0,
  /* 1756 */ 'B', 'D', 'N', 'Z', 'L', 'R', '8', 0,
  /* 1764 */ 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', '8', 0,
  /* 1776 */ 'N', 'O', 'R', '8', 0,
  /* 1781 */ 'X', 'O', 'R', '8', 0,
  /* 1786 */ 'M', 'F', 'S', 'P', 'R', '8', 0,
  /* 1793 */ 'M', 'T', 'S', 'P', 'R', '8', 0,
  /* 1800 */ 'T', 'A', 'I', 'L', 'B', 'C', 'T', 'R', '8', 0,
  /* 1810 */ 'B', 'C', 'C', 'T', 'R', '8', 0,
  /* 1817 */ 'B', 'C', 'C', 'C', 'T', 'R', '8', 0,
  /* 1825 */ 'M', 'F', 'C', 'T', 'R', '8', 0,
  /* 1832 */ 'M', 'T', 'C', 'T', 'R', '8', 0,
  /* 1839 */ 'A', 'D', 'D', 'I', 'S', '8', 0,
  /* 1846 */ 'L', 'I', 'S', '8', 0,
  /* 1851 */ 'X', 'O', 'R', 'I', 'S', '8', 0,
  /* 1858 */ 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', '8', 0,
  /* 1873 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', '8', 0,
  /* 1889 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', '8', 0,
  /* 1905 */ 'L', 'H', 'A', 'U', '8', 0,
  /* 1911 */ 'S', 'T', 'B', 'U', '8', 0,
  /* 1917 */ 'S', 'T', 'H', 'U', '8', 0,
  /* 1923 */ 'S', 'T', 'W', 'U', '8', 0,
  /* 1929 */ 'L', 'B', 'Z', 'U', '8', 0,
  /* 1935 */ 'L', 'H', 'Z', 'U', '8', 0,
  /* 1941 */ 'L', 'W', 'Z', 'U', '8', 0,
  /* 1947 */ 'E', 'Q', 'V', '8', 0,
  /* 1952 */ 'S', 'L', 'W', '8', 0,
  /* 1957 */ 'S', 'R', 'W', '8', 0,
  /* 1962 */ 'S', 'T', 'W', '8', 0,
  /* 1967 */ 'C', 'N', 'T', 'L', 'Z', 'W', '8', 0,
  /* 1975 */ 'C', 'N', 'T', 'T', 'Z', 'W', '8', 0,
  /* 1983 */ 'L', 'H', 'A', 'X', '8', 0,
  /* 1989 */ 'S', 'T', 'B', 'X', '8', 0,
  /* 1995 */ 'S', 'T', 'H', 'X', '8', 0,
  /* 2001 */ 'L', 'H', 'B', 'R', 'X', '8', 0,
  /* 2008 */ 'L', 'W', 'B', 'R', 'X', '8', 0,
  /* 2015 */ 'L', 'H', 'A', 'U', 'X', '8', 0,
  /* 2022 */ 'S', 'T', 'B', 'U', 'X', '8', 0,
  /* 2029 */ 'S', 'T', 'H', 'U', 'X', '8', 0,
  /* 2036 */ 'S', 'T', 'W', 'U', 'X', '8', 0,
  /* 2043 */ 'L', 'B', 'Z', 'U', 'X', '8', 0,
  /* 2050 */ 'L', 'H', 'Z', 'U', 'X', '8', 0,
  /* 2057 */ 'L', 'W', 'Z', 'U', 'X', '8', 0,
  /* 2064 */ 'S', 'T', 'W', 'X', '8', 0,
  /* 2070 */ 'L', 'B', 'Z', 'X', '8', 0,
  /* 2076 */ 'L', 'H', 'Z', 'X', '8', 0,
  /* 2082 */ 'L', 'W', 'Z', 'X', '8', 0,
  /* 2088 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', '8', 0,
  /* 2097 */ 'L', 'B', 'Z', '8', 0,
  /* 2102 */ 'B', 'D', 'Z', '8', 0,
  /* 2107 */ 'L', 'H', 'Z', '8', 0,
  /* 2112 */ 'B', 'D', 'N', 'Z', '8', 0,
  /* 2118 */ 'L', 'W', 'Z', '8', 0,
  /* 2123 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 'i', '8', 0,
  /* 2135 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', '8', 0,
  /* 2147 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', '8', 0,
  /* 2159 */ 'A', 'N', 'D', 'I', 'o', '8', 0,
  /* 2166 */ 'A', 'N', 'D', 'I', 'S', 'o', '8', 0,
  /* 2174 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'F', 'A', 'A', 0,
  /* 2186 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'F', 'A', 'A', 0,
  /* 2198 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 'A', 0,
  /* 2208 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 'A', 0,
  /* 2218 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'I', 'A', 'A', 0,
  /* 2230 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'I', 'A', 'A', 0,
  /* 2242 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 'A', 0,
  /* 2252 */ 'E', 'V', 'M', 'H', 'E', 'G', 'U', 'M', 'I', 'A', 'A', 0,
  /* 2264 */ 'E', 'V', 'M', 'H', 'O', 'G', 'U', 'M', 'I', 'A', 'A', 0,
  /* 2276 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 'A', 0,
  /* 2286 */ 'D', 'C', 'B', 'A', 0,
  /* 2291 */ 'T', 'A', 'I', 'L', 'B', 'A', 0,
  /* 2298 */ 'L', 'D', 't', 'o', 'c', 'B', 'A', 0,
  /* 2306 */ 'g', 'B', 'C', 'A', 0,
  /* 2311 */ 'B', 'C', 'C', 'A', 0,
  /* 2316 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 0,
  /* 2326 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'F', 'A', 0,
  /* 2336 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 0,
  /* 2346 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 0,
  /* 2355 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 0,
  /* 2365 */ 'E', 'V', 'M', 'W', 'H', 'S', 'S', 'F', 'A', 0,
  /* 2375 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 0,
  /* 2385 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 0,
  /* 2394 */ 'L', 'H', 'A', 0,
  /* 2398 */ 'A', 'D', 'D', 'I', 'S', 't', 'o', 'c', 'H', 'A', 0,
  /* 2409 */ 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'g', 'd', 'H', 'A', 0,
  /* 2422 */ 'A', 'D', 'D', 'I', 'S', 't', 'l', 's', 'l', 'd', 'H', 'A', 0,
  /* 2435 */ 'A', 'D', 'D', 'I', 'S', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 2451 */ 'A', 'D', 'D', 'I', 'S', 'd', 't', 'p', 'r', 'e', 'l', 'H', 'A', 0,
  /* 2465 */ 'S', 'L', 'B', 'I', 'A', 0,
  /* 2471 */ 'T', 'L', 'B', 'I', 'A', 0,
  /* 2477 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 0,
  /* 2487 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'I', 'A', 0,
  /* 2497 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 0,
  /* 2507 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 0,
  /* 2516 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 0,
  /* 2526 */ 'E', 'V', 'M', 'W', 'H', 'U', 'M', 'I', 'A', 0,
  /* 2536 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 0,
  /* 2546 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 0,
  /* 2556 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 0,
  /* 2565 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'I', 'A', 0,
  /* 2576 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'I', 'A', 0,
  /* 2586 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'I', 'A', 0,
  /* 2597 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'I', 'A', 0,
  /* 2607 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'I', 'A', 0,
  /* 2619 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'I', 'A', 0,
  /* 2630 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'I', 'A', 0,
  /* 2642 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'I', 'A', 0,
  /* 2653 */ 'B', 'L', 'A', 0,
  /* 2657 */ 'g', 'B', 'C', 'L', 'A', 0,
  /* 2663 */ 'B', 'C', 'C', 'L', 'A', 0,
  /* 2669 */ 'B', 'D', 'Z', 'L', 'A', 0,
  /* 2675 */ 'B', 'D', 'N', 'Z', 'L', 'A', 0,
  /* 2682 */ 'E', 'V', 'M', 'R', 'A', 0,
  /* 2688 */ 'L', 'W', 'A', 0,
  /* 2692 */ 'M', 'T', 'V', 'S', 'R', 'W', 'A', 0,
  /* 2700 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'A', 'X', 'A', 0,
  /* 2710 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'X', 'A', 0,
  /* 2719 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'A', 0,
  /* 2729 */ 'Q', 'V', 'L', 'F', 'D', 'X', 'A', 0,
  /* 2737 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'A', 0,
  /* 2746 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 'A', 0,
  /* 2755 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'A', 0,
  /* 2765 */ 'Q', 'V', 'L', 'F', 'S', 'X', 'A', 0,
  /* 2773 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'A', 0,
  /* 2782 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'U', 'X', 'A', 0,
  /* 2792 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'A', 0,
  /* 2803 */ 'Q', 'V', 'L', 'F', 'D', 'U', 'X', 'A', 0,
  /* 2812 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'A', 0,
  /* 2822 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'U', 'X', 'A', 0,
  /* 2832 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'A', 0,
  /* 2843 */ 'Q', 'V', 'L', 'F', 'S', 'U', 'X', 'A', 0,
  /* 2852 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'A', 0,
  /* 2862 */ 'Q', 'V', 'S', 'T', 'F', 'I', 'W', 'X', 'A', 0,
  /* 2872 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'Z', 'X', 'A', 0,
  /* 2882 */ 'B', 'D', 'Z', 'A', 0,
  /* 2887 */ 'B', 'D', 'N', 'Z', 'A', 0,
  /* 2893 */ 'V', '_', 'S', 'E', 'T', '0', 'B', 0,
  /* 2901 */ 'V', 'S', 'R', 'A', 'B', 0,
  /* 2907 */ 'R', 'F', 'E', 'B', 'B', 0,
  /* 2913 */ 'V', 'C', 'L', 'Z', 'L', 'S', 'B', 'B', 0,
  /* 2922 */ 'V', 'C', 'T', 'Z', 'L', 'S', 'B', 'B', 0,
  /* 2931 */ 'V', 'C', 'M', 'P', 'N', 'E', 'B', 0,
  /* 2939 */ 'V', 'M', 'R', 'G', 'H', 'B', 0,
  /* 2946 */ 'X', 'X', 'S', 'P', 'L', 'T', 'I', 'B', 0,
  /* 2955 */ 'V', 'M', 'R', 'G', 'L', 'B', 0,
  /* 2962 */ 'T', 'A', 'I', 'L', 'B', 0,
  /* 2968 */ 'V', 'R', 'L', 'B', 0,
  /* 2973 */ 'V', 'S', 'L', 'B', 0,
  /* 2978 */ 'V', 'P', 'M', 'S', 'U', 'M', 'B', 0,
  /* 2986 */ 'C', 'M', 'P', 'B', 0,
  /* 2991 */ 'C', 'M', 'P', 'E', 'Q', 'B', 0,
  /* 2998 */ 'C', 'L', 'R', 'B', 'H', 'R', 'B', 0,
  /* 3006 */ 'C', 'M', 'P', 'R', 'B', 0,
  /* 3012 */ 'V', 'S', 'R', 'B', 0,
  /* 3017 */ 'V', 'M', 'U', 'L', 'E', 'S', 'B', 0,
  /* 3025 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 'B', 0,
  /* 3039 */ 'V', 'A', 'V', 'G', 'S', 'B', 0,
  /* 3046 */ 'V', 'U', 'P', 'K', 'H', 'S', 'B', 0,
  /* 3054 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'B', 0,
  /* 3063 */ 'V', 'U', 'P', 'K', 'L', 'S', 'B', 0,
  /* 3071 */ 'V', 'M', 'I', 'N', 'S', 'B', 0,
  /* 3078 */ 'V', 'M', 'U', 'L', 'O', 'S', 'B', 0,
  /* 3086 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'B', 0,
  /* 3095 */ 'E', 'V', 'E', 'X', 'T', 'S', 'B', 0,
  /* 3103 */ 'V', 'M', 'A', 'X', 'S', 'B', 0,
  /* 3110 */ 'M', 'F', 'T', 'B', 0,
  /* 3115 */ 'V', 'S', 'P', 'L', 'T', 'B', 0,
  /* 3122 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'B', 0,
  /* 3131 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'B', 0,
  /* 3140 */ 'S', 'T', 'B', 0,
  /* 3144 */ 'R', 'e', 'a', 'd', 'T', 'B', 0,
  /* 3151 */ 'V', 'M', 'U', 'L', 'E', 'U', 'B', 0,
  /* 3159 */ 'V', 'A', 'V', 'G', 'U', 'B', 0,
  /* 3166 */ 'V', 'M', 'I', 'N', 'U', 'B', 0,
  /* 3173 */ 'V', 'M', 'U', 'L', 'O', 'U', 'B', 0,
  /* 3181 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'B', 0,
  /* 3190 */ 'Q', 'V', 'F', 'S', 'U', 'B', 0,
  /* 3197 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 0,
  /* 3205 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 0,
  /* 3214 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'B', 0,
  /* 3225 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'B', 0,
  /* 3234 */ 'V', 'M', 'A', 'X', 'U', 'B', 0,
  /* 3241 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'B', 0,
  /* 3250 */ 'V', 'C', 'L', 'Z', 'B', 0,
  /* 3256 */ 'V', 'C', 'T', 'Z', 'B', 0,
  /* 3262 */ 'g', 'B', 'C', 0,
  /* 3266 */ 'B', 'C', 'C', 0,
  /* 3270 */ 'A', 'D', 'D', 'C', 0,
  /* 3275 */ 'X', 'X', 'L', 'A', 'N', 'D', 'C', 0,
  /* 3283 */ 'C', 'R', 'A', 'N', 'D', 'C', 0,
  /* 3290 */ 'E', 'V', 'A', 'N', 'D', 'C', 0,
  /* 3297 */ 'T', 'A', 'B', 'O', 'R', 'T', 'D', 'C', 0,
  /* 3306 */ 'S', 'U', 'B', 'F', 'C', 0,
  /* 3312 */ 'S', 'U', 'B', 'I', 'C', 0,
  /* 3318 */ 'A', 'D', 'D', 'I', 'C', 0,
  /* 3324 */ 'R', 'L', 'D', 'I', 'C', 0,
  /* 3330 */ 'S', 'U', 'B', 'F', 'I', 'C', 0,
  /* 3337 */ 'X', 'S', 'R', 'D', 'P', 'I', 'C', 0,
  /* 3345 */ 'X', 'V', 'R', 'D', 'P', 'I', 'C', 0,
  /* 3353 */ 'X', 'V', 'R', 'S', 'P', 'I', 'C', 0,
  /* 3361 */ 'B', 'R', 'I', 'N', 'C', 0,
  /* 3367 */ 'S', 'L', 'B', 'S', 'Y', 'N', 'C', 0,
  /* 3375 */ 'T', 'L', 'B', 'S', 'Y', 'N', 'C', 0,
  /* 3383 */ 'M', 'S', 'G', 'S', 'Y', 'N', 'C', 0,
  /* 3391 */ 'I', 'S', 'Y', 'N', 'C', 0,
  /* 3397 */ 'M', 'S', 'Y', 'N', 'C', 0,
  /* 3403 */ 'D', 'Y', 'N', 'A', 'L', 'L', 'O', 'C', 0,
  /* 3412 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'B', 'R', 'C', 0,
  /* 3427 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'B', 'R', 'C', 0,
  /* 3439 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'F', 'R', 'C', 0,
  /* 3454 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'F', 'R', 'C', 0,
  /* 3466 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 3482 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'F', 'R', 'C', 0,
  /* 3495 */ 'X', 'X', 'L', 'O', 'R', 'C', 0,
  /* 3502 */ 'C', 'R', 'O', 'R', 'C', 0,
  /* 3508 */ 'E', 'V', 'O', 'R', 'C', 0,
  /* 3514 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'R', 'R', 'C', 0,
  /* 3529 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'R', 'R', 'C', 0,
  /* 3541 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'Q', 'S', 'R', 'C', 0,
  /* 3556 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'Q', 'S', 'R', 'C', 0,
  /* 3568 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 3584 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'S', 'R', 'C', 0,
  /* 3597 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'C', 'C', '_', 'V', 'S', 'R', 'C', 0,
  /* 3612 */ 'S', 'E', 'L', 'E', 'C', 'T', '_', 'V', 'S', 'R', 'C', 0,
  /* 3624 */ 'S', 'C', 0,
  /* 3627 */ 'T', 'A', 'B', 'O', 'R', 'T', 'W', 'C', 0,
  /* 3636 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'D', 0,
  /* 3645 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'D', 0,
  /* 3654 */ 'V', 'E', 'X', 'T', 'S', 'W', '2', 'D', 0,
  /* 3663 */ 'T', 'L', 'B', 'S', 'X', '2', 'D', 0,
  /* 3671 */ 'V', 'S', 'H', 'A', 'S', 'I', 'G', 'M', 'A', 'D', 0,
  /* 3682 */ 'V', 'S', 'R', 'A', 'D', 0,
  /* 3688 */ 'V', 'G', 'B', 'B', 'D', 0,
  /* 3694 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'D', 0,
  /* 3702 */ 'Q', 'V', 'F', 'A', 'D', 'D', 0,
  /* 3709 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 0,
  /* 3717 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 0,
  /* 3726 */ 'Q', 'V', 'F', 'X', 'X', 'C', 'P', 'N', 'M', 'A', 'D', 'D', 0,
  /* 3739 */ 'Q', 'V', 'F', 'X', 'X', 'N', 'P', 'M', 'A', 'D', 'D', 0,
  /* 3751 */ 'Q', 'V', 'F', 'X', 'M', 'A', 'D', 'D', 0,
  /* 3760 */ 'Q', 'V', 'F', 'X', 'X', 'M', 'A', 'D', 'D', 0,
  /* 3770 */ 'G', '_', 'A', 'D', 'D', 0,
  /* 3776 */ 'E', 'V', 'L', 'D', 'D', 0,
  /* 3782 */ 'M', 'T', 'V', 'S', 'R', 'D', 'D', 0,
  /* 3790 */ 'E', 'V', 'S', 'T', 'D', 'D', 0,
  /* 3797 */ 'L', 'F', 'D', 0,
  /* 3801 */ 'S', 'T', 'F', 'D', 0,
  /* 3806 */ 'F', 'N', 'E', 'G', 'D', 0,
  /* 3812 */ 'V', 'N', 'E', 'G', 'D', 0,
  /* 3818 */ 'M', 'U', 'L', 'H', 'D', 0,
  /* 3824 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 0,
  /* 3832 */ 'R', 'F', 'I', 'D', 0,
  /* 3837 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 0,
  /* 3845 */ 'T', 'L', 'B', 'L', 'D', 0,
  /* 3851 */ 'F', 'S', 'E', 'L', 'D', 0,
  /* 3857 */ 'M', 'U', 'L', 'L', 'D', 0,
  /* 3863 */ 'C', 'M', 'P', 'L', 'D', 0,
  /* 3869 */ 'M', 'F', 'V', 'S', 'R', 'L', 'D', 0,
  /* 3877 */ 'V', 'R', 'L', 'D', 0,
  /* 3882 */ 'V', 'S', 'L', 'D', 0,
  /* 3887 */ 'F', 'R', 'I', 'M', 'D', 0,
  /* 3893 */ 'V', 'B', 'P', 'E', 'R', 'M', 'D', 0,
  /* 3901 */ 'V', 'P', 'M', 'S', 'U', 'M', 'D', 0,
  /* 3909 */ 'X', 'X', 'L', 'A', 'N', 'D', 0,
  /* 3916 */ 'X', 'X', 'L', 'N', 'A', 'N', 'D', 0,
  /* 3924 */ 'C', 'R', 'N', 'A', 'N', 'D', 0,
  /* 3931 */ 'E', 'V', 'N', 'A', 'N', 'D', 0,
  /* 3938 */ 'C', 'R', 'A', 'N', 'D', 0,
  /* 3944 */ 'E', 'V', 'A', 'N', 'D', 0,
  /* 3950 */ 'T', 'E', 'N', 'D', 0,
  /* 3955 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 3968 */ 'F', 'C', 'P', 'S', 'G', 'N', 'D', 0,
  /* 3976 */ 'F', 'R', 'I', 'N', 'D', 0,
  /* 3982 */ 'F', 'R', 'I', 'P', 'D', 0,
  /* 3988 */ 'C', 'M', 'P', 'D', 0,
  /* 3993 */ 'L', 'O', 'A', 'D', '_', 'S', 'T', 'A', 'C', 'K', '_', 'G', 'U', 'A', 'R', 'D', 0,
  /* 4010 */ 'X', 'X', 'B', 'R', 'D', 0,
  /* 4016 */ 'M', 'T', 'M', 'S', 'R', 'D', 0,
  /* 4023 */ 'M', 'F', 'V', 'S', 'R', 'D', 0,
  /* 4030 */ 'M', 'T', 'V', 'S', 'R', 'D', 0,
  /* 4037 */ 'F', 'A', 'B', 'S', 'D', 0,
  /* 4043 */ 'F', 'N', 'A', 'B', 'S', 'D', 0,
  /* 4050 */ 'V', 'M', 'I', 'N', 'S', 'D', 0,
  /* 4057 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'D', 0,
  /* 4066 */ 'V', 'M', 'A', 'X', 'S', 'D', 0,
  /* 4073 */ 'L', 'X', 'S', 'D', 0,
  /* 4078 */ 'S', 'T', 'X', 'S', 'D', 0,
  /* 4084 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'D', 0,
  /* 4094 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'D', 0,
  /* 4103 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'D', 0,
  /* 4112 */ 'S', 'T', 'D', 0,
  /* 4116 */ 'V', 'M', 'I', 'N', 'U', 'D', 0,
  /* 4123 */ 'F', 'C', 'M', 'P', 'U', 'D', 0,
  /* 4130 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'D', 0,
  /* 4139 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'D', 0,
  /* 4148 */ 'V', 'M', 'A', 'X', 'U', 'D', 0,
  /* 4155 */ 'D', 'I', 'V', 'D', 0,
  /* 4160 */ 'F', 'R', 'I', 'Z', 'D', 0,
  /* 4166 */ 'V', 'C', 'L', 'Z', 'D', 0,
  /* 4172 */ 'C', 'N', 'T', 'L', 'Z', 'D', 0,
  /* 4179 */ 'V', 'C', 'T', 'Z', 'D', 0,
  /* 4185 */ 'C', 'N', 'T', 'T', 'Z', 'D', 0,
  /* 4192 */ 'M', 'F', 'B', 'H', 'R', 'B', 'E', 0,
  /* 4200 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 4213 */ 'A', 'D', 'D', 'E', 0,
  /* 4218 */ 'D', 'I', 'V', 'D', 'E', 0,
  /* 4224 */ 'S', 'L', 'B', 'M', 'F', 'E', 'E', 0,
  /* 4232 */ 'W', 'R', 'T', 'E', 'E', 0,
  /* 4238 */ 'S', 'U', 'B', 'F', 'E', 0,
  /* 4244 */ 'E', 'V', 'L', 'W', 'H', 'E', 0,
  /* 4251 */ 'E', 'V', 'S', 'T', 'W', 'H', 'E', 0,
  /* 4259 */ 'S', 'L', 'B', 'I', 'E', 0,
  /* 4265 */ 'T', 'L', 'B', 'I', 'E', 0,
  /* 4271 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 4278 */ 'A', 'D', 'D', 'M', 'E', 0,
  /* 4284 */ 'S', 'U', 'B', 'F', 'M', 'E', 0,
  /* 4291 */ 'L', 'O', 'C', 'A', 'L', '_', 'E', 'S', 'C', 'A', 'P', 'E', 0,
  /* 4304 */ 'T', 'L', 'B', 'R', 'E', 0,
  /* 4310 */ 'Q', 'V', 'F', 'R', 'E', 0,
  /* 4316 */ 'S', 'L', 'B', 'M', 'T', 'E', 0,
  /* 4323 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 0,
  /* 4333 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', 0,
  /* 4342 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 4352 */ 'M', 'F', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4361 */ 'M', 'T', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4370 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4385 */ 'U', 'P', 'D', 'A', 'T', 'E', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4399 */ 'S', 'P', 'I', 'L', 'L', '_', 'V', 'R', 'S', 'A', 'V', 'E', 0,
  /* 4412 */ 'T', 'L', 'B', 'W', 'E', 0,
  /* 4418 */ 'D', 'I', 'V', 'W', 'E', 0,
  /* 4424 */ 'E', 'V', 'S', 'T', 'W', 'W', 'E', 0,
  /* 4432 */ 'A', 'D', 'D', 'Z', 'E', 0,
  /* 4438 */ 'S', 'U', 'B', 'F', 'Z', 'E', 0,
  /* 4445 */ 'D', 'C', 'B', 'F', 0,
  /* 4450 */ 'S', 'U', 'B', 'F', 0,
  /* 4455 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 4468 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 0,
  /* 4477 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'F', 0,
  /* 4486 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 0,
  /* 4495 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 0,
  /* 4503 */ 'M', 'C', 'R', 'F', 0,
  /* 4508 */ 'M', 'F', 'O', 'C', 'R', 'F', 0,
  /* 4515 */ 'M', 'T', 'O', 'C', 'R', 'F', 0,
  /* 4522 */ 'M', 'T', 'C', 'R', 'F', 0,
  /* 4528 */ 'M', 'T', 'F', 'S', 'F', 0,
  /* 4534 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 0,
  /* 4543 */ 'E', 'V', 'M', 'W', 'H', 'S', 'S', 'F', 0,
  /* 4552 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 0,
  /* 4561 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 0,
  /* 4569 */ 'S', 'L', 'B', 'I', 'E', 'G', 0,
  /* 4576 */ 'Q', 'V', 'F', 'N', 'E', 'G', 0,
  /* 4583 */ 'E', 'V', 'N', 'E', 'G', 0,
  /* 4589 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4604 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 4618 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 4632 */ 'V', '_', 'S', 'E', 'T', '0', 'H', 0,
  /* 4640 */ 'V', 'S', 'R', 'A', 'H', 0,
  /* 4646 */ 'E', 'V', 'L', 'D', 'H', 0,
  /* 4652 */ 'E', 'V', 'S', 'T', 'D', 'H', 0,
  /* 4659 */ 'V', 'C', 'M', 'P', 'N', 'E', 'H', 0,
  /* 4667 */ 'V', 'M', 'R', 'G', 'H', 'H', 0,
  /* 4674 */ 'V', 'M', 'R', 'G', 'L', 'H', 0,
  /* 4681 */ 'V', 'R', 'L', 'H', 0,
  /* 4686 */ 'V', 'S', 'L', 'H', 0,
  /* 4691 */ 'V', 'P', 'M', 'S', 'U', 'M', 'H', 0,
  /* 4699 */ 'X', 'X', 'B', 'R', 'H', 0,
  /* 4705 */ 'V', 'S', 'R', 'H', 0,
  /* 4710 */ 'V', 'M', 'U', 'L', 'E', 'S', 'H', 0,
  /* 4718 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 'H', 0,
  /* 4732 */ 'V', 'A', 'V', 'G', 'S', 'H', 0,
  /* 4739 */ 'V', 'U', 'P', 'K', 'H', 'S', 'H', 0,
  /* 4747 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'H', 0,
  /* 4756 */ 'V', 'U', 'P', 'K', 'L', 'S', 'H', 0,
  /* 4764 */ 'V', 'M', 'I', 'N', 'S', 'H', 0,
  /* 4771 */ 'V', 'M', 'U', 'L', 'O', 'S', 'H', 0,
  /* 4779 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'H', 0,
  /* 4788 */ 'E', 'V', 'E', 'X', 'T', 'S', 'H', 0,
  /* 4796 */ 'V', 'M', 'A', 'X', 'S', 'H', 0,
  /* 4803 */ 'V', 'S', 'P', 'L', 'T', 'H', 0,
  /* 4810 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'H', 0,
  /* 4819 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'H', 0,
  /* 4828 */ 'S', 'T', 'H', 0,
  /* 4832 */ 'V', 'M', 'U', 'L', 'E', 'U', 'H', 0,
  /* 4840 */ 'V', 'A', 'V', 'G', 'U', 'H', 0,
  /* 4847 */ 'V', 'M', 'I', 'N', 'U', 'H', 0,
  /* 4854 */ 'V', 'M', 'U', 'L', 'O', 'U', 'H', 0,
  /* 4862 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'H', 0,
  /* 4871 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'H', 0,
  /* 4882 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'H', 0,
  /* 4891 */ 'V', 'M', 'A', 'X', 'U', 'H', 0,
  /* 4898 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'H', 0,
  /* 4907 */ 'V', 'C', 'L', 'Z', 'H', 0,
  /* 4913 */ 'V', 'C', 'T', 'Z', 'H', 0,
  /* 4919 */ 'D', 'C', 'B', 'I', 0,
  /* 4924 */ 'I', 'C', 'B', 'I', 0,
  /* 4929 */ 'S', 'U', 'B', 'I', 0,
  /* 4934 */ 'D', 'C', 'C', 'C', 'I', 0,
  /* 4940 */ 'I', 'C', 'C', 'C', 'I', 0,
  /* 4946 */ 'T', 'A', 'B', 'O', 'R', 'T', 'D', 'C', 'I', 0,
  /* 4956 */ 'R', 'F', 'C', 'I', 0,
  /* 4961 */ 'R', 'F', 'M', 'C', 'I', 0,
  /* 4967 */ 'Q', 'V', 'G', 'P', 'C', 'I', 0,
  /* 4974 */ 'T', 'A', 'B', 'O', 'R', 'T', 'W', 'C', 'I', 0,
  /* 4984 */ 'S', 'R', 'A', 'D', 'I', 0,
  /* 4990 */ 'A', 'D', 'D', 'I', 0,
  /* 4995 */ 'R', 'F', 'D', 'I', 0,
  /* 5000 */ 'C', 'M', 'P', 'L', 'D', 'I', 0,
  /* 5007 */ 'C', 'L', 'R', 'L', 'S', 'L', 'D', 'I', 0,
  /* 5016 */ 'E', 'X', 'T', 'L', 'D', 'I', 0,
  /* 5023 */ 'X', 'X', 'P', 'E', 'R', 'M', 'D', 'I', 0,
  /* 5032 */ 'C', 'M', 'P', 'D', 'I', 0,
  /* 5038 */ 'C', 'L', 'R', 'R', 'D', 'I', 0,
  /* 5045 */ 'I', 'N', 'S', 'R', 'D', 'I', 0,
  /* 5052 */ 'R', 'O', 'T', 'R', 'D', 'I', 0,
  /* 5059 */ 'E', 'X', 'T', 'R', 'D', 'I', 0,
  /* 5066 */ 'T', 'D', 'I', 0,
  /* 5070 */ 'W', 'R', 'T', 'E', 'E', 'I', 0,
  /* 5077 */ 'R', 'F', 'I', 0,
  /* 5081 */ 'M', 'T', 'F', 'S', 'F', 'I', 0,
  /* 5088 */ 'E', 'V', 'S', 'P', 'L', 'A', 'T', 'F', 'I', 0,
  /* 5098 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'H', 'I', 0,
  /* 5108 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'L', 'O', 'H', 'I', 0,
  /* 5120 */ 'P', 'H', 'I', 0,
  /* 5124 */ 'T', 'L', 'B', 'L', 'I', 0,
  /* 5130 */ 'M', 'U', 'L', 'L', 'I', 0,
  /* 5136 */ 'V', 'R', 'L', 'D', 'M', 'I', 0,
  /* 5143 */ 'R', 'L', 'D', 'I', 'M', 'I', 0,
  /* 5150 */ 'R', 'L', 'W', 'I', 'M', 'I', 0,
  /* 5157 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 0,
  /* 5166 */ 'E', 'V', 'M', 'W', 'H', 'S', 'M', 'I', 0,
  /* 5175 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 0,
  /* 5184 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 0,
  /* 5192 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 0,
  /* 5201 */ 'E', 'V', 'M', 'W', 'H', 'U', 'M', 'I', 0,
  /* 5210 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 0,
  /* 5219 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 0,
  /* 5228 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 0,
  /* 5236 */ 'V', 'R', 'L', 'W', 'M', 'I', 0,
  /* 5243 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 0,
  /* 5252 */ 'V', 'S', 'L', 'D', 'O', 'I', 0,
  /* 5259 */ 'X', 'S', 'R', 'D', 'P', 'I', 0,
  /* 5266 */ 'X', 'V', 'R', 'D', 'P', 'I', 0,
  /* 5273 */ 'X', 'S', 'R', 'Q', 'P', 'I', 0,
  /* 5280 */ 'X', 'V', 'R', 'S', 'P', 'I', 0,
  /* 5287 */ 'X', 'O', 'R', 'I', 0,
  /* 5292 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 0,
  /* 5302 */ 'E', 'V', 'S', 'P', 'L', 'A', 'T', 'I', 0,
  /* 5311 */ 'L', 'D', 't', 'o', 'c', 'J', 'T', 'I', 0,
  /* 5320 */ 'S', 'R', 'A', 'W', 'I', 0,
  /* 5326 */ 'X', 'X', 'S', 'L', 'D', 'W', 'I', 0,
  /* 5334 */ 'C', 'M', 'P', 'L', 'W', 'I', 0,
  /* 5341 */ 'E', 'V', 'R', 'L', 'W', 'I', 0,
  /* 5348 */ 'C', 'L', 'R', 'L', 'S', 'L', 'W', 'I', 0,
  /* 5357 */ 'I', 'N', 'S', 'L', 'W', 'I', 0,
  /* 5364 */ 'E', 'V', 'S', 'L', 'W', 'I', 0,
  /* 5371 */ 'E', 'X', 'T', 'L', 'W', 'I', 0,
  /* 5378 */ 'C', 'M', 'P', 'W', 'I', 0,
  /* 5384 */ 'C', 'L', 'R', 'R', 'W', 'I', 0,
  /* 5391 */ 'I', 'N', 'S', 'R', 'W', 'I', 0,
  /* 5398 */ 'R', 'O', 'T', 'R', 'W', 'I', 0,
  /* 5405 */ 'E', 'X', 'T', 'R', 'W', 'I', 0,
  /* 5412 */ 'L', 'S', 'W', 'I', 0,
  /* 5417 */ 'S', 'T', 'S', 'W', 'I', 0,
  /* 5423 */ 'T', 'W', 'I', 0,
  /* 5427 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 'I', 0,
  /* 5437 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'I', 0,
  /* 5446 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 'I', 0,
  /* 5456 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 'I', 0,
  /* 5465 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 'I', 0,
  /* 5476 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 'I', 0,
  /* 5486 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 'I', 0,
  /* 5497 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 'I', 0,
  /* 5507 */ 'T', 'C', 'H', 'E', 'C', 'K', 0,
  /* 5514 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 0,
  /* 5525 */ 'B', 'L', 0,
  /* 5528 */ 'g', 'B', 'C', 'L', 0,
  /* 5533 */ 'B', 'C', 'C', 'L', 0,
  /* 5538 */ 'R', 'L', 'D', 'C', 'L', 0,
  /* 5544 */ 'R', 'L', 'D', 'I', 'C', 'L', 0,
  /* 5551 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5560 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5569 */ 'T', 'L', 'B', 'I', 'E', 'L', 0,
  /* 5576 */ 'Q', 'V', 'F', 'S', 'E', 'L', 0,
  /* 5583 */ 'I', 'S', 'E', 'L', 0,
  /* 5588 */ 'V', 'S', 'E', 'L', 0,
  /* 5593 */ 'X', 'X', 'S', 'E', 'L', 0,
  /* 5599 */ 'D', 'S', 'S', 'A', 'L', 'L', 0,
  /* 5606 */ 'K', 'I', 'L', 'L', 0,
  /* 5611 */ 'L', 'X', 'V', 'L', 'L', 0,
  /* 5617 */ 'S', 'T', 'X', 'V', 'L', 'L', 0,
  /* 5624 */ 'B', 'L', 'R', 'L', 0,
  /* 5629 */ 'g', 'B', 'C', 'L', 'R', 'L', 0,
  /* 5636 */ 'B', 'C', 'C', 'L', 'R', 'L', 0,
  /* 5643 */ 'B', 'D', 'Z', 'L', 'R', 'L', 0,
  /* 5650 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 0,
  /* 5658 */ 'B', 'C', 'T', 'R', 'L', 0,
  /* 5664 */ 'g', 'B', 'C', 'C', 'T', 'R', 'L', 0,
  /* 5672 */ 'B', 'C', 'C', 'C', 'T', 'R', 'L', 0,
  /* 5680 */ 'L', 'V', 'S', 'L', 0,
  /* 5685 */ 'Q', 'V', 'F', 'M', 'U', 'L', 0,
  /* 5692 */ 'Q', 'V', 'F', 'X', 'M', 'U', 'L', 0,
  /* 5700 */ 'L', 'X', 'V', 'L', 0,
  /* 5705 */ 'S', 'T', 'X', 'V', 'L', 0,
  /* 5711 */ 'L', 'B', 'A', 'R', 'X', 'L', 0,
  /* 5718 */ 'L', 'D', 'A', 'R', 'X', 'L', 0,
  /* 5725 */ 'L', 'H', 'A', 'R', 'X', 'L', 0,
  /* 5732 */ 'L', 'W', 'A', 'R', 'X', 'L', 0,
  /* 5739 */ 'L', 'V', 'X', 'L', 0,
  /* 5744 */ 'S', 'T', 'V', 'X', 'L', 0,
  /* 5750 */ 'D', 'C', 'B', 'Z', 'L', 0,
  /* 5756 */ 'B', 'D', 'Z', 'L', 0,
  /* 5761 */ 'B', 'D', 'N', 'Z', 'L', 0,
  /* 5767 */ 'L', 'D', 't', 'o', 'c', 'L', 0,
  /* 5774 */ 'A', 'D', 'D', 'I', 't', 'o', 'c', 'L', 0,
  /* 5783 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 0,
  /* 5794 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 0,
  /* 5805 */ 'L', 'D', 'g', 'o', 't', 'T', 'p', 'r', 'e', 'l', 'L', 0,
  /* 5817 */ 'A', 'D', 'D', 'I', 'd', 't', 'p', 'r', 'e', 'l', 'L', 0,
  /* 5829 */ 'V', 'M', 'S', 'U', 'M', 'M', 'B', 'M', 0,
  /* 5838 */ 'V', 'S', 'U', 'B', 'U', 'B', 'M', 0,
  /* 5846 */ 'V', 'A', 'D', 'D', 'U', 'B', 'M', 0,
  /* 5854 */ 'V', 'M', 'S', 'U', 'M', 'U', 'B', 'M', 0,
  /* 5863 */ 'V', 'S', 'U', 'B', 'U', 'D', 'M', 0,
  /* 5871 */ 'V', 'A', 'D', 'D', 'U', 'D', 'M', 0,
  /* 5879 */ 'V', 'M', 'S', 'U', 'M', 'S', 'H', 'M', 0,
  /* 5888 */ 'V', 'S', 'U', 'B', 'U', 'H', 'M', 0,
  /* 5896 */ 'V', 'M', 'L', 'A', 'D', 'D', 'U', 'H', 'M', 0,
  /* 5906 */ 'V', 'A', 'D', 'D', 'U', 'H', 'M', 0,
  /* 5914 */ 'V', 'M', 'S', 'U', 'M', 'U', 'H', 'M', 0,
  /* 5923 */ 'T', 'R', 'E', 'C', 'L', 'A', 'I', 'M', 0,
  /* 5932 */ 'V', 'R', 'F', 'I', 'M', 0,
  /* 5938 */ 'X', 'S', 'R', 'D', 'P', 'I', 'M', 0,
  /* 5946 */ 'X', 'V', 'R', 'D', 'P', 'I', 'M', 0,
  /* 5954 */ 'X', 'V', 'R', 'S', 'P', 'I', 'M', 0,
  /* 5962 */ 'Q', 'V', 'F', 'R', 'I', 'M', 0,
  /* 5969 */ 'V', 'R', 'L', 'D', 'N', 'M', 0,
  /* 5976 */ 'R', 'L', 'W', 'I', 'N', 'M', 0,
  /* 5983 */ 'V', 'R', 'L', 'W', 'N', 'M', 0,
  /* 5990 */ 'V', 'S', 'U', 'B', 'U', 'Q', 'M', 0,
  /* 5998 */ 'V', 'A', 'D', 'D', 'U', 'Q', 'M', 0,
  /* 6006 */ 'V', 'S', 'U', 'B', 'E', 'U', 'Q', 'M', 0,
  /* 6015 */ 'V', 'A', 'D', 'D', 'E', 'U', 'Q', 'M', 0,
  /* 6024 */ 'Q', 'V', 'F', 'P', 'E', 'R', 'M', 0,
  /* 6032 */ 'V', 'P', 'E', 'R', 'M', 0,
  /* 6038 */ 'X', 'X', 'P', 'E', 'R', 'M', 0,
  /* 6045 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 6055 */ 'V', 'P', 'K', 'U', 'D', 'U', 'M', 0,
  /* 6063 */ 'V', 'P', 'K', 'U', 'H', 'U', 'M', 0,
  /* 6071 */ 'V', 'P', 'K', 'U', 'W', 'U', 'M', 0,
  /* 6079 */ 'V', 'S', 'U', 'B', 'U', 'W', 'M', 0,
  /* 6087 */ 'V', 'A', 'D', 'D', 'U', 'W', 'M', 0,
  /* 6095 */ 'V', 'M', 'U', 'L', 'U', 'W', 'M', 0,
  /* 6103 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'F', 'A', 'N', 0,
  /* 6115 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'F', 'A', 'N', 0,
  /* 6127 */ 'E', 'V', 'M', 'W', 'S', 'M', 'F', 'A', 'N', 0,
  /* 6137 */ 'E', 'V', 'M', 'W', 'S', 'S', 'F', 'A', 'N', 0,
  /* 6147 */ 'E', 'V', 'M', 'H', 'E', 'G', 'S', 'M', 'I', 'A', 'N', 0,
  /* 6159 */ 'E', 'V', 'M', 'H', 'O', 'G', 'S', 'M', 'I', 'A', 'N', 0,
  /* 6171 */ 'E', 'V', 'M', 'W', 'S', 'M', 'I', 'A', 'N', 0,
  /* 6181 */ 'E', 'V', 'M', 'H', 'E', 'G', 'U', 'M', 'I', 'A', 'N', 0,
  /* 6193 */ 'E', 'V', 'M', 'H', 'O', 'G', 'U', 'M', 'I', 'A', 'N', 0,
  /* 6205 */ 'E', 'V', 'M', 'W', 'U', 'M', 'I', 'A', 'N', 0,
  /* 6215 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 0,
  /* 6225 */ 'Q', 'V', 'F', 'C', 'P', 'S', 'G', 'N', 0,
  /* 6234 */ 'V', 'R', 'F', 'I', 'N', 0,
  /* 6240 */ 'T', 'B', 'E', 'G', 'I', 'N', 0,
  /* 6247 */ 'Q', 'V', 'F', 'R', 'I', 'N', 0,
  /* 6254 */ 'M', 'F', 'S', 'R', 'I', 'N', 0,
  /* 6261 */ 'M', 'T', 'S', 'R', 'I', 'N', 0,
  /* 6268 */ 'C', 'F', 'I', '_', 'I', 'N', 'S', 'T', 'R', 'U', 'C', 'T', 'I', 'O', 'N', 0,
  /* 6284 */ 'X', 'S', 'C', 'V', 'S', 'P', 'D', 'P', 'N', 0,
  /* 6294 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'P', 'N', 0,
  /* 6304 */ 'A', 'T', 'T', 'N', 0,
  /* 6309 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 6326 */ 'E', 'V', 'S', 'T', 'W', 'H', 'O', 0,
  /* 6334 */ 'E', 'n', 'f', 'o', 'r', 'c', 'e', 'I', 'E', 'I', 'O', 0,
  /* 6346 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'L', 'O', 0,
  /* 6356 */ 'E', 'V', 'M', 'E', 'R', 'G', 'E', 'H', 'I', 'L', 'O', 0,
  /* 6368 */ 'V', 'S', 'L', 'O', 0,
  /* 6373 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'D', 'P', 'O', 0,
  /* 6383 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 6394 */ 'X', 'S', 'M', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 6404 */ 'X', 'S', 'S', 'U', 'B', 'Q', 'P', 'O', 0,
  /* 6413 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 6424 */ 'X', 'S', 'M', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 6434 */ 'X', 'S', 'A', 'D', 'D', 'Q', 'P', 'O', 0,
  /* 6443 */ 'X', 'S', 'M', 'U', 'L', 'Q', 'P', 'O', 0,
  /* 6452 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'Q', 'P', 'O', 0,
  /* 6462 */ 'X', 'S', 'D', 'I', 'V', 'Q', 'P', 'O', 0,
  /* 6471 */ 'V', 'S', 'R', 'O', 0,
  /* 6476 */ 'E', 'V', 'S', 'T', 'W', 'W', 'O', 0,
  /* 6484 */ 'S', 'T', 'A', 'C', 'K', 'M', 'A', 'P', 0,
  /* 6493 */ 'T', 'R', 'A', 'P', 0,
  /* 6498 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6509 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6520 */ 'X', 'S', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6530 */ 'X', 'V', 'M', 'S', 'U', 'B', 'A', 'D', 'P', 0,
  /* 6540 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6551 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6562 */ 'X', 'S', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6572 */ 'X', 'V', 'M', 'A', 'D', 'D', 'A', 'D', 'P', 0,
  /* 6582 */ 'X', 'S', 'S', 'U', 'B', 'D', 'P', 0,
  /* 6590 */ 'X', 'V', 'S', 'U', 'B', 'D', 'P', 0,
  /* 6598 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'D', 'P', 0,
  /* 6608 */ 'X', 'V', 'T', 'S', 'T', 'D', 'C', 'D', 'P', 0,
  /* 6618 */ 'X', 'S', 'M', 'I', 'N', 'C', 'D', 'P', 0,
  /* 6627 */ 'X', 'S', 'M', 'A', 'X', 'C', 'D', 'P', 0,
  /* 6636 */ 'X', 'S', 'A', 'D', 'D', 'D', 'P', 0,
  /* 6644 */ 'X', 'V', 'A', 'D', 'D', 'D', 'P', 0,
  /* 6652 */ 'X', 'S', 'C', 'V', 'S', 'X', 'D', 'D', 'P', 0,
  /* 6662 */ 'X', 'V', 'C', 'V', 'S', 'X', 'D', 'D', 'P', 0,
  /* 6672 */ 'X', 'S', 'C', 'V', 'U', 'X', 'D', 'D', 'P', 0,
  /* 6682 */ 'X', 'V', 'C', 'V', 'U', 'X', 'D', 'D', 'P', 0,
  /* 6692 */ 'X', 'S', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 0,
  /* 6702 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 0,
  /* 6712 */ 'X', 'S', 'C', 'M', 'P', 'N', 'E', 'D', 'P', 0,
  /* 6722 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'D', 'P', 0,
  /* 6732 */ 'X', 'S', 'R', 'E', 'D', 'P', 0,
  /* 6739 */ 'X', 'V', 'R', 'E', 'D', 'P', 0,
  /* 6746 */ 'X', 'S', 'R', 'S', 'Q', 'R', 'T', 'E', 'D', 'P', 0,
  /* 6757 */ 'X', 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'D', 'P', 0,
  /* 6768 */ 'X', 'S', 'N', 'E', 'G', 'D', 'P', 0,
  /* 6776 */ 'X', 'V', 'N', 'E', 'G', 'D', 'P', 0,
  /* 6784 */ 'X', 'S', 'X', 'S', 'I', 'G', 'D', 'P', 0,
  /* 6793 */ 'X', 'V', 'X', 'S', 'I', 'G', 'D', 'P', 0,
  /* 6802 */ 'X', 'S', 'M', 'I', 'N', 'J', 'D', 'P', 0,
  /* 6811 */ 'X', 'S', 'M', 'A', 'X', 'J', 'D', 'P', 0,
  /* 6820 */ 'X', 'S', 'M', 'U', 'L', 'D', 'P', 0,
  /* 6828 */ 'X', 'V', 'M', 'U', 'L', 'D', 'P', 0,
  /* 6836 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 6847 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 6858 */ 'X', 'S', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 6868 */ 'X', 'V', 'M', 'S', 'U', 'B', 'M', 'D', 'P', 0,
  /* 6878 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 6889 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 6900 */ 'X', 'S', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 6910 */ 'X', 'V', 'M', 'A', 'D', 'D', 'M', 'D', 'P', 0,
  /* 6920 */ 'X', 'S', 'C', 'P', 'S', 'G', 'N', 'D', 'P', 0,
  /* 6930 */ 'X', 'V', 'C', 'P', 'S', 'G', 'N', 'D', 'P', 0,
  /* 6940 */ 'X', 'S', 'M', 'I', 'N', 'D', 'P', 0,
  /* 6948 */ 'X', 'V', 'M', 'I', 'N', 'D', 'P', 0,
  /* 6956 */ 'X', 'S', 'C', 'M', 'P', 'O', 'D', 'P', 0,
  /* 6965 */ 'X', 'S', 'C', 'V', 'H', 'P', 'D', 'P', 0,
  /* 6974 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'D', 'P', 0,
  /* 6983 */ 'X', 'S', 'C', 'V', 'S', 'P', 'D', 'P', 0,
  /* 6992 */ 'X', 'V', 'C', 'V', 'S', 'P', 'D', 'P', 0,
  /* 7001 */ 'X', 'S', 'I', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7010 */ 'X', 'V', 'I', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7019 */ 'X', 'S', 'C', 'M', 'P', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7030 */ 'X', 'S', 'X', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7039 */ 'X', 'V', 'X', 'E', 'X', 'P', 'D', 'P', 0,
  /* 7048 */ 'X', 'S', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 0,
  /* 7058 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 0,
  /* 7068 */ 'X', 'S', 'N', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7077 */ 'X', 'V', 'N', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7086 */ 'X', 'S', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7094 */ 'X', 'V', 'A', 'B', 'S', 'D', 'P', 0,
  /* 7102 */ 'X', 'S', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 0,
  /* 7112 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 0,
  /* 7122 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7131 */ 'X', 'S', 'T', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7141 */ 'X', 'V', 'T', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7151 */ 'X', 'V', 'S', 'Q', 'R', 'T', 'D', 'P', 0,
  /* 7160 */ 'X', 'S', 'C', 'M', 'P', 'U', 'D', 'P', 0,
  /* 7169 */ 'X', 'S', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7177 */ 'X', 'S', 'T', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7186 */ 'X', 'V', 'T', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7195 */ 'X', 'V', 'D', 'I', 'V', 'D', 'P', 0,
  /* 7203 */ 'X', 'V', 'C', 'V', 'S', 'X', 'W', 'D', 'P', 0,
  /* 7213 */ 'X', 'V', 'C', 'V', 'U', 'X', 'W', 'D', 'P', 0,
  /* 7223 */ 'X', 'S', 'M', 'A', 'X', 'D', 'P', 0,
  /* 7231 */ 'X', 'V', 'M', 'A', 'X', 'D', 'P', 0,
  /* 7239 */ 'V', 'C', 'M', 'P', 'B', 'F', 'P', 0,
  /* 7247 */ 'V', 'N', 'M', 'S', 'U', 'B', 'F', 'P', 0,
  /* 7256 */ 'V', 'S', 'U', 'B', 'F', 'P', 0,
  /* 7263 */ 'V', 'M', 'A', 'D', 'D', 'F', 'P', 0,
  /* 7271 */ 'V', 'A', 'D', 'D', 'F', 'P', 0,
  /* 7278 */ 'V', 'L', 'O', 'G', 'E', 'F', 'P', 0,
  /* 7286 */ 'V', 'C', 'M', 'P', 'G', 'E', 'F', 'P', 0,
  /* 7295 */ 'V', 'R', 'E', 'F', 'P', 0,
  /* 7301 */ 'V', 'E', 'X', 'P', 'T', 'E', 'F', 'P', 0,
  /* 7310 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'F', 'P', 0,
  /* 7320 */ 'V', 'M', 'I', 'N', 'F', 'P', 0,
  /* 7327 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'F', 'P', 0,
  /* 7336 */ 'V', 'C', 'M', 'P', 'G', 'T', 'F', 'P', 0,
  /* 7345 */ 'V', 'M', 'A', 'X', 'F', 'P', 0,
  /* 7352 */ 'X', 'S', 'C', 'V', 'D', 'P', 'H', 'P', 0,
  /* 7361 */ 'X', 'V', 'C', 'V', 'S', 'P', 'H', 'P', 0,
  /* 7370 */ 'V', 'R', 'F', 'I', 'P', 0,
  /* 7376 */ 'X', 'S', 'R', 'D', 'P', 'I', 'P', 0,
  /* 7384 */ 'X', 'V', 'R', 'D', 'P', 'I', 'P', 0,
  /* 7392 */ 'X', 'V', 'R', 'S', 'P', 'I', 'P', 0,
  /* 7400 */ 'Q', 'V', 'F', 'R', 'I', 'P', 0,
  /* 7407 */ 'B', 'L', 'A', '8', '_', 'N', 'O', 'P', 0,
  /* 7416 */ 'B', 'L', '8', '_', 'N', 'O', 'P', 0,
  /* 7424 */ 'S', 'T', 'O', 'P', 0,
  /* 7429 */ 'F', 'A', 'U', 'L', 'T', 'I', 'N', 'G', '_', 'L', 'O', 'A', 'D', '_', 'O', 'P', 0,
  /* 7446 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'O', 'P', 0,
  /* 7459 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 7469 */ 'X', 'S', 'M', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 7478 */ 'X', 'S', 'S', 'U', 'B', 'Q', 'P', 0,
  /* 7486 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'Q', 'P', 0,
  /* 7496 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 7506 */ 'X', 'S', 'M', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 7515 */ 'X', 'S', 'A', 'D', 'D', 'Q', 'P', 0,
  /* 7523 */ 'X', 'S', 'C', 'V', 'S', 'D', 'Q', 'P', 0,
  /* 7532 */ 'X', 'S', 'C', 'V', 'U', 'D', 'Q', 'P', 0,
  /* 7541 */ 'X', 'S', 'N', 'E', 'G', 'Q', 'P', 0,
  /* 7549 */ 'X', 'S', 'X', 'S', 'I', 'G', 'Q', 'P', 0,
  /* 7558 */ 'X', 'S', 'M', 'U', 'L', 'Q', 'P', 0,
  /* 7566 */ 'X', 'S', 'C', 'P', 'S', 'G', 'N', 'Q', 'P', 0,
  /* 7576 */ 'X', 'S', 'C', 'M', 'P', 'O', 'Q', 'P', 0,
  /* 7585 */ 'X', 'S', 'C', 'V', 'D', 'P', 'Q', 'P', 0,
  /* 7594 */ 'X', 'S', 'I', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 7603 */ 'X', 'S', 'C', 'M', 'P', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 7614 */ 'X', 'S', 'X', 'E', 'X', 'P', 'Q', 'P', 0,
  /* 7623 */ 'X', 'S', 'N', 'A', 'B', 'S', 'Q', 'P', 0,
  /* 7632 */ 'X', 'S', 'A', 'B', 'S', 'Q', 'P', 0,
  /* 7640 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'Q', 'P', 0,
  /* 7649 */ 'X', 'S', 'C', 'M', 'P', 'U', 'Q', 'P', 0,
  /* 7658 */ 'X', 'S', 'D', 'I', 'V', 'Q', 'P', 0,
  /* 7666 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 7677 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 7688 */ 'X', 'S', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 7698 */ 'X', 'V', 'M', 'S', 'U', 'B', 'A', 'S', 'P', 0,
  /* 7708 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 7719 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 7730 */ 'X', 'S', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 7740 */ 'X', 'V', 'M', 'A', 'D', 'D', 'A', 'S', 'P', 0,
  /* 7750 */ 'X', 'S', 'S', 'U', 'B', 'S', 'P', 0,
  /* 7758 */ 'X', 'V', 'S', 'U', 'B', 'S', 'P', 0,
  /* 7766 */ 'X', 'S', 'T', 'S', 'T', 'D', 'C', 'S', 'P', 0,
  /* 7776 */ 'X', 'V', 'T', 'S', 'T', 'D', 'C', 'S', 'P', 0,
  /* 7786 */ 'X', 'S', 'A', 'D', 'D', 'S', 'P', 0,
  /* 7794 */ 'X', 'V', 'A', 'D', 'D', 'S', 'P', 0,
  /* 7802 */ 'X', 'S', 'C', 'V', 'S', 'X', 'D', 'S', 'P', 0,
  /* 7812 */ 'X', 'V', 'C', 'V', 'S', 'X', 'D', 'S', 'P', 0,
  /* 7822 */ 'X', 'S', 'C', 'V', 'U', 'X', 'D', 'S', 'P', 0,
  /* 7832 */ 'X', 'V', 'C', 'V', 'U', 'X', 'D', 'S', 'P', 0,
  /* 7842 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'S', 'P', 0,
  /* 7852 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'S', 'P', 0,
  /* 7862 */ 'X', 'S', 'R', 'E', 'S', 'P', 0,
  /* 7869 */ 'X', 'V', 'R', 'E', 'S', 'P', 0,
  /* 7876 */ 'X', 'S', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'P', 0,
  /* 7887 */ 'X', 'V', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'P', 0,
  /* 7898 */ 'X', 'V', 'N', 'E', 'G', 'S', 'P', 0,
  /* 7906 */ 'X', 'V', 'X', 'S', 'I', 'G', 'S', 'P', 0,
  /* 7915 */ 'X', 'S', 'M', 'U', 'L', 'S', 'P', 0,
  /* 7923 */ 'X', 'V', 'M', 'U', 'L', 'S', 'P', 0,
  /* 7931 */ 'X', 'S', 'N', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 7942 */ 'X', 'V', 'N', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 7953 */ 'X', 'S', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 7963 */ 'X', 'V', 'M', 'S', 'U', 'B', 'M', 'S', 'P', 0,
  /* 7973 */ 'X', 'S', 'N', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 7984 */ 'X', 'V', 'N', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 7995 */ 'X', 'S', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8005 */ 'X', 'V', 'M', 'A', 'D', 'D', 'M', 'S', 'P', 0,
  /* 8015 */ 'X', 'V', 'C', 'P', 'S', 'G', 'N', 'S', 'P', 0,
  /* 8025 */ 'X', 'V', 'M', 'I', 'N', 'S', 'P', 0,
  /* 8033 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'P', 0,
  /* 8042 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'P', 0,
  /* 8051 */ 'X', 'V', 'C', 'V', 'H', 'P', 'S', 'P', 0,
  /* 8060 */ 'X', 'V', 'I', 'E', 'X', 'P', 'S', 'P', 0,
  /* 8069 */ 'X', 'V', 'X', 'E', 'X', 'P', 'S', 'P', 0,
  /* 8078 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'S', 'P', 0,
  /* 8088 */ 'Q', 'V', 'F', 'R', 'S', 'P', 0,
  /* 8095 */ 'X', 'V', 'N', 'A', 'B', 'S', 'S', 'P', 0,
  /* 8104 */ 'X', 'V', 'A', 'B', 'S', 'S', 'P', 0,
  /* 8112 */ 'L', 'X', 'S', 'S', 'P', 0,
  /* 8118 */ 'S', 'T', 'X', 'S', 'S', 'P', 0,
  /* 8125 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'P', 0,
  /* 8135 */ 'X', 'S', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 8144 */ 'X', 'V', 'T', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 8154 */ 'X', 'V', 'S', 'Q', 'R', 'T', 'S', 'P', 0,
  /* 8163 */ 'X', 'S', 'D', 'I', 'V', 'S', 'P', 0,
  /* 8171 */ 'X', 'V', 'T', 'D', 'I', 'V', 'S', 'P', 0,
  /* 8180 */ 'X', 'V', 'D', 'I', 'V', 'S', 'P', 0,
  /* 8188 */ 'X', 'V', 'C', 'V', 'S', 'X', 'W', 'S', 'P', 0,
  /* 8198 */ 'X', 'V', 'C', 'V', 'U', 'X', 'W', 'S', 'P', 0,
  /* 8208 */ 'X', 'V', 'M', 'A', 'X', 'S', 'P', 0,
  /* 8216 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 8231 */ 'X', 'S', 'R', 'Q', 'P', 'X', 'P', 0,
  /* 8239 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'Q', 0,
  /* 8247 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 8256 */ 'E', 'V', 'C', 'M', 'P', 'E', 'Q', 0,
  /* 8264 */ 'V', 'B', 'P', 'E', 'R', 'M', 'Q', 0,
  /* 8272 */ 'X', 'X', 'B', 'R', 'Q', 0,
  /* 8278 */ 'V', 'M', 'U', 'L', '1', '0', 'U', 'Q', 0,
  /* 8287 */ 'V', 'M', 'U', 'L', '1', '0', 'C', 'U', 'Q', 0,
  /* 8297 */ 'V', 'S', 'U', 'B', 'C', 'U', 'Q', 0,
  /* 8305 */ 'V', 'A', 'D', 'D', 'C', 'U', 'Q', 0,
  /* 8313 */ 'V', 'M', 'U', 'L', '1', '0', 'E', 'C', 'U', 'Q', 0,
  /* 8324 */ 'V', 'S', 'U', 'B', 'E', 'C', 'U', 'Q', 0,
  /* 8333 */ 'V', 'A', 'D', 'D', 'E', 'C', 'U', 'Q', 0,
  /* 8342 */ 'V', 'M', 'U', 'L', '1', '0', 'E', 'U', 'Q', 0,
  /* 8352 */ 'M', 'B', 'A', 'R', 0,
  /* 8357 */ 'U', 'p', 'd', 'a', 't', 'e', 'G', 'B', 'R', 0,
  /* 8367 */ 'G', '_', 'B', 'R', 0,
  /* 8372 */ 'M', 'F', 'D', 'C', 'R', 0,
  /* 8378 */ 'R', 'L', 'D', 'C', 'R', 0,
  /* 8384 */ 'M', 'T', 'D', 'C', 'R', 0,
  /* 8390 */ 'M', 'F', 'C', 'R', 0,
  /* 8395 */ 'R', 'L', 'D', 'I', 'C', 'R', 0,
  /* 8402 */ 'M', 'F', 'V', 'S', 'C', 'R', 0,
  /* 8409 */ 'M', 'T', 'V', 'S', 'C', 'R', 0,
  /* 8416 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 0,
  /* 8427 */ 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 0,
  /* 8436 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'g', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 8451 */ 'A', 'D', 'D', 'I', 't', 'l', 's', 'l', 'd', 'L', 'A', 'D', 'D', 'R', 0,
  /* 8466 */ 'G', 'E', 'T', 't', 'l', 's', 'l', 'd', 'A', 'D', 'D', 'R', 0,
  /* 8479 */ 'G', 'E', 'T', 't', 'l', 's', 'A', 'D', 'D', 'R', 0,
  /* 8490 */ 'V', 'N', 'C', 'I', 'P', 'H', 'E', 'R', 0,
  /* 8499 */ 'V', 'C', 'I', 'P', 'H', 'E', 'R', 0,
  /* 8507 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '_', 'E', 'N', 'T', 'E', 'R', 0,
  /* 8532 */ 'B', 'L', 'R', 0,
  /* 8536 */ 'g', 'B', 'C', 'L', 'R', 0,
  /* 8542 */ 'B', 'C', 'C', 'L', 'R', 0,
  /* 8548 */ 'M', 'F', 'L', 'R', 0,
  /* 8553 */ 'M', 'T', 'L', 'R', 0,
  /* 8558 */ 'B', 'D', 'Z', 'L', 'R', 0,
  /* 8564 */ 'B', 'D', 'N', 'Z', 'L', 'R', 0,
  /* 8571 */ 'M', 'o', 'v', 'e', 'P', 'C', 't', 'o', 'L', 'R', 0,
  /* 8582 */ 'M', 'o', 'v', 'e', 'G', 'O', 'T', 't', 'o', 'L', 'R', 0,
  /* 8594 */ 'Q', 'V', 'F', 'M', 'R', 0,
  /* 8600 */ 'V', 'P', 'E', 'R', 'M', 'R', 0,
  /* 8607 */ 'X', 'X', 'P', 'E', 'R', 'M', 'R', 0,
  /* 8615 */ 'X', 'X', 'L', 'O', 'R', 0,
  /* 8621 */ 'X', 'X', 'L', 'N', 'O', 'R', 0,
  /* 8628 */ 'C', 'R', 'N', 'O', 'R', 0,
  /* 8634 */ 'E', 'V', 'N', 'O', 'R', 0,
  /* 8640 */ 'C', 'R', 'O', 'R', 0,
  /* 8645 */ 'E', 'V', 'O', 'R', 0,
  /* 8650 */ 'X', 'X', 'L', 'X', 'O', 'R', 0,
  /* 8657 */ 'V', 'P', 'E', 'R', 'M', 'X', 'O', 'R', 0,
  /* 8666 */ 'C', 'R', 'X', 'O', 'R', 0,
  /* 8672 */ 'E', 'V', 'X', 'O', 'R', 0,
  /* 8678 */ 'G', '_', 'O', 'R', 0,
  /* 8683 */ 'M', 'F', 'S', 'P', 'R', 0,
  /* 8689 */ 'M', 'T', 'S', 'P', 'R', 0,
  /* 8695 */ 'M', 'F', 'S', 'R', 0,
  /* 8700 */ 'M', 'F', 'M', 'S', 'R', 0,
  /* 8706 */ 'M', 'T', 'M', 'S', 'R', 0,
  /* 8712 */ 'M', 'T', 'S', 'R', 0,
  /* 8717 */ 'L', 'V', 'S', 'R', 0,
  /* 8722 */ 'T', 'A', 'I', 'L', 'B', 'C', 'T', 'R', 0,
  /* 8731 */ 'g', 'B', 'C', 'C', 'T', 'R', 0,
  /* 8738 */ 'B', 'C', 'C', 'C', 'T', 'R', 0,
  /* 8745 */ 'M', 'F', 'C', 'T', 'R', 0,
  /* 8751 */ 'M', 'T', 'C', 'T', 'R', 0,
  /* 8757 */ 'Q', 'V', 'F', 'A', 'B', 'S', 0,
  /* 8764 */ 'Q', 'V', 'F', 'N', 'A', 'B', 'S', 0,
  /* 8772 */ 'E', 'V', 'A', 'B', 'S', 0,
  /* 8778 */ 'V', 'S', 'U', 'M', '4', 'S', 'B', 'S', 0,
  /* 8787 */ 'V', 'S', 'U', 'B', 'S', 'B', 'S', 0,
  /* 8795 */ 'V', 'A', 'D', 'D', 'S', 'B', 'S', 0,
  /* 8803 */ 'V', 'S', 'U', 'M', '4', 'U', 'B', 'S', 0,
  /* 8812 */ 'V', 'S', 'U', 'B', 'U', 'B', 'S', 0,
  /* 8820 */ 'V', 'A', 'D', 'D', 'U', 'B', 'S', 0,
  /* 8828 */ 'Q', 'V', 'F', 'S', 'U', 'B', 'S', 0,
  /* 8836 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 'S', 0,
  /* 8845 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 0,
  /* 8855 */ 'Q', 'V', 'F', 'A', 'D', 'D', 'S', 0,
  /* 8863 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 'S', 0,
  /* 8872 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 0,
  /* 8882 */ 'Q', 'V', 'F', 'X', 'X', 'C', 'P', 'N', 'M', 'A', 'D', 'D', 'S', 0,
  /* 8896 */ 'Q', 'V', 'F', 'X', 'X', 'N', 'P', 'M', 'A', 'D', 'D', 'S', 0,
  /* 8909 */ 'Q', 'V', 'F', 'X', 'M', 'A', 'D', 'D', 'S', 0,
  /* 8919 */ 'Q', 'V', 'F', 'X', 'X', 'M', 'A', 'D', 'D', 'S', 0,
  /* 8930 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'S', 0,
  /* 8939 */ 'D', 'C', 'B', 'T', 'D', 'S', 0,
  /* 8946 */ 'D', 'C', 'B', 'T', 'S', 'T', 'D', 'S', 0,
  /* 8955 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 0,
  /* 8966 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'X', 'D', 'S', 0,
  /* 8977 */ 'X', 'V', 'C', 'V', 'S', 'P', 'S', 'X', 'D', 'S', 0,
  /* 8988 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 0,
  /* 8999 */ 'X', 'V', 'C', 'V', 'D', 'P', 'U', 'X', 'D', 'S', 0,
  /* 9010 */ 'X', 'V', 'C', 'V', 'S', 'P', 'U', 'X', 'D', 'S', 0,
  /* 9021 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 9034 */ 'Q', 'V', 'F', 'R', 'E', 'S', 0,
  /* 9041 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 0,
  /* 9052 */ 'M', 'F', 'F', 'S', 0,
  /* 9057 */ 'L', 'F', 'S', 0,
  /* 9061 */ 'M', 'C', 'R', 'F', 'S', 0,
  /* 9067 */ 'S', 'T', 'F', 'S', 0,
  /* 9072 */ 'F', 'N', 'E', 'G', 'S', 0,
  /* 9078 */ 'V', 'S', 'U', 'M', '4', 'S', 'H', 'S', 0,
  /* 9087 */ 'V', 'S', 'U', 'B', 'S', 'H', 'S', 0,
  /* 9095 */ 'V', 'M', 'H', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 9105 */ 'V', 'M', 'H', 'R', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 9116 */ 'V', 'A', 'D', 'D', 'S', 'H', 'S', 0,
  /* 9124 */ 'V', 'M', 'S', 'U', 'M', 'S', 'H', 'S', 0,
  /* 9133 */ 'V', 'S', 'U', 'B', 'U', 'H', 'S', 0,
  /* 9141 */ 'V', 'A', 'D', 'D', 'U', 'H', 'S', 0,
  /* 9149 */ 'V', 'M', 'S', 'U', 'M', 'U', 'H', 'S', 0,
  /* 9158 */ 'S', 'U', 'B', 'I', 'S', 0,
  /* 9164 */ 'A', 'D', 'D', 'I', 'S', 0,
  /* 9170 */ 'L', 'I', 'S', 0,
  /* 9174 */ 'X', 'O', 'R', 'I', 'S', 0,
  /* 9180 */ 'E', 'V', 'S', 'R', 'W', 'I', 'S', 0,
  /* 9188 */ 'F', 'S', 'E', 'L', 'S', 0,
  /* 9194 */ 'A', 'D', 'D', '4', 'T', 'L', 'S', 0,
  /* 9202 */ 'A', 'D', 'D', '8', 'T', 'L', 'S', 0,
  /* 9210 */ 'B', 'L', '8', '_', 'T', 'L', 'S', 0,
  /* 9218 */ 'B', 'L', '_', 'T', 'L', 'S', 0,
  /* 9225 */ 'B', 'L', '8', '_', 'N', 'O', 'P', '_', 'T', 'L', 'S', 0,
  /* 9237 */ 'Q', 'V', 'F', 'M', 'U', 'L', 'S', 0,
  /* 9245 */ 'Q', 'V', 'F', 'X', 'M', 'U', 'L', 'S', 0,
  /* 9254 */ 'F', 'R', 'I', 'M', 'S', 0,
  /* 9260 */ 'F', 'C', 'P', 'S', 'G', 'N', 'S', 0,
  /* 9268 */ 'F', 'R', 'I', 'N', 'S', 0,
  /* 9274 */ 'E', 'V', 'L', 'W', 'H', 'O', 'S', 0,
  /* 9282 */ 'F', 'R', 'I', 'P', 'S', 0,
  /* 9288 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 9305 */ 'F', 'A', 'B', 'S', 'S', 0,
  /* 9311 */ 'F', 'N', 'A', 'B', 'S', 'S', 0,
  /* 9318 */ 'V', 'P', 'K', 'S', 'D', 'S', 'S', 0,
  /* 9326 */ 'V', 'P', 'K', 'S', 'H', 'S', 'S', 0,
  /* 9334 */ 'V', 'P', 'K', 'S', 'W', 'S', 'S', 0,
  /* 9342 */ 'E', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 0,
  /* 9351 */ 'E', 'V', 'C', 'M', 'P', 'L', 'T', 'S', 0,
  /* 9360 */ 'F', 'S', 'Q', 'R', 'T', 'S', 0,
  /* 9367 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'U', 'S', 0,
  /* 9377 */ 'V', 'P', 'K', 'S', 'D', 'U', 'S', 0,
  /* 9385 */ 'V', 'P', 'K', 'U', 'D', 'U', 'S', 0,
  /* 9393 */ 'V', 'P', 'K', 'S', 'H', 'U', 'S', 0,
  /* 9401 */ 'V', 'P', 'K', 'U', 'H', 'U', 'S', 0,
  /* 9409 */ 'F', 'C', 'M', 'P', 'U', 'S', 0,
  /* 9416 */ 'V', 'P', 'K', 'S', 'W', 'U', 'S', 0,
  /* 9424 */ 'V', 'P', 'K', 'U', 'W', 'U', 'S', 0,
  /* 9432 */ 'F', 'D', 'I', 'V', 'S', 0,
  /* 9438 */ 'E', 'V', 'S', 'R', 'W', 'S', 0,
  /* 9445 */ 'M', 'T', 'V', 'S', 'R', 'W', 'S', 0,
  /* 9453 */ 'V', 'S', 'U', 'M', '2', 'S', 'W', 'S', 0,
  /* 9462 */ 'V', 'S', 'U', 'B', 'S', 'W', 'S', 0,
  /* 9470 */ 'V', 'A', 'D', 'D', 'S', 'W', 'S', 0,
  /* 9478 */ 'V', 'S', 'U', 'M', 'S', 'W', 'S', 0,
  /* 9486 */ 'V', 'S', 'U', 'B', 'U', 'W', 'S', 0,
  /* 9494 */ 'V', 'A', 'D', 'D', 'U', 'W', 'S', 0,
  /* 9502 */ 'E', 'V', 'D', 'I', 'V', 'W', 'S', 0,
  /* 9510 */ 'X', 'S', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 0,
  /* 9521 */ 'X', 'V', 'C', 'V', 'D', 'P', 'S', 'X', 'W', 'S', 0,
  /* 9532 */ 'X', 'V', 'C', 'V', 'S', 'P', 'S', 'X', 'W', 'S', 0,
  /* 9543 */ 'X', 'S', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 0,
  /* 9554 */ 'X', 'V', 'C', 'V', 'D', 'P', 'U', 'X', 'W', 'S', 0,
  /* 9565 */ 'X', 'V', 'C', 'V', 'S', 'P', 'U', 'X', 'W', 'S', 0,
  /* 9576 */ 'V', 'C', 'T', 'S', 'X', 'S', 0,
  /* 9583 */ 'V', 'C', 'T', 'U', 'X', 'S', 0,
  /* 9590 */ 'F', 'R', 'I', 'Z', 'S', 0,
  /* 9596 */ 'L', 'D', 'A', 'T', 0,
  /* 9601 */ 'S', 'T', 'D', 'A', 'T', 0,
  /* 9607 */ 'E', 'V', 'L', 'H', 'H', 'E', 'S', 'P', 'L', 'A', 'T', 0,
  /* 9619 */ 'E', 'V', 'L', 'W', 'H', 'S', 'P', 'L', 'A', 'T', 0,
  /* 9630 */ 'E', 'V', 'L', 'H', 'H', 'O', 'S', 'S', 'P', 'L', 'A', 'T', 0,
  /* 9643 */ 'E', 'V', 'L', 'H', 'H', 'O', 'U', 'S', 'P', 'L', 'A', 'T', 0,
  /* 9656 */ 'E', 'V', 'L', 'W', 'W', 'S', 'P', 'L', 'A', 'T', 0,
  /* 9667 */ 'L', 'W', 'A', 'T', 0,
  /* 9672 */ 'S', 'T', 'W', 'A', 'T', 0,
  /* 9678 */ 'D', 'C', 'B', 'T', 0,
  /* 9683 */ 'I', 'C', 'B', 'T', 0,
  /* 9688 */ 'D', 'C', 'B', 'T', 'C', 'T', 0,
  /* 9695 */ 'D', 'C', 'B', 'T', 'S', 'T', 'C', 'T', 0,
  /* 9704 */ 'P', 'A', 'T', 'C', 'H', 'A', 'B', 'L', 'E', '_', 'R', 'E', 'T', 0,
  /* 9718 */ 'T', 'C', 'H', 'E', 'C', 'K', '_', 'R', 'E', 'T', 0,
  /* 9729 */ 'C', 'R', '6', 'S', 'E', 'T', 0,
  /* 9736 */ 'D', 'Y', 'N', 'A', 'R', 'E', 'A', 'O', 'F', 'F', 'S', 'E', 'T', 0,
  /* 9750 */ 'C', 'R', '6', 'U', 'N', 'S', 'E', 'T', 0,
  /* 9759 */ 'C', 'R', 'U', 'N', 'S', 'E', 'T', 0,
  /* 9767 */ 'C', 'R', 'S', 'E', 'T', 0,
  /* 9773 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 0,
  /* 9782 */ 'W', 'A', 'I', 'T', 0,
  /* 9787 */ 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 9801 */ 'S', 'P', 'I', 'L', 'L', '_', 'C', 'R', 'B', 'I', 'T', 0,
  /* 9813 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'E', 'Q', '_', 'B', 'I', 'T', 0,
  /* 9828 */ 'A', 'N', 'D', 'I', 'o', '_', '1', '_', 'G', 'T', '_', 'B', 'I', 'T', 0,
  /* 9843 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 0,
  /* 9852 */ 'S', 'T', 'A', 'T', 'E', 'P', 'O', 'I', 'N', 'T', 0,
  /* 9863 */ 'P', 'A', 'T', 'C', 'H', 'P', 'O', 'I', 'N', 'T', 0,
  /* 9874 */ 'P', 'P', 'C', '3', '2', 'G', 'O', 'T', 0,
  /* 9883 */ 'P', 'P', 'C', '3', '2', 'P', 'I', 'C', 'G', 'O', 'T', 0,
  /* 9895 */ 'L', 'D', 't', 'o', 'c', 'C', 'P', 'T', 0,
  /* 9904 */ 'T', 'R', 'E', 'C', 'H', 'K', 'P', 'T', 0,
  /* 9913 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 9928 */ 'T', 'A', 'B', 'O', 'R', 'T', 0,
  /* 9935 */ 'C', 'P', '_', 'A', 'B', 'O', 'R', 'T', 0,
  /* 9944 */ 'F', 'S', 'Q', 'R', 'T', 0,
  /* 9950 */ 'V', 'N', 'C', 'I', 'P', 'H', 'E', 'R', 'L', 'A', 'S', 'T', 0,
  /* 9963 */ 'V', 'C', 'I', 'P', 'H', 'E', 'R', 'L', 'A', 'S', 'T', 0,
  /* 9975 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '_', 'L', 'A', 'S', 'T', 0,
  /* 9989 */ 'D', 'C', 'B', 'S', 'T', 0,
  /* 9995 */ 'D', 'S', 'T', 0,
  /* 9999 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', '_', 'F', 'I', 'R', 'S', 'T', 0,
  /* 10013 */ 'D', 'C', 'B', 'T', 'S', 'T', 0,
  /* 10020 */ 'D', 'S', 'T', 'S', 'T', 0,
  /* 10026 */ 'D', 'C', 'B', 'T', 'T', 0,
  /* 10032 */ 'D', 'S', 'T', 'T', 0,
  /* 10037 */ 'D', 'C', 'B', 'T', 'S', 'T', 'T', 0,
  /* 10045 */ 'D', 'S', 'T', 'S', 'T', 'T', 0,
  /* 10052 */ 'L', 'H', 'A', 'U', 0,
  /* 10057 */ 'S', 'T', 'B', 'U', 0,
  /* 10062 */ 'L', 'F', 'D', 'U', 0,
  /* 10067 */ 'S', 'T', 'F', 'D', 'U', 0,
  /* 10073 */ 'M', 'U', 'L', 'H', 'D', 'U', 0,
  /* 10080 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'U', 0,
  /* 10089 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'U', 0,
  /* 10098 */ 'L', 'D', 'U', 0,
  /* 10102 */ 'S', 'T', 'D', 'U', 0,
  /* 10107 */ 'D', 'I', 'V', 'D', 'U', 0,
  /* 10113 */ 'D', 'I', 'V', 'D', 'E', 'U', 0,
  /* 10120 */ 'D', 'I', 'V', 'W', 'E', 'U', 0,
  /* 10127 */ 'S', 'T', 'H', 'U', 0,
  /* 10132 */ 'E', 'V', 'S', 'R', 'W', 'I', 'U', 0,
  /* 10140 */ 'E', 'V', 'L', 'W', 'H', 'O', 'U', 0,
  /* 10148 */ 'L', 'F', 'S', 'U', 0,
  /* 10153 */ 'S', 'T', 'F', 'S', 'U', 0,
  /* 10159 */ 'E', 'V', 'C', 'M', 'P', 'G', 'T', 'U', 0,
  /* 10168 */ 'E', 'V', 'C', 'M', 'P', 'L', 'T', 'U', 0,
  /* 10177 */ 'M', 'U', 'L', 'H', 'W', 'U', 0,
  /* 10184 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'U', 0,
  /* 10193 */ 'E', 'V', 'S', 'R', 'W', 'U', 0,
  /* 10200 */ 'S', 'T', 'W', 'U', 0,
  /* 10205 */ 'E', 'V', 'D', 'I', 'V', 'W', 'U', 0,
  /* 10213 */ 'L', 'B', 'Z', 'U', 0,
  /* 10218 */ 'L', 'H', 'Z', 'U', 0,
  /* 10223 */ 'L', 'W', 'Z', 'U', 0,
  /* 10228 */ 'F', 'D', 'I', 'V', 0,
  /* 10233 */ 'V', 'S', 'L', 'V', 0,
  /* 10238 */ 'X', 'X', 'L', 'E', 'Q', 'V', 0,
  /* 10245 */ 'C', 'R', 'E', 'Q', 'V', 0,
  /* 10251 */ 'E', 'V', 'E', 'Q', 'V', 0,
  /* 10257 */ 'V', 'S', 'R', 'V', 0,
  /* 10262 */ 'L', 'X', 'V', 0,
  /* 10266 */ 'S', 'T', 'X', 'V', 0,
  /* 10271 */ 'V', 'E', 'X', 'T', 'S', 'B', '2', 'W', 0,
  /* 10280 */ 'V', 'E', 'X', 'T', 'S', 'H', '2', 'W', 0,
  /* 10289 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 'A', 'W', 0,
  /* 10301 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 'A', 'W', 0,
  /* 10313 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 'A', 'W', 0,
  /* 10325 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 'A', 'W', 0,
  /* 10337 */ 'E', 'V', 'A', 'D', 'D', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10349 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10361 */ 'E', 'V', 'S', 'U', 'B', 'F', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10374 */ 'E', 'V', 'M', 'W', 'L', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10386 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10398 */ 'E', 'V', 'A', 'D', 'D', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10410 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10422 */ 'E', 'V', 'S', 'U', 'B', 'F', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10435 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10447 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 'A', 'W', 0,
  /* 10459 */ 'E', 'V', 'A', 'D', 'D', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 10471 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 10483 */ 'E', 'V', 'S', 'U', 'B', 'F', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 10496 */ 'E', 'V', 'M', 'W', 'L', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 10508 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'I', 'A', 'A', 'W', 0,
  /* 10520 */ 'E', 'V', 'A', 'D', 'D', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 10532 */ 'E', 'V', 'M', 'H', 'E', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 10544 */ 'E', 'V', 'S', 'U', 'B', 'F', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 10557 */ 'E', 'V', 'M', 'W', 'L', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 10569 */ 'E', 'V', 'M', 'H', 'O', 'U', 'S', 'I', 'A', 'A', 'W', 0,
  /* 10581 */ 'V', 'S', 'H', 'A', 'S', 'I', 'G', 'M', 'A', 'W', 0,
  /* 10592 */ 'V', 'S', 'R', 'A', 'W', 0,
  /* 10598 */ 'V', 'P', 'R', 'T', 'Y', 'B', 'W', 0,
  /* 10606 */ 'E', 'V', 'A', 'D', 'D', 'W', 0,
  /* 10613 */ 'E', 'V', 'L', 'D', 'W', 0,
  /* 10619 */ 'E', 'V', 'R', 'N', 'D', 'W', 0,
  /* 10626 */ 'E', 'V', 'S', 'T', 'D', 'W', 0,
  /* 10633 */ 'V', 'M', 'R', 'G', 'E', 'W', 0,
  /* 10640 */ 'V', 'C', 'M', 'P', 'N', 'E', 'W', 0,
  /* 10648 */ 'E', 'V', 'S', 'U', 'B', 'F', 'W', 0,
  /* 10656 */ 'E', 'V', 'S', 'U', 'B', 'I', 'F', 'W', 0,
  /* 10665 */ 'V', 'N', 'E', 'G', 'W', 0,
  /* 10671 */ 'V', 'M', 'R', 'G', 'H', 'W', 0,
  /* 10678 */ 'X', 'X', 'M', 'R', 'G', 'H', 'W', 0,
  /* 10686 */ 'M', 'U', 'L', 'H', 'W', 0,
  /* 10692 */ 'E', 'V', 'A', 'D', 'D', 'I', 'W', 0,
  /* 10700 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 0,
  /* 10708 */ 'V', 'M', 'R', 'G', 'L', 'W', 0,
  /* 10715 */ 'X', 'X', 'M', 'R', 'G', 'L', 'W', 0,
  /* 10723 */ 'M', 'U', 'L', 'L', 'W', 0,
  /* 10729 */ 'C', 'M', 'P', 'L', 'W', 0,
  /* 10735 */ 'E', 'V', 'R', 'L', 'W', 0,
  /* 10741 */ 'E', 'V', 'S', 'L', 'W', 0,
  /* 10747 */ 'L', 'M', 'W', 0,
  /* 10751 */ 'S', 'T', 'M', 'W', 0,
  /* 10756 */ 'V', 'P', 'M', 'S', 'U', 'M', 'W', 0,
  /* 10764 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'F', 'A', 'N', 'W', 0,
  /* 10776 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'F', 'A', 'N', 'W', 0,
  /* 10788 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'F', 'A', 'N', 'W', 0,
  /* 10800 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'F', 'A', 'N', 'W', 0,
  /* 10812 */ 'E', 'V', 'M', 'H', 'E', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 10824 */ 'E', 'V', 'M', 'W', 'L', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 10836 */ 'E', 'V', 'M', 'H', 'O', 'S', 'M', 'I', 'A', 'N', 'W', 0,
  /* 10848 */ 'E', 'V', 'M', 'H', 'E', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 10860 */ 'E', 'V', 'M', 'W', 'L', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 10872 */ 'E', 'V', 'M', 'H', 'O', 'U', 'M', 'I', 'A', 'N', 'W', 0,
  /* 10884 */ 'E', 'V', 'M', 'H', 'E', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 10896 */ 'E', 'V', 'M', 'W', 'L', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 10908 */ 'E', 'V', 'M', 'H', 'O', 'S', 'S', 'I', 'A', 'N', 'W', 0,
  /* 10920 */ 'E', 'V', 'M', 'H', 'E', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 10932 */ 'E', 'V', 'M', 'W', 'L', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 10944 */ 'E', 'V', 'M', 'H', 'O', 'U', 'S', 'I', 'A', 'N', 'W', 0,
  /* 10956 */ 'V', 'M', 'R', 'G', 'O', 'W', 0,
  /* 10963 */ 'C', 'M', 'P', 'W', 0,
  /* 10968 */ 'X', 'X', 'B', 'R', 'W', 0,
  /* 10974 */ 'V', 'S', 'R', 'W', 0,
  /* 10979 */ 'V', 'M', 'U', 'L', 'E', 'S', 'W', 0,
  /* 10987 */ 'V', 'A', 'V', 'G', 'S', 'W', 0,
  /* 10994 */ 'V', 'U', 'P', 'K', 'H', 'S', 'W', 0,
  /* 11002 */ 'V', 'S', 'P', 'L', 'T', 'I', 'S', 'W', 0,
  /* 11011 */ 'V', 'U', 'P', 'K', 'L', 'S', 'W', 0,
  /* 11019 */ 'E', 'V', 'C', 'N', 'T', 'L', 'S', 'W', 0,
  /* 11028 */ 'V', 'M', 'I', 'N', 'S', 'W', 0,
  /* 11035 */ 'V', 'M', 'U', 'L', 'O', 'S', 'W', 0,
  /* 11043 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'W', 0,
  /* 11052 */ 'E', 'X', 'T', 'S', 'W', 0,
  /* 11058 */ 'V', 'M', 'A', 'X', 'S', 'W', 0,
  /* 11065 */ 'V', 'S', 'P', 'L', 'T', 'W', 0,
  /* 11072 */ 'X', 'X', 'S', 'P', 'L', 'T', 'W', 0,
  /* 11080 */ 'V', 'P', 'O', 'P', 'C', 'N', 'T', 'W', 0,
  /* 11089 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'W', 0,
  /* 11098 */ 'X', 'X', 'I', 'N', 'S', 'E', 'R', 'T', 'W', 0,
  /* 11108 */ 'S', 'T', 'W', 0,
  /* 11112 */ 'V', 'S', 'U', 'B', 'C', 'U', 'W', 0,
  /* 11120 */ 'V', 'A', 'D', 'D', 'C', 'U', 'W', 0,
  /* 11128 */ 'V', 'M', 'U', 'L', 'E', 'U', 'W', 0,
  /* 11136 */ 'V', 'A', 'V', 'G', 'U', 'W', 0,
  /* 11143 */ 'V', 'M', 'I', 'N', 'U', 'W', 0,
  /* 11150 */ 'V', 'M', 'U', 'L', 'O', 'U', 'W', 0,
  /* 11158 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'W', 0,
  /* 11167 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'W', 0,
  /* 11178 */ 'X', 'X', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'U', 'W', 0,
  /* 11190 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'W', 0,
  /* 11199 */ 'V', 'M', 'A', 'X', 'U', 'W', 0,
  /* 11206 */ 'D', 'I', 'V', 'W', 0,
  /* 11211 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'W', 0,
  /* 11220 */ 'V', 'C', 'L', 'Z', 'W', 0,
  /* 11226 */ 'E', 'V', 'C', 'N', 'T', 'L', 'Z', 'W', 0,
  /* 11235 */ 'V', 'C', 'T', 'Z', 'W', 0,
  /* 11241 */ 'C', 'N', 'T', 'T', 'Z', 'W', 0,
  /* 11248 */ 'L', 'X', 'V', 'D', '2', 'X', 0,
  /* 11255 */ 'S', 'T', 'X', 'V', 'D', '2', 'X', 0,
  /* 11263 */ 'L', 'X', 'V', 'W', '4', 'X', 0,
  /* 11270 */ 'S', 'T', 'X', 'V', 'W', '4', 'X', 0,
  /* 11278 */ 'L', 'X', 'V', 'B', '1', '6', 'X', 0,
  /* 11286 */ 'S', 'T', 'X', 'V', 'B', '1', '6', 'X', 0,
  /* 11295 */ 'L', 'X', 'V', 'H', '8', 'X', 0,
  /* 11302 */ 'S', 'T', 'X', 'V', 'H', '8', 'X', 0,
  /* 11310 */ 'L', 'H', 'A', 'X', 0,
  /* 11315 */ 'T', 'L', 'B', 'I', 'V', 'A', 'X', 0,
  /* 11323 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'A', 'X', 0,
  /* 11332 */ 'L', 'X', 'S', 'I', 'W', 'A', 'X', 0,
  /* 11340 */ 'L', 'W', 'A', 'X', 0,
  /* 11345 */ 'L', 'V', 'E', 'B', 'X', 0,
  /* 11351 */ 'S', 'T', 'V', 'E', 'B', 'X', 0,
  /* 11358 */ 'S', 'T', 'X', 'S', 'I', 'B', 'X', 0,
  /* 11366 */ 'S', 'T', 'B', 'X', 0,
  /* 11371 */ 'S', 'T', 'B', 'C', 'X', 0,
  /* 11377 */ 'S', 'T', 'D', 'C', 'X', 0,
  /* 11383 */ 'S', 'T', 'H', 'C', 'X', 0,
  /* 11389 */ 'S', 'T', 'W', 'C', 'X', 0,
  /* 11395 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'X', 0,
  /* 11403 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'X', 0,
  /* 11412 */ 'E', 'V', 'L', 'D', 'D', 'X', 0,
  /* 11419 */ 'E', 'V', 'S', 'T', 'D', 'D', 'X', 0,
  /* 11427 */ 'Q', 'V', 'L', 'F', 'D', 'X', 0,
  /* 11434 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 0,
  /* 11442 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'D', 'X', 0,
  /* 11451 */ 'Q', 'V', 'L', 'P', 'C', 'R', 'D', 'X', 0,
  /* 11460 */ 'L', 'X', 'S', 'D', 'X', 0,
  /* 11466 */ 'S', 'T', 'X', 'S', 'D', 'X', 0,
  /* 11473 */ 'S', 'T', 'D', 'X', 0,
  /* 11478 */ 'E', 'V', 'L', 'W', 'H', 'E', 'X', 0,
  /* 11486 */ 'E', 'V', 'S', 'T', 'W', 'H', 'E', 'X', 0,
  /* 11495 */ 'E', 'V', 'S', 'T', 'W', 'W', 'E', 'X', 0,
  /* 11504 */ 'E', 'V', 'L', 'D', 'H', 'X', 0,
  /* 11511 */ 'E', 'V', 'S', 'T', 'D', 'H', 'X', 0,
  /* 11519 */ 'L', 'V', 'E', 'H', 'X', 0,
  /* 11525 */ 'S', 'T', 'V', 'E', 'H', 'X', 0,
  /* 11532 */ 'S', 'T', 'X', 'S', 'I', 'H', 'X', 0,
  /* 11540 */ 'S', 'T', 'H', 'X', 0,
  /* 11545 */ 'S', 'T', 'B', 'C', 'I', 'X', 0,
  /* 11552 */ 'L', 'D', 'C', 'I', 'X', 0,
  /* 11558 */ 'S', 'T', 'D', 'C', 'I', 'X', 0,
  /* 11565 */ 'S', 'T', 'H', 'C', 'I', 'X', 0,
  /* 11572 */ 'S', 'T', 'W', 'C', 'I', 'X', 0,
  /* 11579 */ 'L', 'B', 'Z', 'C', 'I', 'X', 0,
  /* 11586 */ 'L', 'H', 'Z', 'C', 'I', 'X', 0,
  /* 11593 */ 'L', 'W', 'Z', 'C', 'I', 'X', 0,
  /* 11600 */ 'X', 'S', 'R', 'Q', 'P', 'I', 'X', 0,
  /* 11608 */ 'V', 'E', 'X', 'T', 'U', 'B', 'L', 'X', 0,
  /* 11617 */ 'V', 'E', 'X', 'T', 'U', 'H', 'L', 'X', 0,
  /* 11626 */ 'V', 'E', 'X', 'T', 'U', 'W', 'L', 'X', 0,
  /* 11635 */ 'L', 'D', 'M', 'X', 0,
  /* 11640 */ 'V', 'S', 'B', 'O', 'X', 0,
  /* 11646 */ 'E', 'V', 'S', 'T', 'W', 'H', 'O', 'X', 0,
  /* 11655 */ 'E', 'V', 'S', 'T', 'W', 'W', 'O', 'X', 0,
  /* 11664 */ 'V', 'U', 'P', 'K', 'H', 'P', 'X', 0,
  /* 11672 */ 'V', 'P', 'K', 'P', 'X', 0,
  /* 11678 */ 'V', 'U', 'P', 'K', 'L', 'P', 'X', 0,
  /* 11686 */ 'L', 'X', 'S', 'S', 'P', 'X', 0,
  /* 11693 */ 'S', 'T', 'X', 'S', 'S', 'P', 'X', 0,
  /* 11701 */ 'L', 'B', 'A', 'R', 'X', 0,
  /* 11707 */ 'L', 'D', 'A', 'R', 'X', 0,
  /* 11713 */ 'L', 'H', 'A', 'R', 'X', 0,
  /* 11719 */ 'L', 'W', 'A', 'R', 'X', 0,
  /* 11725 */ 'L', 'D', 'B', 'R', 'X', 0,
  /* 11731 */ 'S', 'T', 'D', 'B', 'R', 'X', 0,
  /* 11738 */ 'L', 'H', 'B', 'R', 'X', 0,
  /* 11744 */ 'S', 'T', 'H', 'B', 'R', 'X', 0,
  /* 11751 */ 'V', 'E', 'X', 'T', 'U', 'B', 'R', 'X', 0,
  /* 11760 */ 'L', 'W', 'B', 'R', 'X', 0,
  /* 11766 */ 'S', 'T', 'W', 'B', 'R', 'X', 0,
  /* 11773 */ 'V', 'E', 'X', 'T', 'U', 'H', 'R', 'X', 0,
  /* 11782 */ 'V', 'E', 'X', 'T', 'U', 'W', 'R', 'X', 0,
  /* 11791 */ 'M', 'C', 'R', 'X', 'R', 'X', 0,
  /* 11798 */ 'T', 'L', 'B', 'S', 'X', 0,
  /* 11804 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 0,
  /* 11812 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 0,
  /* 11821 */ 'L', 'X', 'V', 'D', 'S', 'X', 0,
  /* 11828 */ 'V', 'C', 'F', 'S', 'X', 0,
  /* 11834 */ 'Q', 'V', 'L', 'F', 'S', 'X', 0,
  /* 11841 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 0,
  /* 11849 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'S', 'X', 0,
  /* 11858 */ 'E', 'V', 'L', 'W', 'H', 'O', 'S', 'X', 0,
  /* 11867 */ 'Q', 'V', 'L', 'P', 'C', 'R', 'S', 'X', 0,
  /* 11876 */ 'L', 'X', 'V', 'W', 'S', 'X', 0,
  /* 11883 */ 'E', 'V', 'L', 'H', 'H', 'E', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 11896 */ 'E', 'V', 'L', 'W', 'H', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 11908 */ 'E', 'V', 'L', 'H', 'H', 'O', 'S', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 11922 */ 'E', 'V', 'L', 'H', 'H', 'O', 'U', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 11936 */ 'E', 'V', 'L', 'W', 'W', 'S', 'P', 'L', 'A', 'T', 'X', 0,
  /* 11948 */ 'L', 'H', 'A', 'U', 'X', 0,
  /* 11954 */ 'L', 'W', 'A', 'U', 'X', 0,
  /* 11960 */ 'S', 'T', 'B', 'U', 'X', 0,
  /* 11966 */ 'Q', 'V', 'L', 'F', 'C', 'D', 'U', 'X', 0,
  /* 11975 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'D', 'U', 'X', 0,
  /* 11985 */ 'Q', 'V', 'L', 'F', 'D', 'U', 'X', 0,
  /* 11993 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'U', 'X', 0,
  /* 12002 */ 'L', 'D', 'U', 'X', 0,
  /* 12007 */ 'S', 'T', 'D', 'U', 'X', 0,
  /* 12013 */ 'V', 'C', 'F', 'U', 'X', 0,
  /* 12019 */ 'S', 'T', 'H', 'U', 'X', 0,
  /* 12025 */ 'E', 'V', 'L', 'W', 'H', 'O', 'U', 'X', 0,
  /* 12034 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'U', 'X', 0,
  /* 12043 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'U', 'X', 0,
  /* 12053 */ 'Q', 'V', 'L', 'F', 'S', 'U', 'X', 0,
  /* 12061 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 0,
  /* 12070 */ 'S', 'T', 'W', 'U', 'X', 0,
  /* 12076 */ 'L', 'B', 'Z', 'U', 'X', 0,
  /* 12082 */ 'L', 'H', 'Z', 'U', 'X', 0,
  /* 12088 */ 'L', 'W', 'Z', 'U', 'X', 0,
  /* 12094 */ 'L', 'V', 'X', 0,
  /* 12098 */ 'S', 'T', 'V', 'X', 0,
  /* 12103 */ 'L', 'X', 'V', 'X', 0,
  /* 12108 */ 'S', 'T', 'X', 'V', 'X', 0,
  /* 12114 */ 'E', 'V', 'L', 'D', 'W', 'X', 0,
  /* 12121 */ 'E', 'V', 'S', 'T', 'D', 'W', 'X', 0,
  /* 12129 */ 'L', 'V', 'E', 'W', 'X', 0,
  /* 12135 */ 'S', 'T', 'V', 'E', 'W', 'X', 0,
  /* 12142 */ 'Q', 'V', 'S', 'T', 'F', 'I', 'W', 'X', 0,
  /* 12151 */ 'S', 'T', 'X', 'S', 'I', 'W', 'X', 0,
  /* 12159 */ 'S', 'T', 'W', 'X', 0,
  /* 12164 */ 'L', 'X', 'S', 'I', 'B', 'Z', 'X', 0,
  /* 12172 */ 'L', 'B', 'Z', 'X', 0,
  /* 12177 */ 'L', 'X', 'S', 'I', 'H', 'Z', 'X', 0,
  /* 12185 */ 'L', 'H', 'Z', 'X', 0,
  /* 12190 */ 'Q', 'V', 'L', 'F', 'I', 'W', 'Z', 'X', 0,
  /* 12199 */ 'L', 'X', 'S', 'I', 'W', 'Z', 'X', 0,
  /* 12207 */ 'L', 'W', 'Z', 'X', 0,
  /* 12212 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', 0,
  /* 12220 */ 'D', 'C', 'B', 'Z', 0,
  /* 12225 */ 'L', 'B', 'Z', 0,
  /* 12229 */ 'B', 'D', 'Z', 0,
  /* 12233 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'Z', 0,
  /* 12242 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'S', 'D', 'Z', 0,
  /* 12252 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'U', 'D', 'Z', 0,
  /* 12262 */ 'L', 'H', 'Z', 0,
  /* 12266 */ 'V', 'R', 'F', 'I', 'Z', 0,
  /* 12272 */ 'X', 'S', 'R', 'D', 'P', 'I', 'Z', 0,
  /* 12280 */ 'X', 'V', 'R', 'D', 'P', 'I', 'Z', 0,
  /* 12288 */ 'X', 'V', 'R', 'S', 'P', 'I', 'Z', 0,
  /* 12296 */ 'Q', 'V', 'F', 'R', 'I', 'Z', 0,
  /* 12303 */ 'B', 'D', 'N', 'Z', 0,
  /* 12308 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'U', 'Z', 0,
  /* 12318 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'U', 'Z', 0,
  /* 12328 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'W', 'Z', 0,
  /* 12337 */ 'L', 'W', 'Z', 0,
  /* 12341 */ 'M', 'F', 'V', 'S', 'R', 'W', 'Z', 0,
  /* 12349 */ 'M', 'T', 'V', 'S', 'R', 'W', 'Z', 0,
  /* 12357 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'S', 'W', 'Z', 0,
  /* 12367 */ 'X', 'S', 'C', 'V', 'Q', 'P', 'U', 'W', 'Z', 0,
  /* 12377 */ 'A', 'D', 'D', '8', 'T', 'L', 'S', '_', 0,
  /* 12386 */ 'B', 'L', '8', '_', 'T', 'L', 'S', '_', 0,
  /* 12395 */ 'Q', 'V', 'F', 'C', 'F', 'I', 'D', 'b', 0,
  /* 12404 */ 'Q', 'V', 'F', 'C', 'T', 'I', 'D', 'b', 0,
  /* 12413 */ 'M', 'T', 'F', 'S', 'F', 'b', 0,
  /* 12420 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 'b', 0,
  /* 12430 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 'b', 0,
  /* 12441 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 'b', 0,
  /* 12453 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 0,
  /* 12461 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 'b', 0,
  /* 12472 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 'b', 0,
  /* 12482 */ 'Q', 'V', 'F', 'M', 'R', 'b', 0,
  /* 12489 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 'b', 0,
  /* 12499 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 'b', 0,
  /* 12509 */ 'Q', 'V', 'L', 'F', 'D', 'X', 'b', 0,
  /* 12517 */ 'Q', 'V', 'S', 'T', 'F', 'D', 'X', 'b', 0,
  /* 12526 */ 'Q', 'V', 'L', 'F', 'S', 'X', 'b', 0,
  /* 12534 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 'b', 0,
  /* 12543 */ 'L', 'D', 't', 'o', 'c', 0,
  /* 12549 */ 'L', 'W', 'Z', 't', 'o', 'c', 0,
  /* 12556 */ 'B', 'C', 'T', 'R', 'L', '8', '_', 'L', 'D', 'i', 'n', 't', 'o', '_', 't', 'o', 'c', 0,
  /* 12574 */ 'X', 'X', 'L', 'O', 'R', 'f', 0,
  /* 12581 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'a', 'i', 0,
  /* 12592 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', 0,
  /* 12603 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', 0,
  /* 12614 */ 'B', 'D', 'Z', 'L', 'A', 'm', 0,
  /* 12621 */ 'B', 'D', 'N', 'Z', 'L', 'A', 'm', 0,
  /* 12629 */ 'B', 'D', 'Z', 'A', 'm', 0,
  /* 12635 */ 'B', 'D', 'N', 'Z', 'A', 'm', 0,
  /* 12642 */ 'B', 'D', 'Z', 'L', 'R', 'L', 'm', 0,
  /* 12650 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 'm', 0,
  /* 12659 */ 'B', 'D', 'Z', 'L', 'm', 0,
  /* 12665 */ 'B', 'D', 'N', 'Z', 'L', 'm', 0,
  /* 12672 */ 'B', 'D', 'Z', 'L', 'R', 'm', 0,
  /* 12679 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'm', 0,
  /* 12687 */ 'B', 'D', 'Z', 'm', 0,
  /* 12692 */ 'B', 'D', 'N', 'Z', 'm', 0,
  /* 12698 */ 'R', 'L', 'W', 'I', 'M', 'I', 'b', 'm', 0,
  /* 12707 */ 'R', 'L', 'W', 'I', 'N', 'M', 'b', 'm', 0,
  /* 12716 */ 'R', 'L', 'W', 'N', 'M', 'b', 'm', 0,
  /* 12724 */ 'R', 'L', 'W', 'I', 'M', 'I', 'o', 'b', 'm', 0,
  /* 12734 */ 'R', 'L', 'W', 'I', 'N', 'M', 'o', 'b', 'm', 0,
  /* 12744 */ 'R', 'L', 'W', 'N', 'M', 'o', 'b', 'm', 0,
  /* 12753 */ 'B', 'C', 'C', 'T', 'R', 'L', '8', 'n', 0,
  /* 12762 */ 'B', 'C', 'C', 'T', 'R', '8', 'n', 0,
  /* 12770 */ 'B', 'C', 'n', 0,
  /* 12774 */ 'B', 'C', 'L', 'n', 0,
  /* 12779 */ 'B', 'C', 'L', 'R', 'L', 'n', 0,
  /* 12786 */ 'B', 'C', 'C', 'T', 'R', 'L', 'n', 0,
  /* 12794 */ 'B', 'C', 'L', 'R', 'n', 0,
  /* 12800 */ 'B', 'C', 'C', 'T', 'R', 'n', 0,
  /* 12807 */ 'E', 'X', 'T', 'S', 'W', '_', '3', '2', '_', '6', '4', 'o', 0,
  /* 12820 */ 'A', 'D', 'D', '4', 'o', 0,
  /* 12826 */ 'E', 'X', 'T', 'S', 'B', '8', 'o', 0,
  /* 12834 */ 'A', 'D', 'D', 'C', '8', 'o', 0,
  /* 12841 */ 'A', 'N', 'D', 'C', '8', 'o', 0,
  /* 12848 */ 'S', 'U', 'B', 'F', 'C', '8', 'o', 0,
  /* 12856 */ 'O', 'R', 'C', '8', 'o', 0,
  /* 12862 */ 'A', 'D', 'D', '8', 'o', 0,
  /* 12868 */ 'N', 'A', 'N', 'D', '8', 'o', 0,
  /* 12875 */ 'A', 'D', 'D', 'E', '8', 'o', 0,
  /* 12882 */ 'S', 'U', 'B', 'F', 'E', '8', 'o', 0,
  /* 12890 */ 'A', 'D', 'D', 'M', 'E', '8', 'o', 0,
  /* 12898 */ 'S', 'U', 'B', 'F', 'M', 'E', '8', 'o', 0,
  /* 12907 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', '8', 'o', 0,
  /* 12918 */ 'A', 'D', 'D', 'Z', 'E', '8', 'o', 0,
  /* 12926 */ 'S', 'U', 'B', 'F', 'Z', 'E', '8', 'o', 0,
  /* 12935 */ 'S', 'U', 'B', 'F', '8', 'o', 0,
  /* 12942 */ 'N', 'E', 'G', '8', 'o', 0,
  /* 12948 */ 'E', 'X', 'T', 'S', 'H', '8', 'o', 0,
  /* 12956 */ 'R', 'L', 'W', 'I', 'M', 'I', '8', 'o', 0,
  /* 12965 */ 'R', 'L', 'W', 'I', 'N', 'M', '8', 'o', 0,
  /* 12974 */ 'R', 'L', 'W', 'N', 'M', '8', 'o', 0,
  /* 12982 */ 'N', 'O', 'R', '8', 'o', 0,
  /* 12988 */ 'X', 'O', 'R', '8', 'o', 0,
  /* 12994 */ 'E', 'Q', 'V', '8', 'o', 0,
  /* 13000 */ 'S', 'L', 'W', '8', 'o', 0,
  /* 13006 */ 'S', 'R', 'W', '8', 'o', 0,
  /* 13012 */ 'C', 'N', 'T', 'L', 'Z', 'W', '8', 'o', 0,
  /* 13021 */ 'C', 'N', 'T', 'T', 'Z', 'W', '8', 'o', 0,
  /* 13030 */ 'V', 'C', 'M', 'P', 'N', 'E', 'B', 'o', 0,
  /* 13039 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'B', 'o', 0,
  /* 13049 */ 'E', 'X', 'T', 'S', 'B', 'o', 0,
  /* 13056 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'B', 'o', 0,
  /* 13066 */ 'F', 'S', 'U', 'B', 'o', 0,
  /* 13072 */ 'F', 'M', 'S', 'U', 'B', 'o', 0,
  /* 13079 */ 'F', 'N', 'M', 'S', 'U', 'B', 'o', 0,
  /* 13087 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'B', 'o', 0,
  /* 13097 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'B', 'o', 0,
  /* 13107 */ 'A', 'D', 'D', 'C', 'o', 0,
  /* 13113 */ 'A', 'N', 'D', 'C', 'o', 0,
  /* 13119 */ 'S', 'U', 'B', 'F', 'C', 'o', 0,
  /* 13126 */ 'S', 'U', 'B', 'I', 'C', 'o', 0,
  /* 13133 */ 'A', 'D', 'D', 'I', 'C', 'o', 0,
  /* 13140 */ 'R', 'L', 'D', 'I', 'C', 'o', 0,
  /* 13147 */ 'B', 'C', 'D', 'T', 'R', 'U', 'N', 'C', 'o', 0,
  /* 13157 */ 'B', 'C', 'D', 'U', 'T', 'R', 'U', 'N', 'C', 'o', 0,
  /* 13168 */ 'O', 'R', 'C', 'o', 0,
  /* 13173 */ 'S', 'R', 'A', 'D', 'o', 0,
  /* 13179 */ 'F', 'A', 'D', 'D', 'o', 0,
  /* 13185 */ 'F', 'M', 'A', 'D', 'D', 'o', 0,
  /* 13192 */ 'F', 'N', 'M', 'A', 'D', 'D', 'o', 0,
  /* 13200 */ 'F', 'N', 'E', 'G', 'D', 'o', 0,
  /* 13207 */ 'M', 'U', 'L', 'H', 'D', 'o', 0,
  /* 13214 */ 'F', 'C', 'F', 'I', 'D', 'o', 0,
  /* 13221 */ 'F', 'C', 'T', 'I', 'D', 'o', 0,
  /* 13228 */ 'F', 'S', 'E', 'L', 'D', 'o', 0,
  /* 13235 */ 'M', 'U', 'L', 'L', 'D', 'o', 0,
  /* 13242 */ 'S', 'L', 'D', 'o', 0,
  /* 13247 */ 'F', 'R', 'I', 'M', 'D', 'o', 0,
  /* 13254 */ 'N', 'A', 'N', 'D', 'o', 0,
  /* 13260 */ 'F', 'C', 'P', 'S', 'G', 'N', 'D', 'o', 0,
  /* 13269 */ 'F', 'R', 'I', 'N', 'D', 'o', 0,
  /* 13276 */ 'F', 'R', 'I', 'P', 'D', 'o', 0,
  /* 13283 */ 'S', 'R', 'D', 'o', 0,
  /* 13288 */ 'F', 'A', 'B', 'S', 'D', 'o', 0,
  /* 13295 */ 'F', 'N', 'A', 'B', 'S', 'D', 'o', 0,
  /* 13303 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'D', 'o', 0,
  /* 13313 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'D', 'o', 0,
  /* 13323 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'D', 'o', 0,
  /* 13333 */ 'D', 'I', 'V', 'D', 'o', 0,
  /* 13339 */ 'F', 'R', 'I', 'Z', 'D', 'o', 0,
  /* 13346 */ 'C', 'N', 'T', 'L', 'Z', 'D', 'o', 0,
  /* 13354 */ 'C', 'N', 'T', 'T', 'Z', 'D', 'o', 0,
  /* 13362 */ 'A', 'D', 'D', 'E', 'o', 0,
  /* 13368 */ 'D', 'I', 'V', 'D', 'E', 'o', 0,
  /* 13375 */ 'S', 'U', 'B', 'F', 'E', 'o', 0,
  /* 13382 */ 'A', 'D', 'D', 'M', 'E', 'o', 0,
  /* 13389 */ 'S', 'U', 'B', 'F', 'M', 'E', 'o', 0,
  /* 13397 */ 'F', 'R', 'E', 'o', 0,
  /* 13402 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'o', 0,
  /* 13411 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', 'o', 0,
  /* 13421 */ 'D', 'I', 'V', 'W', 'E', 'o', 0,
  /* 13428 */ 'A', 'D', 'D', 'Z', 'E', 'o', 0,
  /* 13435 */ 'S', 'U', 'B', 'F', 'Z', 'E', 'o', 0,
  /* 13443 */ 'S', 'U', 'B', 'F', 'o', 0,
  /* 13449 */ 'M', 'T', 'F', 'S', 'F', 'o', 0,
  /* 13456 */ 'N', 'E', 'G', 'o', 0,
  /* 13461 */ 'V', 'C', 'M', 'P', 'N', 'E', 'H', 'o', 0,
  /* 13470 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'H', 'o', 0,
  /* 13480 */ 'E', 'X', 'T', 'S', 'H', 'o', 0,
  /* 13487 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'H', 'o', 0,
  /* 13497 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'H', 'o', 0,
  /* 13507 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'H', 'o', 0,
  /* 13517 */ 'S', 'R', 'A', 'D', 'I', 'o', 0,
  /* 13524 */ 'C', 'L', 'R', 'L', 'S', 'L', 'D', 'I', 'o', 0,
  /* 13534 */ 'E', 'X', 'T', 'L', 'D', 'I', 'o', 0,
  /* 13542 */ 'A', 'N', 'D', 'I', 'o', 0,
  /* 13548 */ 'C', 'L', 'R', 'R', 'D', 'I', 'o', 0,
  /* 13556 */ 'I', 'N', 'S', 'R', 'D', 'I', 'o', 0,
  /* 13564 */ 'R', 'O', 'T', 'R', 'D', 'I', 'o', 0,
  /* 13572 */ 'E', 'X', 'T', 'R', 'D', 'I', 'o', 0,
  /* 13580 */ 'M', 'T', 'F', 'S', 'F', 'I', 'o', 0,
  /* 13588 */ 'R', 'L', 'D', 'I', 'M', 'I', 'o', 0,
  /* 13596 */ 'R', 'L', 'W', 'I', 'M', 'I', 'o', 0,
  /* 13604 */ 'S', 'R', 'A', 'W', 'I', 'o', 0,
  /* 13611 */ 'C', 'L', 'R', 'L', 'S', 'L', 'W', 'I', 'o', 0,
  /* 13621 */ 'I', 'N', 'S', 'L', 'W', 'I', 'o', 0,
  /* 13629 */ 'E', 'X', 'T', 'L', 'W', 'I', 'o', 0,
  /* 13637 */ 'C', 'L', 'R', 'R', 'W', 'I', 'o', 0,
  /* 13645 */ 'I', 'N', 'S', 'R', 'W', 'I', 'o', 0,
  /* 13653 */ 'R', 'O', 'T', 'R', 'W', 'I', 'o', 0,
  /* 13661 */ 'E', 'X', 'T', 'R', 'W', 'I', 'o', 0,
  /* 13669 */ 'R', 'L', 'D', 'C', 'L', 'o', 0,
  /* 13676 */ 'R', 'L', 'D', 'I', 'C', 'L', 'o', 0,
  /* 13684 */ 'F', 'M', 'U', 'L', 'o', 0,
  /* 13690 */ 'R', 'L', 'W', 'I', 'N', 'M', 'o', 0,
  /* 13698 */ 'R', 'L', 'W', 'N', 'M', 'o', 0,
  /* 13705 */ 'B', 'C', 'D', 'C', 'F', 'N', 'o', 0,
  /* 13713 */ 'B', 'C', 'D', 'C', 'P', 'S', 'G', 'N', 'o', 0,
  /* 13723 */ 'B', 'C', 'D', 'S', 'E', 'T', 'S', 'G', 'N', 'o', 0,
  /* 13734 */ 'B', 'C', 'D', 'C', 'T', 'N', 'o', 0,
  /* 13742 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'D', 'P', 'o', 0,
  /* 13753 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'D', 'P', 'o', 0,
  /* 13764 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'D', 'P', 'o', 0,
  /* 13775 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'D', 'P', 'o', 0,
  /* 13786 */ 'V', 'C', 'M', 'P', 'B', 'F', 'P', 'o', 0,
  /* 13795 */ 'V', 'C', 'M', 'P', 'G', 'E', 'F', 'P', 'o', 0,
  /* 13805 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'F', 'P', 'o', 0,
  /* 13815 */ 'V', 'C', 'M', 'P', 'G', 'T', 'F', 'P', 'o', 0,
  /* 13825 */ 'X', 'V', 'C', 'M', 'P', 'G', 'E', 'S', 'P', 'o', 0,
  /* 13836 */ 'X', 'V', 'C', 'M', 'P', 'N', 'E', 'S', 'P', 'o', 0,
  /* 13847 */ 'X', 'V', 'C', 'M', 'P', 'E', 'Q', 'S', 'P', 'o', 0,
  /* 13858 */ 'F', 'R', 'S', 'P', 'o', 0,
  /* 13864 */ 'X', 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'P', 'o', 0,
  /* 13875 */ 'B', 'C', 'D', 'C', 'F', 'S', 'Q', 'o', 0,
  /* 13884 */ 'B', 'C', 'D', 'C', 'T', 'S', 'Q', 'o', 0,
  /* 13893 */ 'R', 'L', 'D', 'C', 'R', 'o', 0,
  /* 13900 */ 'R', 'L', 'D', 'I', 'C', 'R', 'o', 0,
  /* 13908 */ 'F', 'M', 'R', 'o', 0,
  /* 13913 */ 'N', 'O', 'R', 'o', 0,
  /* 13918 */ 'X', 'O', 'R', 'o', 0,
  /* 13923 */ 'B', 'C', 'D', 'S', 'R', 'o', 0,
  /* 13930 */ 'F', 'S', 'U', 'B', 'S', 'o', 0,
  /* 13937 */ 'F', 'M', 'S', 'U', 'B', 'S', 'o', 0,
  /* 13945 */ 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'o', 0,
  /* 13954 */ 'B', 'C', 'D', 'S', 'o', 0,
  /* 13960 */ 'F', 'A', 'D', 'D', 'S', 'o', 0,
  /* 13967 */ 'F', 'M', 'A', 'D', 'D', 'S', 'o', 0,
  /* 13975 */ 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'o', 0,
  /* 13984 */ 'F', 'C', 'F', 'I', 'D', 'S', 'o', 0,
  /* 13992 */ 'F', 'R', 'E', 'S', 'o', 0,
  /* 13998 */ 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 'o', 0,
  /* 14008 */ 'M', 'F', 'F', 'S', 'o', 0,
  /* 14014 */ 'F', 'N', 'E', 'G', 'S', 'o', 0,
  /* 14021 */ 'A', 'N', 'D', 'I', 'S', 'o', 0,
  /* 14028 */ 'F', 'S', 'E', 'L', 'S', 'o', 0,
  /* 14035 */ 'F', 'M', 'U', 'L', 'S', 'o', 0,
  /* 14042 */ 'F', 'R', 'I', 'M', 'S', 'o', 0,
  /* 14049 */ 'F', 'C', 'P', 'S', 'G', 'N', 'S', 'o', 0,
  /* 14058 */ 'F', 'R', 'I', 'N', 'S', 'o', 0,
  /* 14065 */ 'F', 'R', 'I', 'P', 'S', 'o', 0,
  /* 14072 */ 'F', 'A', 'B', 'S', 'S', 'o', 0,
  /* 14079 */ 'F', 'N', 'A', 'B', 'S', 'S', 'o', 0,
  /* 14087 */ 'F', 'S', 'Q', 'R', 'T', 'S', 'o', 0,
  /* 14095 */ 'B', 'C', 'D', 'U', 'S', 'o', 0,
  /* 14102 */ 'F', 'C', 'F', 'I', 'D', 'U', 'S', 'o', 0,
  /* 14111 */ 'F', 'D', 'I', 'V', 'S', 'o', 0,
  /* 14118 */ 'F', 'R', 'I', 'Z', 'S', 'o', 0,
  /* 14125 */ 'F', 'S', 'Q', 'R', 'T', 'o', 0,
  /* 14132 */ 'M', 'U', 'L', 'H', 'D', 'U', 'o', 0,
  /* 14140 */ 'F', 'C', 'F', 'I', 'D', 'U', 'o', 0,
  /* 14148 */ 'D', 'I', 'V', 'D', 'U', 'o', 0,
  /* 14155 */ 'D', 'I', 'V', 'D', 'E', 'U', 'o', 0,
  /* 14163 */ 'D', 'I', 'V', 'W', 'E', 'U', 'o', 0,
  /* 14171 */ 'M', 'U', 'L', 'H', 'W', 'U', 'o', 0,
  /* 14179 */ 'D', 'I', 'V', 'W', 'U', 'o', 0,
  /* 14186 */ 'F', 'D', 'I', 'V', 'o', 0,
  /* 14192 */ 'E', 'Q', 'V', 'o', 0,
  /* 14197 */ 'S', 'R', 'A', 'W', 'o', 0,
  /* 14203 */ 'V', 'C', 'M', 'P', 'N', 'E', 'W', 'o', 0,
  /* 14212 */ 'M', 'U', 'L', 'H', 'W', 'o', 0,
  /* 14219 */ 'F', 'C', 'T', 'I', 'W', 'o', 0,
  /* 14226 */ 'M', 'U', 'L', 'L', 'W', 'o', 0,
  /* 14233 */ 'S', 'L', 'W', 'o', 0,
  /* 14238 */ 'S', 'R', 'W', 'o', 0,
  /* 14243 */ 'V', 'C', 'M', 'P', 'G', 'T', 'S', 'W', 'o', 0,
  /* 14253 */ 'E', 'X', 'T', 'S', 'W', 'o', 0,
  /* 14260 */ 'V', 'C', 'M', 'P', 'E', 'Q', 'U', 'W', 'o', 0,
  /* 14270 */ 'V', 'C', 'M', 'P', 'G', 'T', 'U', 'W', 'o', 0,
  /* 14280 */ 'D', 'I', 'V', 'W', 'o', 0,
  /* 14286 */ 'V', 'C', 'M', 'P', 'N', 'E', 'Z', 'W', 'o', 0,
  /* 14296 */ 'C', 'N', 'T', 'L', 'Z', 'W', 'o', 0,
  /* 14304 */ 'C', 'N', 'T', 'T', 'Z', 'W', 'o', 0,
  /* 14312 */ 'F', 'C', 'T', 'I', 'D', 'Z', 'o', 0,
  /* 14320 */ 'B', 'C', 'D', 'C', 'F', 'Z', 'o', 0,
  /* 14328 */ 'B', 'C', 'D', 'C', 'T', 'Z', 'o', 0,
  /* 14336 */ 'F', 'C', 'T', 'I', 'D', 'U', 'Z', 'o', 0,
  /* 14345 */ 'F', 'C', 'T', 'I', 'W', 'U', 'Z', 'o', 0,
  /* 14354 */ 'F', 'C', 'T', 'I', 'W', 'Z', 'o', 0,
  /* 14362 */ 'B', 'D', 'Z', 'L', 'A', 'p', 0,
  /* 14369 */ 'B', 'D', 'N', 'Z', 'L', 'A', 'p', 0,
  /* 14377 */ 'B', 'D', 'Z', 'A', 'p', 0,
  /* 14383 */ 'B', 'D', 'N', 'Z', 'A', 'p', 0,
  /* 14390 */ 'B', 'D', 'Z', 'L', 'R', 'L', 'p', 0,
  /* 14398 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'L', 'p', 0,
  /* 14407 */ 'B', 'D', 'Z', 'L', 'p', 0,
  /* 14413 */ 'B', 'D', 'N', 'Z', 'L', 'p', 0,
  /* 14420 */ 'B', 'D', 'Z', 'L', 'R', 'p', 0,
  /* 14427 */ 'B', 'D', 'N', 'Z', 'L', 'R', 'p', 0,
  /* 14435 */ 'B', 'D', 'Z', 'p', 0,
  /* 14440 */ 'B', 'D', 'N', 'Z', 'p', 0,
  /* 14446 */ 'M', 'T', 'C', 'T', 'R', '8', 'l', 'o', 'o', 'p', 0,
  /* 14457 */ 'M', 'T', 'C', 'T', 'R', 'l', 'o', 'o', 'p', 0,
  /* 14467 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 0,
  /* 14481 */ 'Q', 'V', 'F', 'N', 'E', 'G', 's', 0,
  /* 14489 */ 'Q', 'V', 'A', 'L', 'I', 'G', 'N', 'I', 's', 0,
  /* 14499 */ 'Q', 'V', 'E', 'S', 'P', 'L', 'A', 'T', 'I', 's', 0,
  /* 14510 */ 'Q', 'V', 'F', 'L', 'O', 'G', 'I', 'C', 'A', 'L', 's', 0,
  /* 14522 */ 'Q', 'V', 'F', 'R', 'I', 'M', 's', 0,
  /* 14530 */ 'Q', 'V', 'F', 'P', 'E', 'R', 'M', 's', 0,
  /* 14539 */ 'Q', 'V', 'F', 'C', 'P', 'S', 'G', 'N', 's', 0,
  /* 14549 */ 'Q', 'V', 'F', 'R', 'I', 'N', 's', 0,
  /* 14557 */ 'Q', 'V', 'F', 'R', 'I', 'P', 's', 0,
  /* 14565 */ 'Q', 'V', 'F', 'R', 'S', 'P', 's', 0,
  /* 14573 */ 'Q', 'V', 'F', 'M', 'R', 's', 0,
  /* 14580 */ 'Q', 'V', 'F', 'A', 'B', 'S', 's', 0,
  /* 14588 */ 'Q', 'V', 'F', 'N', 'A', 'B', 'S', 's', 0,
  /* 14597 */ 'Q', 'V', 'F', 'S', 'U', 'B', 'S', 's', 0,
  /* 14606 */ 'Q', 'V', 'F', 'M', 'S', 'U', 'B', 'S', 's', 0,
  /* 14616 */ 'Q', 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 's', 0,
  /* 14627 */ 'Q', 'V', 'F', 'A', 'D', 'D', 'S', 's', 0,
  /* 14636 */ 'Q', 'V', 'F', 'M', 'A', 'D', 'D', 'S', 's', 0,
  /* 14646 */ 'Q', 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 's', 0,
  /* 14657 */ 'Q', 'V', 'F', 'R', 'E', 'S', 's', 0,
  /* 14665 */ 'Q', 'V', 'F', 'R', 'S', 'Q', 'R', 'T', 'E', 'S', 's', 0,
  /* 14677 */ 'Q', 'V', 'F', 'M', 'U', 'L', 'S', 's', 0,
  /* 14686 */ 'Q', 'V', 'L', 'F', 'C', 'S', 'X', 's', 0,
  /* 14695 */ 'Q', 'V', 'S', 'T', 'F', 'C', 'S', 'X', 's', 0,
  /* 14705 */ 'Q', 'V', 'L', 'F', 'S', 'X', 's', 0,
  /* 14713 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'X', 's', 0,
  /* 14722 */ 'Q', 'V', 'S', 'T', 'F', 'S', 'U', 'X', 's', 0,
  /* 14732 */ 'Q', 'V', 'F', 'R', 'I', 'Z', 's', 0,
  /* 14740 */ 'Q', 'V', 'F', 'S', 'E', 'L', 'b', 's', 0,
  /* 14749 */ 'Q', 'V', 'F', 'T', 'S', 'T', 'N', 'A', 'N', 'b', 's', 0,
  /* 14761 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'E', 'Q', 'b', 's', 0,
  /* 14772 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'G', 'T', 'b', 's', 0,
  /* 14783 */ 'Q', 'V', 'F', 'C', 'M', 'P', 'L', 'T', 'b', 's', 0,
  /* 14794 */ 'B', 'C', 'L', 'a', 'l', 'w', 'a', 'y', 's', 0,
  /* 14804 */ 'Q', 'V', 'L', 'P', 'C', 'L', 'S', 'X', 'i', 'n', 't', 0,
  /* 14816 */ 'M', 'F', 'V', 'R', 'S', 'A', 'V', 'E', 'v', 0,
  /* 14826 */ 'M', 'T', 'V', 'R', 'S', 'A', 'V', 'E', 'v', 0,
  /* 14836 */ 'L', 'A', 'x', 0,
  /* 14840 */ 'C', 'P', '_', 'P', 'A', 'S', 'T', 'E', 'x', 0,
  /* 14850 */ 'D', 'C', 'B', 'T', 'x', 0,
  /* 14856 */ 'D', 'C', 'B', 'T', 'S', 'T', 'x', 0,
  /* 14864 */ 'C', 'P', '_', 'C', 'O', 'P', 'Y', 'x', 0,
  /* 14873 */ 'F', 'A', 'D', 'D', 'r', 't', 'z', 0,
};

extern const unsigned PPCInstrNameIndices[] = {
    5120U, 6045U, 6268U, 5560U, 5551U, 5606U, 4589U, 4604U, 
    4455U, 4618U, 9288U, 4342U, 4200U, 12215U, 4271U, 9913U, 
    3955U, 6484U, 9863U, 3993U, 9852U, 4291U, 7429U, 7446U, 
    8507U, 9704U, 3770U, 8678U, 8367U, 850U, 9194U, 12820U, 
    1268U, 9202U, 12377U, 12862U, 3270U, 1219U, 12834U, 13107U, 
    4213U, 1279U, 12875U, 13362U, 4990U, 1401U, 3318U, 1238U, 
    13133U, 9164U, 1839U, 2451U, 55U, 2435U, 2409U, 2422U, 
    2398U, 5817U, 349U, 5783U, 309U, 8436U, 363U, 5794U, 
    322U, 8451U, 380U, 5774U, 4278U, 1292U, 12890U, 13382U, 
    4432U, 1317U, 12918U, 13428U, 6309U, 8216U, 3912U, 1274U, 
    12869U, 3278U, 1225U, 12841U, 13113U, 14021U, 2166U, 13542U, 
    2159U, 9813U, 1873U, 9828U, 1889U, 13255U, 1039U, 209U, 
    634U, 1572U, 921U, 91U, 516U, 1460U, 962U, 132U, 
    557U, 1499U, 1119U, 289U, 714U, 1658U, 1003U, 173U, 
    598U, 1538U, 941U, 111U, 536U, 1479U, 1079U, 249U, 
    674U, 1610U, 901U, 71U, 496U, 1428U, 1098U, 268U, 
    693U, 1638U, 982U, 152U, 577U, 1518U, 1059U, 229U, 
    654U, 1591U, 1023U, 193U, 618U, 1557U, 6304U, 2899U, 
    2288U, 3263U, 3266U, 2311U, 8738U, 1817U, 5672U, 1702U, 
    5533U, 2663U, 8542U, 5636U, 8732U, 1810U, 12762U, 5665U, 
    1694U, 12753U, 12786U, 12800U, 13705U, 13875U, 14320U, 13713U, 
    13734U, 13884U, 14328U, 13723U, 13923U, 13954U, 13147U, 14095U, 
    13157U, 5529U, 8537U, 5630U, 12779U, 12794U, 14794U, 12774U, 
    8726U, 1804U, 5658U, 1687U, 12556U, 12770U, 12303U, 2112U, 
    2887U, 12635U, 14383U, 5761U, 2675U, 12621U, 14369U, 8564U, 
    1756U, 5650U, 12650U, 14398U, 12679U, 14427U, 12665U, 14413U, 
    12692U, 14440U, 12229U, 2102U, 2882U, 12629U, 14377U, 5756U, 
    2669U, 12614U, 14362U, 8558U, 1749U, 5643U, 12642U, 14390U, 
    12672U, 14420U, 12659U, 14407U, 12687U, 14435U, 5525U, 1677U, 
    7416U, 9225U, 9210U, 12386U, 2653U, 1176U, 7407U, 8532U, 
    1732U, 5624U, 9218U, 3894U, 3361U, 2998U, 5007U, 13524U, 
    5348U, 13611U, 5038U, 13548U, 5384U, 13637U, 2986U, 1188U, 
    3988U, 5032U, 2991U, 3863U, 5000U, 10729U, 5334U, 3006U, 
    1194U, 10963U, 5378U, 4172U, 13346U, 11228U, 1967U, 13012U, 
    14296U, 4185U, 13354U, 11241U, 1975U, 13021U, 14304U, 9935U, 
    12212U, 2088U, 9999U, 14864U, 4333U, 1307U, 12907U, 9975U, 
    13411U, 14840U, 9729U, 9750U, 3938U, 3283U, 10245U, 3924U, 
    8628U, 8640U, 3502U, 9767U, 9759U, 8666U, 2286U, 4445U, 
    4919U, 9989U, 9678U, 9688U, 8939U, 10013U, 9695U, 8946U, 
    10037U, 14856U, 10026U, 14850U, 12220U, 5750U, 4934U, 4155U, 
    4218U, 10113U, 14155U, 13368U, 10107U, 14148U, 13333U, 11206U, 
    4418U, 10120U, 14163U, 13421U, 10207U, 14179U, 14280U, 9322U, 
    5599U, 9995U, 734U, 10020U, 740U, 10045U, 755U, 10032U, 
    748U, 3403U, 1253U, 9736U, 1858U, 440U, 815U, 458U, 
    833U, 14467U, 10241U, 1947U, 12994U, 14192U, 8772U, 10692U, 
    10337U, 10459U, 10398U, 10520U, 10606U, 3944U, 3290U, 8256U, 
    9342U, 10159U, 9351U, 10168U, 11019U, 11226U, 9502U, 10205U, 
    10251U, 3095U, 4788U, 3776U, 11412U, 4646U, 11504U, 10613U, 
    12114U, 9607U, 11883U, 9630U, 11908U, 9643U, 11922U, 4244U, 
    11478U, 9274U, 11858U, 10140U, 12025U, 9619U, 11896U, 9656U, 
    11936U, 5098U, 6356U, 6346U, 5108U, 2174U, 6103U, 2218U, 
    6147U, 2252U, 6181U, 4468U, 2316U, 10289U, 10764U, 5157U, 
    2477U, 10349U, 10812U, 4534U, 2355U, 10313U, 10788U, 10471U, 
    10884U, 5192U, 2516U, 10410U, 10848U, 10532U, 10920U, 2186U, 
    6115U, 2230U, 6159U, 2264U, 6193U, 4486U, 2336U, 10301U, 
    10776U, 5175U, 2497U, 10386U, 10836U, 4552U, 2375U, 10325U, 
    10800U, 10508U, 10908U, 5219U, 2546U, 10447U, 10872U, 10569U, 
    10944U, 2682U, 4477U, 2326U, 5166U, 2487U, 4543U, 2365U, 
    5201U, 2526U, 10374U, 10824U, 10496U, 10896U, 5210U, 2536U, 
    10435U, 10860U, 10557U, 10932U, 4495U, 2346U, 2198U, 6127U, 
    5184U, 2507U, 2242U, 6171U, 4561U, 2385U, 2208U, 6137U, 
    5228U, 2556U, 2276U, 6205U, 3931U, 4583U, 8634U, 8645U, 
    3508U, 10735U, 5341U, 10619U, 10741U, 5364U, 5088U, 5302U, 
    9180U, 10132U, 9438U, 10193U, 3790U, 11419U, 4652U, 11511U, 
    10626U, 12121U, 4251U, 11486U, 6326U, 11646U, 4424U, 11495U, 
    6476U, 11655U, 10361U, 10483U, 10422U, 10544U, 10648U, 10656U, 
    8672U, 5016U, 13534U, 5371U, 13629U, 5059U, 13572U, 5405U, 
    13661U, 3097U, 1201U, 764U, 12826U, 13049U, 4790U, 1389U, 
    777U, 12948U, 13480U, 11052U, 803U, 12807U, 14253U, 6334U, 
    4037U, 13288U, 9305U, 14072U, 3704U, 8857U, 13960U, 13179U, 
    14873U, 3826U, 8932U, 13984U, 10082U, 9369U, 14102U, 14140U, 
    13214U, 4123U, 9409U, 3968U, 13260U, 9260U, 14049U, 3839U, 
    12310U, 14336U, 12235U, 14312U, 13221U, 10702U, 12320U, 14345U, 
    12330U, 14354U, 14219U, 10228U, 9432U, 14111U, 14186U, 3711U, 
    8865U, 13967U, 13185U, 8596U, 13908U, 3199U, 8838U, 13937U, 
    13072U, 5687U, 9239U, 14035U, 13684U, 4043U, 13295U, 9311U, 
    14079U, 3806U, 13200U, 9072U, 14014U, 3719U, 8874U, 13975U, 
    13192U, 3207U, 8847U, 13945U, 13079U, 4312U, 9036U, 13992U, 
    13397U, 3887U, 13247U, 9254U, 14042U, 3976U, 13269U, 9268U, 
    14058U, 3982U, 13276U, 9282U, 14065U, 4160U, 13339U, 9590U, 
    14118U, 8090U, 13858U, 4325U, 9043U, 13998U, 13402U, 3851U, 
    13228U, 9188U, 14028U, 9944U, 9360U, 14087U, 14125U, 3192U, 
    8830U, 13930U, 13066U, 8479U, 412U, 8466U, 397U, 4924U, 
    9683U, 4940U, 5357U, 13621U, 5045U, 13556U, 5391U, 13645U, 
    5583U, 1681U, 3391U, 2654U, 14836U, 11701U, 5711U, 12225U, 
    2097U, 11579U, 10213U, 1929U, 12076U, 2043U, 12172U, 2070U, 
    3848U, 11707U, 5718U, 9596U, 11725U, 11552U, 11635U, 10098U, 
    12002U, 11447U, 5805U, 335U, 12543U, 2298U, 9895U, 5311U, 
    5767U, 3797U, 10062U, 11987U, 11429U, 11325U, 12192U, 9057U, 
    10148U, 12055U, 11836U, 2394U, 1171U, 11713U, 5725U, 10052U, 
    1905U, 11948U, 2015U, 11310U, 1983U, 11738U, 2001U, 12262U, 
    2107U, 11586U, 10218U, 1935U, 12082U, 2050U, 12185U, 2076U, 
    5127U, 1410U, 9170U, 1846U, 10747U, 5412U, 11345U, 11519U, 
    12129U, 5680U, 8717U, 12094U, 5739U, 2688U, 11719U, 5732U, 
    9667U, 11954U, 11340U, 432U, 425U, 11760U, 2008U, 12337U, 
    2118U, 11593U, 10223U, 1941U, 12088U, 2057U, 12207U, 2082U, 
    12549U, 4073U, 11460U, 12164U, 12177U, 11332U, 12199U, 8112U, 
    11686U, 10262U, 11278U, 11248U, 11821U, 11295U, 5700U, 5611U, 
    11263U, 11876U, 12103U, 8352U, 4503U, 9061U, 11791U, 4192U, 
    8390U, 1726U, 8745U, 1825U, 8372U, 9052U, 14008U, 8548U, 
    1737U, 8700U, 4508U, 1338U, 8683U, 1786U, 8695U, 6254U, 
    3110U, 1208U, 4352U, 14816U, 8402U, 4023U, 3869U, 12341U, 
    3383U, 3397U, 4522U, 1354U, 8751U, 1832U, 14446U, 14457U, 
    8384U, 0U, 48U, 4528U, 5081U, 13580U, 12413U, 13449U, 
    8553U, 1743U, 8706U, 4016U, 4515U, 1346U, 8689U, 1793U, 
    8712U, 6261U, 4361U, 14826U, 8409U, 4030U, 3782U, 2692U, 
    9445U, 12349U, 3818U, 10073U, 14132U, 13207U, 10686U, 10177U, 
    14171U, 14212U, 3857U, 13235U, 5130U, 1407U, 10723U, 14226U, 
    8582U, 8571U, 1764U, 3919U, 1273U, 12868U, 13254U, 4579U, 
    1384U, 12942U, 13456U, 7412U, 1139U, 1151U, 8624U, 1776U, 
    12982U, 13913U, 8618U, 1777U, 12983U, 3498U, 1263U, 12856U, 
    13168U, 5288U, 1423U, 9175U, 1852U, 13914U, 4095U, 11081U, 
    9874U, 9883U, 5243U, 12420U, 14489U, 5292U, 12430U, 14499U, 
    8757U, 14580U, 3702U, 8855U, 14627U, 3824U, 8930U, 10080U, 
    9367U, 12395U, 8247U, 12472U, 14761U, 9773U, 12489U, 14772U, 
    9843U, 12499U, 14783U, 6225U, 14539U, 3837U, 10089U, 12308U, 
    12233U, 12404U, 10700U, 10184U, 12318U, 12328U, 5514U, 12441U, 
    14510U, 3709U, 8863U, 14636U, 8594U, 12482U, 14573U, 3197U, 
    8836U, 14606U, 5685U, 9237U, 14677U, 8764U, 14588U, 4576U, 
    14481U, 3717U, 8872U, 14646U, 3205U, 8845U, 14616U, 6024U, 
    14530U, 4310U, 9034U, 14657U, 5962U, 14522U, 6247U, 14549U, 
    7400U, 14557U, 12296U, 14732U, 8088U, 14565U, 4323U, 9041U, 
    14665U, 5576U, 12453U, 12534U, 14740U, 3190U, 8828U, 14597U, 
    6215U, 12461U, 14749U, 3751U, 8909U, 5692U, 9245U, 3726U, 
    8882U, 3760U, 8919U, 3739U, 8896U, 4967U, 11966U, 2782U, 
    11395U, 2710U, 12034U, 2822U, 11804U, 2746U, 14686U, 11985U, 
    2803U, 11427U, 2729U, 12509U, 11323U, 2700U, 12190U, 2872U, 
    12053U, 2843U, 11834U, 2765U, 12526U, 14705U, 11442U, 11849U, 
    14804U, 11451U, 11867U, 11975U, 2792U, 5465U, 2607U, 11403U, 
    2719U, 5427U, 2565U, 12043U, 2832U, 5486U, 2630U, 11812U, 
    2755U, 5446U, 2586U, 14695U, 11993U, 2812U, 5476U, 2619U, 
    11434U, 2737U, 5437U, 2576U, 12517U, 12142U, 2862U, 12061U, 
    2852U, 5497U, 2642U, 14722U, 11841U, 2773U, 5456U, 2597U, 
    14713U, 8416U, 9787U, 4370U, 4956U, 4995U, 2907U, 5077U, 
    3832U, 4961U, 5538U, 13669U, 8378U, 13893U, 3324U, 5544U, 
    790U, 13676U, 8395U, 13900U, 13140U, 5143U, 13588U, 5150U, 
    1414U, 12956U, 12698U, 13596U, 12724U, 5976U, 1711U, 12965U, 
    12707U, 13690U, 12734U, 5984U, 1719U, 12974U, 12716U, 13698U, 
    12744U, 5052U, 13564U, 5398U, 13653U, 3144U, 3624U, 855U, 
    1361U, 878U, 1447U, 3412U, 3439U, 3541U, 3514U, 3466U, 
    3597U, 3568U, 868U, 1374U, 891U, 1628U, 3427U, 3454U, 
    3556U, 3529U, 3482U, 3612U, 3584U, 2465U, 4259U, 4569U, 
    4224U, 4316U, 3367U, 3883U, 5011U, 13528U, 13242U, 10743U, 
    1952U, 13000U, 5352U, 13615U, 14233U, 8427U, 9801U, 4399U, 
    3683U, 4984U, 13517U, 13173U, 10593U, 5320U, 13604U, 14197U, 
    4019U, 5047U, 13558U, 13283U, 10975U, 1957U, 13006U, 5393U, 
    13647U, 14238U, 3140U, 1214U, 11545U, 11371U, 10057U, 1911U, 
    11960U, 2022U, 11366U, 1989U, 4112U, 9601U, 11731U, 11558U, 
    11377U, 10102U, 12007U, 11473U, 3801U, 10067U, 11995U, 11436U, 
    12144U, 9067U, 10153U, 12063U, 11843U, 4828U, 1396U, 11744U, 
    11565U, 11383U, 10127U, 1917U, 12019U, 2029U, 11540U, 1995U, 
    10751U, 7424U, 5417U, 11351U, 11525U, 12135U, 12098U, 5744U, 
    11108U, 1962U, 9672U, 11766U, 11572U, 11389U, 10200U, 1923U, 
    12070U, 2036U, 12159U, 2064U, 4078U, 11466U, 11358U, 11532U, 
    12151U, 8118U, 11693U, 10266U, 11286U, 11255U, 11302U, 5705U, 
    5617U, 11270U, 12108U, 4450U, 1332U, 12935U, 3306U, 1231U, 
    12848U, 13119U, 4238U, 1285U, 12882U, 13375U, 3330U, 1245U, 
    4284U, 1299U, 12898U, 13389U, 4438U, 1324U, 12926U, 13435U, 
    13443U, 4929U, 3312U, 13126U, 9158U, 3370U, 9928U, 3297U, 
    4946U, 3627U, 4974U, 2962U, 1181U, 2291U, 1163U, 8722U, 
    1800U, 6240U, 5507U, 9718U, 12581U, 2123U, 12592U, 2135U, 
    12603U, 2147U, 4091U, 5066U, 3950U, 2471U, 4265U, 5569U, 
    11315U, 3845U, 5124U, 4304U, 475U, 11798U, 489U, 3663U, 
    3375U, 4412U, 482U, 6493U, 9904U, 5923U, 8713U, 11069U, 
    5423U, 4385U, 8357U, 8305U, 11120U, 8333U, 6015U, 7271U, 
    8795U, 9116U, 9470U, 5846U, 8820U, 5871U, 5906U, 9141U, 
    5998U, 6087U, 9494U, 3945U, 3291U, 3039U, 4732U, 10987U, 
    3159U, 4840U, 11136U, 3893U, 8264U, 11828U, 32U, 12013U, 
    40U, 8499U, 9963U, 3250U, 4166U, 4907U, 2913U, 11220U, 
    7239U, 13786U, 7327U, 13805U, 3181U, 13056U, 4130U, 13313U, 
    4862U, 13487U, 11158U, 14260U, 7286U, 13795U, 7336U, 13815U, 
    3086U, 13039U, 4057U, 13303U, 4779U, 13470U, 11043U, 14243U, 
    3225U, 13087U, 4139U, 13323U, 4882U, 13497U, 11190U, 14270U, 
    2931U, 13030U, 4659U, 13461U, 10640U, 14203U, 3241U, 13097U, 
    4898U, 13507U, 11211U, 14286U, 9576U, 14U, 9583U, 23U, 
    3256U, 4179U, 4913U, 2922U, 11235U, 10252U, 7301U, 4084U, 
    3214U, 4871U, 11167U, 3636U, 10271U, 3645U, 10280U, 3654U, 
    11608U, 11751U, 11617U, 11773U, 11626U, 11782U, 3688U, 3131U, 
    4103U, 4819U, 11089U, 7278U, 7263U, 7345U, 3103U, 4066U, 
    4796U, 11058U, 3234U, 4148U, 4891U, 11199U, 9095U, 9105U, 
    7320U, 3071U, 4050U, 4764U, 11028U, 3166U, 4116U, 4847U, 
    11143U, 5896U, 10633U, 2939U, 4667U, 10671U, 2955U, 4674U, 
    10708U, 10956U, 5829U, 5879U, 9124U, 5854U, 5914U, 9149U, 
    8287U, 8313U, 8342U, 8278U, 3017U, 4710U, 10979U, 3151U, 
    4832U, 11128U, 3078U, 4771U, 11035U, 3173U, 4854U, 11150U, 
    6095U, 3932U, 8490U, 9950U, 3812U, 10665U, 7247U, 8635U, 
    8646U, 3509U, 6032U, 8600U, 8657U, 11672U, 9318U, 9377U, 
    9326U, 9393U, 9334U, 9416U, 6055U, 9385U, 6063U, 9401U, 
    6071U, 9424U, 2978U, 3901U, 4691U, 10756U, 3122U, 4094U, 
    4810U, 11080U, 3694U, 8239U, 10598U, 7295U, 5932U, 6234U, 
    7370U, 12266U, 2968U, 3877U, 5136U, 5969U, 4681U, 10736U, 
    5236U, 5983U, 7310U, 11640U, 5588U, 3671U, 10581U, 5681U, 
    2973U, 3882U, 5252U, 4686U, 6368U, 10233U, 10742U, 3115U, 
    4803U, 3054U, 4747U, 11002U, 11065U, 8718U, 2901U, 3682U, 
    4640U, 10592U, 3012U, 4025U, 4705U, 6471U, 10257U, 10974U, 
    8297U, 11112U, 8324U, 6006U, 7256U, 8787U, 9087U, 9462U, 
    5838U, 8812U, 5863U, 5888U, 9133U, 5990U, 6079U, 9486U, 
    9453U, 8778U, 9078U, 8803U, 9478U, 11664U, 3046U, 4739U, 
    10994U, 11678U, 3063U, 4756U, 11011U, 8673U, 7U, 2893U, 
    4632U, 9021U, 3025U, 4718U, 9782U, 4232U, 5070U, 8653U, 
    1781U, 12988U, 5287U, 1422U, 9174U, 1851U, 13918U, 7086U, 
    7632U, 6636U, 7515U, 6434U, 7786U, 7048U, 7019U, 7603U, 
    6692U, 7102U, 6712U, 6956U, 7576U, 7160U, 7649U, 6920U, 
    7566U, 7352U, 7585U, 8033U, 6294U, 8955U, 9510U, 8988U, 
    9543U, 6965U, 6974U, 6373U, 12242U, 12357U, 12252U, 12367U, 
    7523U, 6983U, 6284U, 6652U, 7802U, 7532U, 6672U, 7822U, 
    7169U, 7658U, 6462U, 8163U, 7001U, 7594U, 6562U, 7730U, 
    6900U, 7995U, 7506U, 6424U, 6627U, 7223U, 6811U, 6618U, 
    6940U, 6802U, 6520U, 7688U, 6858U, 7953U, 7469U, 6394U, 
    6820U, 7558U, 6443U, 7915U, 7068U, 7623U, 6768U, 7541U, 
    6540U, 7708U, 6878U, 7973U, 7496U, 6413U, 6498U, 7666U, 
    6836U, 7931U, 7459U, 6383U, 5259U, 3337U, 5938U, 7376U, 
    12272U, 6732U, 7862U, 5273U, 11600U, 8231U, 6746U, 7876U, 
    7122U, 7640U, 6452U, 8135U, 6582U, 7478U, 6404U, 7750U, 
    7177U, 7131U, 6598U, 7486U, 7766U, 7030U, 7614U, 6784U, 
    7549U, 7094U, 8104U, 6644U, 7794U, 7058U, 13764U, 8078U, 
    13847U, 6702U, 13742U, 7842U, 13825U, 7112U, 13775U, 8125U, 
    13864U, 6722U, 13753U, 7852U, 13836U, 6930U, 8015U, 8042U, 
    8966U, 9521U, 8999U, 9554U, 8051U, 6992U, 7361U, 8977U, 
    9532U, 9010U, 9565U, 6662U, 7812U, 7203U, 8188U, 6682U, 
    7832U, 7213U, 8198U, 7195U, 8180U, 7010U, 8060U, 6572U, 
    7740U, 6910U, 8005U, 7231U, 8208U, 6948U, 8025U, 6530U, 
    7698U, 6868U, 7963U, 6828U, 7923U, 7077U, 8095U, 6776U, 
    7898U, 6551U, 7719U, 6889U, 7984U, 6509U, 7677U, 6847U, 
    7942U, 5266U, 3345U, 5946U, 7384U, 12280U, 6739U, 7869U, 
    5280U, 3353U, 5954U, 7392U, 12288U, 6757U, 7887U, 7151U, 
    8154U, 6590U, 7758U, 7186U, 8171U, 7141U, 8144U, 6608U, 
    7776U, 7039U, 8069U, 6793U, 7906U, 4010U, 4699U, 8272U, 
    10968U, 11178U, 11098U, 3909U, 3275U, 10238U, 3916U, 8621U, 
    8615U, 3495U, 12574U, 8650U, 10678U, 10715U, 6038U, 5023U, 
    8607U, 5593U, 5326U, 2946U, 11072U, 3262U, 2306U, 8731U, 
    5664U, 5528U, 2657U, 8536U, 5629U, 
};

static inline void InitPPCMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(PPCInsts, PPCInstrNameIndices, PPCInstrNameData, 1853);
}

} // end llvm namespace
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct PPCGenInstrInfo : public TargetInstrInfo {
  explicit PPCGenInstrInfo(int CFSetupOpcode = -1, int CFDestroyOpcode = -1, int CatchRetOpcode = -1, int ReturnOpcode = -1);
  ~PPCGenInstrInfo() override {}
};
} // end llvm namespace
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc PPCInsts[];
extern const unsigned PPCInstrNameIndices[];
extern const char PPCInstrNameData[];
PPCGenInstrInfo::PPCGenInstrInfo(int CFSetupOpcode, int CFDestroyOpcode, int CatchRetOpcode, int ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(PPCInsts, PPCInstrNameIndices, PPCInstrNameData, 1853);
}
} // end llvm namespace
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace PPC {
namespace OpName {
enum {
OPERAND_LAST
};
} // end namespace OpName
} // end namespace PPC
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace PPC {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace PPC
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace PPC {
namespace OpTypes {
enum OperandType {
  abscalltarget = 0,
  abscondbrtarget = 1,
  absdirectbrtarget = 2,
  calltarget = 3,
  condbrtarget = 4,
  crbitm = 5,
  directbrtarget = 6,
  dispRI = 7,
  dispRIX = 8,
  dispRIX16 = 9,
  dispSPE2 = 10,
  dispSPE4 = 11,
  dispSPE8 = 12,
  f32imm = 13,
  f64imm = 14,
  i16imm = 15,
  i1imm = 16,
  i32imm = 17,
  i64imm = 18,
  i8imm = 19,
  imm32SExt16 = 20,
  imm64SExt16 = 21,
  imm64ZExt32 = 22,
  memr = 23,
  memri = 24,
  memrix = 25,
  memrix16 = 26,
  memrr = 27,
  pred = 28,
  ptr_rc_idx = 29,
  ptr_rc_nor0 = 30,
  s16imm = 31,
  s16imm64 = 32,
  s17imm = 33,
  s17imm64 = 34,
  s5imm = 35,
  spe2dis = 36,
  spe4dis = 37,
  spe8dis = 38,
  tlscall = 39,
  tlscall32 = 40,
  tlsgd = 41,
  tlsgd32 = 42,
  tlsreg = 43,
  tlsreg32 = 44,
  tocentry = 45,
  tocentry32 = 46,
  u10imm = 47,
  u12imm = 48,
  u16imm = 49,
  u16imm64 = 50,
  u1imm = 51,
  u2imm = 52,
  u3imm = 53,
  u4imm = 54,
  u5imm = 55,
  u6imm = 56,
  u7imm = 57,
  u8imm = 58,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace PPC
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace PPC {

enum IsVSXFMAAlt {
	IsVSXFMAAlt_1
};

enum RC {
	RC_0,
	RC_1
};

// getAltVSXFMAOpcode
LLVM_READONLY
int getAltVSXFMAOpcode(uint16_t Opcode) {
static const uint16_t getAltVSXFMAOpcodeTable[][2] = {
  { PPC::XSMADDADP, PPC::XSMADDMDP },
  { PPC::XSMADDASP, PPC::XSMADDMSP },
  { PPC::XSMSUBADP, PPC::XSMSUBMDP },
  { PPC::XSMSUBASP, PPC::XSMSUBMSP },
  { PPC::XSNMADDADP, PPC::XSNMADDMDP },
  { PPC::XSNMADDASP, PPC::XSNMADDMSP },
  { PPC::XSNMSUBADP, PPC::XSNMSUBMDP },
  { PPC::XSNMSUBASP, PPC::XSNMSUBMSP },
  { PPC::XVMADDADP, PPC::XVMADDMDP },
  { PPC::XVMADDASP, PPC::XVMADDMSP },
  { PPC::XVMSUBADP, PPC::XVMSUBMDP },
  { PPC::XVMSUBASP, PPC::XVMSUBMSP },
  { PPC::XVNMADDADP, PPC::XVNMADDMDP },
  { PPC::XVNMADDASP, PPC::XVNMADDMSP },
  { PPC::XVNMSUBADP, PPC::XVNMSUBMDP },
  { PPC::XVNMSUBASP, PPC::XVNMSUBMSP },
}; // End of getAltVSXFMAOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 16;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getAltVSXFMAOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getAltVSXFMAOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getAltVSXFMAOpcodeTable[mid][1];
}

// getNonRecordFormOpcode
LLVM_READONLY
int getNonRecordFormOpcode(uint16_t Opcode) {
static const uint16_t getNonRecordFormOpcodeTable[][2] = {
  { PPC::ADD4o, PPC::ADD4 },
  { PPC::ADD8o, PPC::ADD8 },
  { PPC::ADDC8o, PPC::ADDC8 },
  { PPC::ADDCo, PPC::ADDC },
  { PPC::ADDE8o, PPC::ADDE8 },
  { PPC::ADDEo, PPC::ADDE },
  { PPC::ADDICo, PPC::ADDIC },
  { PPC::ADDME8o, PPC::ADDME8 },
  { PPC::ADDMEo, PPC::ADDME },
  { PPC::ADDZE8o, PPC::ADDZE8 },
  { PPC::ADDZEo, PPC::ADDZE },
  { PPC::AND8o, PPC::AND8 },
  { PPC::ANDC8o, PPC::ANDC8 },
  { PPC::ANDCo, PPC::ANDC },
  { PPC::ANDo, PPC::AND },
  { PPC::CNTLZDo, PPC::CNTLZD },
  { PPC::CNTLZW8o, PPC::CNTLZW8 },
  { PPC::CNTLZWo, PPC::CNTLZW },
  { PPC::CNTTZDo, PPC::CNTTZD },
  { PPC::CNTTZW8o, PPC::CNTTZW8 },
  { PPC::CNTTZWo, PPC::CNTTZW },
  { PPC::DIVDUo, PPC::DIVDU },
  { PPC::DIVDo, PPC::DIVD },
  { PPC::DIVWUo, PPC::DIVWU },
  { PPC::DIVWo, PPC::DIVW },
  { PPC::EQV8o, PPC::EQV8 },
  { PPC::EQVo, PPC::EQV },
  { PPC::EXTSB8o, PPC::EXTSB8 },
  { PPC::EXTSBo, PPC::EXTSB },
  { PPC::EXTSH8o, PPC::EXTSH8 },
  { PPC::EXTSHo, PPC::EXTSH },
  { PPC::EXTSW_32_64o, PPC::EXTSW_32_64 },
  { PPC::EXTSWo, PPC::EXTSW },
  { PPC::FABSDo, PPC::FABSD },
  { PPC::FABSSo, PPC::FABSS },
  { PPC::FADDSo, PPC::FADDS },
  { PPC::FADDo, PPC::FADD },
  { PPC::FCFIDSo, PPC::FCFIDS },
  { PPC::FCFIDUSo, PPC::FCFIDUS },
  { PPC::FCFIDUo, PPC::FCFIDU },
  { PPC::FCFIDo, PPC::FCFID },
  { PPC::FCPSGNDo, PPC::FCPSGND },
  { PPC::FCPSGNSo, PPC::FCPSGNS },
  { PPC::FCTIDUZo, PPC::FCTIDUZ },
  { PPC::FCTIDZo, PPC::FCTIDZ },
  { PPC::FCTIDo, PPC::FCTID },
  { PPC::FCTIWUZo, PPC::FCTIWUZ },
  { PPC::FCTIWZo, PPC::FCTIWZ },
  { PPC::FCTIWo, PPC::FCTIW },
  { PPC::FDIVSo, PPC::FDIVS },
  { PPC::FDIVo, PPC::FDIV },
  { PPC::FMADDSo, PPC::FMADDS },
  { PPC::FMADDo, PPC::FMADD },
  { PPC::FMRo, PPC::FMR },
  { PPC::FMSUBSo, PPC::FMSUBS },
  { PPC::FMSUBo, PPC::FMSUB },
  { PPC::FMULSo, PPC::FMULS },
  { PPC::FMULo, PPC::FMUL },
  { PPC::FNABSDo, PPC::FNABSD },
  { PPC::FNABSSo, PPC::FNABSS },
  { PPC::FNEGDo, PPC::FNEGD },
  { PPC::FNEGSo, PPC::FNEGS },
  { PPC::FNMADDSo, PPC::FNMADDS },
  { PPC::FNMADDo, PPC::FNMADD },
  { PPC::FNMSUBSo, PPC::FNMSUBS },
  { PPC::FNMSUBo, PPC::FNMSUB },
  { PPC::FRESo, PPC::FRES },
  { PPC::FREo, PPC::FRE },
  { PPC::FRIMDo, PPC::FRIMD },
  { PPC::FRIMSo, PPC::FRIMS },
  { PPC::FRINDo, PPC::FRIND },
  { PPC::FRINSo, PPC::FRINS },
  { PPC::FRIPDo, PPC::FRIPD },
  { PPC::FRIPSo, PPC::FRIPS },
  { PPC::FRIZDo, PPC::FRIZD },
  { PPC::FRIZSo, PPC::FRIZS },
  { PPC::FRSPo, PPC::FRSP },
  { PPC::FRSQRTESo, PPC::FRSQRTES },
  { PPC::FRSQRTEo, PPC::FRSQRTE },
  { PPC::FSELDo, PPC::FSELD },
  { PPC::FSELSo, PPC::FSELS },
  { PPC::FSQRTSo, PPC::FSQRTS },
  { PPC::FSQRTo, PPC::FSQRT },
  { PPC::FSUBSo, PPC::FSUBS },
  { PPC::FSUBo, PPC::FSUB },
  { PPC::MULHDUo, PPC::MULHDU },
  { PPC::MULHDo, PPC::MULHD },
  { PPC::MULHWUo, PPC::MULHWU },
  { PPC::MULHWo, PPC::MULHW },
  { PPC::MULLDo, PPC::MULLD },
  { PPC::MULLWo, PPC::MULLW },
  { PPC::NAND8o, PPC::NAND8 },
  { PPC::NANDo, PPC::NAND },
  { PPC::NEG8o, PPC::NEG8 },
  { PPC::NEGo, PPC::NEG },
  { PPC::NOR8o, PPC::NOR8 },
  { PPC::NORo, PPC::NOR },
  { PPC::OR8o, PPC::OR8 },
  { PPC::ORC8o, PPC::ORC8 },
  { PPC::ORCo, PPC::ORC },
  { PPC::ORo, PPC::OR },
  { PPC::RLDCLo, PPC::RLDCL },
  { PPC::RLDCRo, PPC::RLDCR },
  { PPC::RLDICLo, PPC::RLDICL },
  { PPC::RLDICRo, PPC::RLDICR },
  { PPC::RLDICo, PPC::RLDIC },
  { PPC::RLDIMIo, PPC::RLDIMI },
  { PPC::RLWIMI8o, PPC::RLWIMI8 },
  { PPC::RLWIMIo, PPC::RLWIMI },
  { PPC::RLWINM8o, PPC::RLWINM8 },
  { PPC::RLWINMo, PPC::RLWINM },
  { PPC::RLWNM8o, PPC::RLWNM8 },
  { PPC::RLWNMo, PPC::RLWNM },
  { PPC::SLDo, PPC::SLD },
  { PPC::SLW8o, PPC::SLW8 },
  { PPC::SLWo, PPC::SLW },
  { PPC::SRADIo, PPC::SRADI },
  { PPC::SRADo, PPC::SRAD },
  { PPC::SRAWIo, PPC::SRAWI },
  { PPC::SRAWo, PPC::SRAW },
  { PPC::SRDo, PPC::SRD },
  { PPC::SRW8o, PPC::SRW8 },
  { PPC::SRWo, PPC::SRW },
  { PPC::SUBF8o, PPC::SUBF8 },
  { PPC::SUBFC8o, PPC::SUBFC8 },
  { PPC::SUBFCo, PPC::SUBFC },
  { PPC::SUBFE8o, PPC::SUBFE8 },
  { PPC::SUBFEo, PPC::SUBFE },
  { PPC::SUBFME8o, PPC::SUBFME8 },
  { PPC::SUBFMEo, PPC::SUBFME },
  { PPC::SUBFZE8o, PPC::SUBFZE8 },
  { PPC::SUBFZEo, PPC::SUBFZE },
  { PPC::SUBFo, PPC::SUBF },
  { PPC::XOR8o, PPC::XOR8 },
  { PPC::XORo, PPC::XOR },
}; // End of getNonRecordFormOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 135;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getNonRecordFormOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getNonRecordFormOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getNonRecordFormOpcodeTable[mid][1];
}

// getRecordFormOpcode
LLVM_READONLY
int getRecordFormOpcode(uint16_t Opcode) {
static const uint16_t getRecordFormOpcodeTable[][2] = {
  { PPC::ADD4, PPC::ADD4o },
  { PPC::ADD8, PPC::ADD8o },
  { PPC::ADDC, PPC::ADDCo },
  { PPC::ADDC8, PPC::ADDC8o },
  { PPC::ADDE, PPC::ADDEo },
  { PPC::ADDE8, PPC::ADDE8o },
  { PPC::ADDIC, PPC::ADDICo },
  { PPC::ADDME, PPC::ADDMEo },
  { PPC::ADDME8, PPC::ADDME8o },
  { PPC::ADDZE, PPC::ADDZEo },
  { PPC::ADDZE8, PPC::ADDZE8o },
  { PPC::AND, PPC::ANDo },
  { PPC::AND8, PPC::AND8o },
  { PPC::ANDC, PPC::ANDCo },
  { PPC::ANDC8, PPC::ANDC8o },
  { PPC::CNTLZD, PPC::CNTLZDo },
  { PPC::CNTLZW, PPC::CNTLZWo },
  { PPC::CNTLZW8, PPC::CNTLZW8o },
  { PPC::CNTTZD, PPC::CNTTZDo },
  { PPC::CNTTZW, PPC::CNTTZWo },
  { PPC::CNTTZW8, PPC::CNTTZW8o },
  { PPC::DIVD, PPC::DIVDo },
  { PPC::DIVDU, PPC::DIVDUo },
  { PPC::DIVW, PPC::DIVWo },
  { PPC::DIVWU, PPC::DIVWUo },
  { PPC::EQV, PPC::EQVo },
  { PPC::EQV8, PPC::EQV8o },
  { PPC::EXTSB, PPC::EXTSBo },
  { PPC::EXTSB8, PPC::EXTSB8o },
  { PPC::EXTSH, PPC::EXTSHo },
  { PPC::EXTSH8, PPC::EXTSH8o },
  { PPC::EXTSW, PPC::EXTSWo },
  { PPC::EXTSW_32_64, PPC::EXTSW_32_64o },
  { PPC::FABSD, PPC::FABSDo },
  { PPC::FABSS, PPC::FABSSo },
  { PPC::FADD, PPC::FADDo },
  { PPC::FADDS, PPC::FADDSo },
  { PPC::FCFID, PPC::FCFIDo },
  { PPC::FCFIDS, PPC::FCFIDSo },
  { PPC::FCFIDU, PPC::FCFIDUo },
  { PPC::FCFIDUS, PPC::FCFIDUSo },
  { PPC::FCPSGND, PPC::FCPSGNDo },
  { PPC::FCPSGNS, PPC::FCPSGNSo },
  { PPC::FCTID, PPC::FCTIDo },
  { PPC::FCTIDUZ, PPC::FCTIDUZo },
  { PPC::FCTIDZ, PPC::FCTIDZo },
  { PPC::FCTIW, PPC::FCTIWo },
  { PPC::FCTIWUZ, PPC::FCTIWUZo },
  { PPC::FCTIWZ, PPC::FCTIWZo },
  { PPC::FDIV, PPC::FDIVo },
  { PPC::FDIVS, PPC::FDIVSo },
  { PPC::FMADD, PPC::FMADDo },
  { PPC::FMADDS, PPC::FMADDSo },
  { PPC::FMR, PPC::FMRo },
  { PPC::FMSUB, PPC::FMSUBo },
  { PPC::FMSUBS, PPC::FMSUBSo },
  { PPC::FMUL, PPC::FMULo },
  { PPC::FMULS, PPC::FMULSo },
  { PPC::FNABSD, PPC::FNABSDo },
  { PPC::FNABSS, PPC::FNABSSo },
  { PPC::FNEGD, PPC::FNEGDo },
  { PPC::FNEGS, PPC::FNEGSo },
  { PPC::FNMADD, PPC::FNMADDo },
  { PPC::FNMADDS, PPC::FNMADDSo },
  { PPC::FNMSUB, PPC::FNMSUBo },
  { PPC::FNMSUBS, PPC::FNMSUBSo },
  { PPC::FRE, PPC::FREo },
  { PPC::FRES, PPC::FRESo },
  { PPC::FRIMD, PPC::FRIMDo },
  { PPC::FRIMS, PPC::FRIMSo },
  { PPC::FRIND, PPC::FRINDo },
  { PPC::FRINS, PPC::FRINSo },
  { PPC::FRIPD, PPC::FRIPDo },
  { PPC::FRIPS, PPC::FRIPSo },
  { PPC::FRIZD, PPC::FRIZDo },
  { PPC::FRIZS, PPC::FRIZSo },
  { PPC::FRSP, PPC::FRSPo },
  { PPC::FRSQRTE, PPC::FRSQRTEo },
  { PPC::FRSQRTES, PPC::FRSQRTESo },
  { PPC::FSELD, PPC::FSELDo },
  { PPC::FSELS, PPC::FSELSo },
  { PPC::FSQRT, PPC::FSQRTo },
  { PPC::FSQRTS, PPC::FSQRTSo },
  { PPC::FSUB, PPC::FSUBo },
  { PPC::FSUBS, PPC::FSUBSo },
  { PPC::MULHD, PPC::MULHDo },
  { PPC::MULHDU, PPC::MULHDUo },
  { PPC::MULHW, PPC::MULHWo },
  { PPC::MULHWU, PPC::MULHWUo },
  { PPC::MULLD, PPC::MULLDo },
  { PPC::MULLW, PPC::MULLWo },
  { PPC::NAND, PPC::NANDo },
  { PPC::NAND8, PPC::NAND8o },
  { PPC::NEG, PPC::NEGo },
  { PPC::NEG8, PPC::NEG8o },
  { PPC::NOR, PPC::NORo },
  { PPC::NOR8, PPC::NOR8o },
  { PPC::OR, PPC::ORo },
  { PPC::OR8, PPC::OR8o },
  { PPC::ORC, PPC::ORCo },
  { PPC::ORC8, PPC::ORC8o },
  { PPC::RLDCL, PPC::RLDCLo },
  { PPC::RLDCR, PPC::RLDCRo },
  { PPC::RLDIC, PPC::RLDICo },
  { PPC::RLDICL, PPC::RLDICLo },
  { PPC::RLDICR, PPC::RLDICRo },
  { PPC::RLDIMI, PPC::RLDIMIo },
  { PPC::RLWIMI, PPC::RLWIMIo },
  { PPC::RLWIMI8, PPC::RLWIMI8o },
  { PPC::RLWINM, PPC::RLWINMo },
  { PPC::RLWINM8, PPC::RLWINM8o },
  { PPC::RLWNM, PPC::RLWNMo },
  { PPC::RLWNM8, PPC::RLWNM8o },
  { PPC::SLD, PPC::SLDo },
  { PPC::SLW, PPC::SLWo },
  { PPC::SLW8, PPC::SLW8o },
  { PPC::SRAD, PPC::SRADo },
  { PPC::SRADI, PPC::SRADIo },
  { PPC::SRAW, PPC::SRAWo },
  { PPC::SRAWI, PPC::SRAWIo },
  { PPC::SRD, PPC::SRDo },
  { PPC::SRW, PPC::SRWo },
  { PPC::SRW8, PPC::SRW8o },
  { PPC::SUBF, PPC::SUBFo },
  { PPC::SUBF8, PPC::SUBF8o },
  { PPC::SUBFC, PPC::SUBFCo },
  { PPC::SUBFC8, PPC::SUBFC8o },
  { PPC::SUBFE, PPC::SUBFEo },
  { PPC::SUBFE8, PPC::SUBFE8o },
  { PPC::SUBFME, PPC::SUBFMEo },
  { PPC::SUBFME8, PPC::SUBFME8o },
  { PPC::SUBFZE, PPC::SUBFZEo },
  { PPC::SUBFZE8, PPC::SUBFZE8o },
  { PPC::XOR, PPC::XORo },
  { PPC::XOR8, PPC::XOR8o },
}; // End of getRecordFormOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 135;
  while (start < end) {
    mid = start + (end - start)/2;
    if (Opcode == getRecordFormOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getRecordFormOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getRecordFormOpcodeTable[mid][1];
}

} // End PPC namespace
} // End llvm namespace
#endif // GET_INSTRMAP_INFO

